{
  "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
  "impl": "0xCD21A0B389d6F0bDbE46FFaC86193Fb79D4c0C5E",
  "kind": "uups",
  "args": [
    "0xCD21A0B389d6F0bDbE46FFaC86193Fb79D4c0C5E",
    "0xc4d66de80000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a"
  ],
  "initialize": [
    "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A"
  ],
  "receipt": {
    "to": null,
    "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
    "contractAddress": "0x49eA332539511df9F78046fBE671B3aC2520B486",
    "transactionIndex": 2,
    "gasUsed": {
      "type": "BigNumber",
      "hex": "0x037611"
    },
    "logsBloom": "0x
    "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45",
    "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 1190786,
        "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
        "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x000000000000000000000000cd21a0b389d6f0bdbe46ffac86193fb79d4c0c5e"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 1190786,
        "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
        "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 1190786,
        "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
        "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
        "topics": [
          "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
      }
    ],
    "blockNumber": 1190786,
    "confirmations": 1,
    "cumulativeGasUsed": {
      "type": "BigNumber",
      "hex": "0x069bc0"
    },
    "effectiveGasPrice": {
      "type": "BigNumber",
      "hex": "0x746ad98751"
    },
    "status": 1,
    "type": 2,
    "byzantium": true
  },
  "history": [
    {
      "impl": "0xCD21A0B389d6F0bDbE46FFaC86193Fb79D4c0C5E",
      "receipts": {
        "impl": {
          "to": null,
          "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
          "contractAddress": "0xCD21A0B389d6F0bDbE46FFaC86193Fb79D4c0C5E",
          "transactionIndex": 2,
          "gasUsed": {
            "type": "BigNumber",
            "hex": "0x326313"
          },
          "logsBloom": "0x
          "blockHash": "0x867f5cfd8f6b9df9ebfe06cb1fa41b2d93582d27c88e0c229380b50e6aec3b21",
          "transactionHash": "0x2d60b4bf0825661d61a48dbfac273bf4d5554332f5dd1e4e35c00d7a1d7a3fd8",
          "logs": [
            {
              "transactionIndex": 2,
              "blockNumber": 1190784,
              "transactionHash": "0x2d60b4bf0825661d61a48dbfac273bf4d5554332f5dd1e4e35c00d7a1d7a3fd8",
              "address": "0xCD21A0B389d6F0bDbE46FFaC86193Fb79D4c0C5E",
              "topics": [
                "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
              ],
              "data": "0x000000000000000000000000000000000000000000000000ffffffffffffffff",
              "logIndex": 3,
              "blockHash": "0x867f5cfd8f6b9df9ebfe06cb1fa41b2d93582d27c88e0c229380b50e6aec3b21"
            }
          ],
          "blockNumber": 1190784,
          "confirmations": 1,
          "cumulativeGasUsed": {
            "type": "BigNumber",
            "hex": "0x3588b6"
          },
          "effectiveGasPrice": {
            "type": "BigNumber",
            "hex": "0x746ad98751"
          },
          "status": 1,
          "type": 2,
          "byzantium": true
        },
        "init": {
          "to": null,
          "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
          "contractAddress": "0x49eA332539511df9F78046fBE671B3aC2520B486",
          "transactionIndex": 2,
          "gasUsed": {
            "type": "BigNumber",
            "hex": "0x037611"
          },
          "logsBloom": "0x
          "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45",
          "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
          "logs": [
            {
              "transactionIndex": 2,
              "blockNumber": 1190786,
              "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
              "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
              "topics": [
                "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                "0x000000000000000000000000cd21a0b389d6f0bdbe46ffac86193fb79d4c0c5e"
              ],
              "data": "0x",
              "logIndex": 3,
              "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
            },
            {
              "transactionIndex": 2,
              "blockNumber": 1190786,
              "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
              "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
              "topics": [
                "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "0x0000000000000000000000000000000000000000000000000000000000000000",
                "0x0000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a"
              ],
              "data": "0x",
              "logIndex": 4,
              "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
            },
            {
              "transactionIndex": 2,
              "blockNumber": 1190786,
              "transactionHash": "0x4a74b8329af6c566aa91eb050d7563893ecf28fa68d766fac7f02805ad09e0b3",
              "address": "0x49eA332539511df9F78046fBE671B3aC2520B486",
              "topics": [
                "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
              ],
              "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "logIndex": 5,
              "blockHash": "0x44fe22a3adb044cc90b28c657eea6a6b0eb4c8252c9b63234dc22b394754ff45"
            }
          ],
          "blockNumber": 1190786,
          "confirmations": 1,
          "cumulativeGasUsed": {
            "type": "BigNumber",
            "hex": "0x069bc0"
          },
          "effectiveGasPrice": {
            "type": "BigNumber",
            "hex": "0x746ad98751"
          },
          "status": 1,
          "type": 2,
          "byzantium": true
        }
      },
      "artifact": {
        "_format": "hh-sol-artifact-1",
        "contractName": "DoitRingStaked",
        "sourceName": "contracts/DoitRingStaked.sol",
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "ERC1967InvalidImplementation",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "ERC1967NonPayable",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidInitialization",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidSignature",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "NotInitializing",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "StakeAmountEmpty",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "StakeCancelEmpty",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "StakeCancelUnexpired",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "StakeEmpty",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TransferFailed",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TransferUnauthorized",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "UUPSUnauthorizedCallContext",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "slot",
                "type": "bytes32"
              }
            ],
            "name": "UUPSUnsupportedProxiableUUID",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint64",
                "name": "version",
                "type": "uint64"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "staker",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "StakeCancelled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "staker",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "StakeClaimed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "staker",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "StakeCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "",
                "type": "uint128"
              }
            ],
            "name": "Cancells",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "Stakes",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "staker",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "__migrate_StakeCancelled",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "__migrate_StakeClaimed",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "__migrate_StakeCreated",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct DoitRingStaked.Stake[]",
                "name": "stakes_",
                "type": "tuple[]"
              }
            ],
            "name": "__migrate_stakes",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "index",
                "type": "uint128"
              }
            ],
            "name": "cancel",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "index",
                "type": "uint128"
              }
            ],
            "name": "claim",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "create",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "index",
                "type": "uint128"
              }
            ],
            "name": "exists",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "index",
                "type": "uint128"
              }
            ],
            "name": "expiration",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getAgent",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getVerifier",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "length",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newAgent",
                "type": "address"
              }
            ],
            "name": "setAgent",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              }
            ],
            "name": "setLocking",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newVerifier",
                "type": "address"
              }
            ],
            "name": "setVerifier",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "stakes",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "staker",
                    "type": "address"
                  },
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "timestamp",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct DoitRingStaked.Stake[]",
                "name": "",
                "type": "tuple[]"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "uint128",
                "name": "index",
                "type": "uint128"
              }
            ],
            "name": "status",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newImplementation",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "bytecode": "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b608051613a6e620001f9600039600081816120c40152818161211901526122d40152613a6e6000f3fe6080604052600436106101855760003560e01c8063881c5be6116100d1578063c4d66de81161008a578063e316b82311610064578063e316b8231461057c578063f2fde38b146105b9578063f551eb19146105e2578063ffe5725f1461060d5761018c565b8063c4d66de8146104ed578063dc170e9e14610516578063e02546b21461053f5761018c565b8063881c5be6146103df5780638da5cb5b14610408578063a7ff9d0f14610433578063ad3cb1cc14610470578063bcf685ed1461049b578063c13f4af7146104c45761018c565b806335de32341161013e5780634f1ef286116101185780634f1ef2861461035857806352d1902d146103745780635437988d1461039f578063715018a6146103c85761018c565b806335de3234146102af578063396f54ba146102f057806346657fe91461032d5761018c565b806316934fc4146101915780631d051e3d146101ce578063220dedf1146101f757806329898059146102205780632c566ae5146102495780632e15ed84146102865761018c565b3661018c57005b600080fd5b34801561019d57600080fd5b506101b860048036038101906101b39190612e13565b610636565b6040516101c59190612f7f565b60405180910390f35b3480156101da57600080fd5b506101f560048036038101906101f09190612fcd565b61079e565b005b34801561020357600080fd5b5061021e600480360381019061021991906131e4565b6107b0565b005b34801561022c57600080fd5b5061024760048036038101906102429190613240565b610952565b005b34801561025557600080fd5b50610270600480360381019061026b9190612e13565b6109b4565b60405161027d91906132ca565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190613240565b610a00565b005b3480156102bb57600080fd5b506102d660048036038101906102d191906132e5565b610a62565b6040516102e7959493929190613334565b60405180910390f35b3480156102fc57600080fd5b50610317600480360381019061031291906133cf565b610af5565b60405161032491906132ca565b60405180910390f35b34801561033957600080fd5b50610342610b74565b60405161034f919061340f565b60405180910390f35b610372600480360381019061036d91906134df565b610b9d565b005b34801561038057600080fd5b50610389610bbc565b6040516103969190613554565b60405180910390f35b3480156103ab57600080fd5b506103c660048036038101906103c19190612e13565b610bef565b005b3480156103d457600080fd5b506103dd610cc0565b005b3480156103eb57600080fd5b50610406600480360381019061040191906133cf565b610cd4565b005b34801561041457600080fd5b5061041d61103c565b60405161042a919061340f565b60405180910390f35b34801561043f57600080fd5b5061045a600480360381019061045591906133cf565b611074565b60405161046791906132ca565b60405180910390f35b34801561047c57600080fd5b50610485611099565b60405161049291906135ee565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190612e13565b6110d2565b005b3480156104d057600080fd5b506104eb60048036038101906104e691906133cf565b6111a6565b005b3480156104f957600080fd5b50610514600480360381019061050f9190612e13565b61184a565b005b34801561052257600080fd5b5061053d60048036038101906105389190613240565b6119f4565b005b34801561054b57600080fd5b50610566600480360381019061056191906133cf565b611a56565b604051610573919061362b565b60405180910390f35b34801561058857600080fd5b506105a3600480360381019061059e91906133cf565b611ad8565b6040516105b09190613663565b60405180910390f35b3480156105c557600080fd5b506105e060048036038101906105db9190612e13565b611c73565b005b3480156105ee57600080fd5b506105f7611cf9565b604051610604919061340f565b60405180910390f35b34801561061957600080fd5b50610634600480360381019061062f919061367e565b611d23565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561079357838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152505081526020019060010190610697565b505050509050919050565b6107a661203b565b8060028190555050565b6107b861203b565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108039190612d00565b60005b815181101561094d57600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828281518110610861576108606136d1565b5b602002602001015190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015550508080600101915050610806565b505050565b61095a61203b565b838573ffffffffffffffffffffffffffffffffffffffff167f77c1336b2ccea697b92dbb17c7a3e8d2c20a5ed661262752b49cb92c6f7994118585856040516109a593929190613700565b60405180910390a35050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b610a0861203b565b838573ffffffffffffffffffffffffffffffffffffffff167ff636a2600530ecae1a76e3b0e1c91868f1691254641d54c0e3e046d7a6d09aa1858585604051610a5393929190613700565b60405180910390a35050505050565b60036020528160005260406000208181548110610a7e57600080fd5b9060005260206000209060050201600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ba56120c2565b610bae826121a8565b610bb882826121b3565b5050565b6000610bc66122d2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490613783565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cc861203b565b610cd26000612359565b565b813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610d5f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610d96576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110610dfb57610dfa6136d1565b5b90600052602060002090600502016003015403610e44576040517f7e85e0b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025442610e5291906137d2565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816fffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f77c1336b2ccea697b92dbb17c7a3e8d2c20a5ed661262752b49cb92c6f799411600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff1681548110610f7857610f776136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff168154811061100d5761100c6136d1565b5b9060005260206000209060050201600301544260405161102f93929190613700565b60405180910390a3505050565b600080611047612430565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6004602052816000526040600020602052806000526040600020600091509150505481565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990613852565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156112315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611268576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff16815481106112cd576112cc6136d1565b5b90600052602060002090600502016003015403611316576040517f7e85e0b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002054036113c4576040517f9fb937eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020541115611472576040517f03fbb02d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115863084600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff16815481106114da576114d96136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff168154811061156f5761156e6136d1565b5b906000526020600020906005020160030154612458565b816fffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff636a2600530ecae1a76e3b0e1c91868f1691254641d54c0e3e046d7a6d09aa1600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff1681548110611634576116336136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff16815481106116c9576116c86136d1565b5b906000526020600020906005020160030154426040516116eb93929190613700565b60405180910390a3600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826fffffffffffffffffffffffffffffffff1681548110611756576117556136d1565b5b90600052602060002090600502016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000905560048201600090555050600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060009055505050565b60006118546124af565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156118a25750825b9050600060018367ffffffffffffffff161480156118d7575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156118e5575080155b1561191c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561196c5760018560000160086101000a81548160ff0219169083151502179055505b611975866124d7565b61197e866124eb565b611986612537565b62278d0060028190555083156119ec5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516119e391906138cb565b60405180910390a15b505050505050565b6119fc61203b565b838573ffffffffffffffffffffffffffffffffffffffff167fe91584b4b15912bf7bf5fb21f4edc58a414b370fb2a10e91d4c49c3c3468edea858585604051611a4793929190613700565b60405180910390a35050505050565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110611abc57611abb6136d1565b5b9060005260206000209060050201600301541415905092915050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000205414611be35742600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020541115611bda5760039050611c6d565b60029050611c6d565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110611c4857611c476136d1565b5b90600052602060002090600502016003015414611c685760019050611c6d565b600090505b92915050565b611c7b61203b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ced5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ce4919061340f565b60405180910390fd5b611cf681612359565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611dae5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611de5576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008203611e1f576040517f5b7150b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060006040518060a001604052808381526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001428152509050600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401555050611fe086308787612458565b818673ffffffffffffffffffffffffffffffffffffffff167fe91584b4b15912bf7bf5fb21f4edc58a414b370fb2a10e91d4c49c3c3468edea87874260405161202b93929190613700565b60405180910390a3505050505050565b612043612541565b73ffffffffffffffffffffffffffffffffffffffff1661206161103c565b73ffffffffffffffffffffffffffffffffffffffff16146120c057612084612541565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120b7919061340f565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061216f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612156612549565b73ffffffffffffffffffffffffffffffffffffffff1614155b156121a6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6121b061203b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561221b57506040513d601f19601f820116820180604052508101906122189190613912565b60015b61225c57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612253919061340f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146122c357806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016122ba9190613554565b60405180910390fd5b6122cd83836125a0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612357576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612363612430565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461249d5761249884848484612613565b6124a9565b6124a884848361282e565b5b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6124df6129ae565b6124e8816129ee565b50565b6124f36129ae565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61253f6129ae565b565b600033905090565b60006125777f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612a74565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6125a982612a7e565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612606576126008282612b4b565b5061260f565b61260e612bcf565b5b5050565b60603073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036126e65760007fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b905080858460405160240161268192919061393f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050915050612782565b60007f23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b90508086868560405160240161272193929190613968565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150505b60008373ffffffffffffffffffffffffffffffffffffffff16826040516127a991906139e6565b6000604051808303816000865af19150503d80600081146127e6576040519150601f19603f3d011682016040523d82523d6000602084013e6127eb565b606091505b5050905080612826576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361290a5760008273ffffffffffffffffffffffffffffffffffffffff168260405161288790613a23565b60006040518083038185875af1925050503d80600081146128c4576040519150601f19603f3d011682016040523d82523d6000602084013e6128c9565b606091505b5050905080612904576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506129a9565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461296f576040517f11717f1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8034146129a8576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b505050565b6129b6612c0c565b6129ec576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6129f66129ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a685760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612a5f919061340f565b60405180910390fd5b612a7181612359565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612ada57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612ad1919061340f565b60405180910390fd5b80612b077f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612a74565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612b7591906139e6565b600060405180830381855af49150503d8060008114612bb0576040519150601f19603f3d011682016040523d82523d6000602084013e612bb5565b606091505b5091509150612bc5858383612c2c565b9250505092915050565b6000341115612c0a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612c166124af565b60000160089054906101000a900460ff16905090565b606082612c4157612c3c82612cbb565b612cb3565b60008251148015612c69575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15612cab57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612ca2919061340f565b60405180910390fd5b819050612cb4565b5b9392505050565b600081511115612cce5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080546000825560050290600052602060002090810190612d219190612d24565b50565b5b80821115612d9d576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055600482016000905550600501612d25565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612de082612db5565b9050919050565b612df081612dd5565b8114612dfb57600080fd5b50565b600081359050612e0d81612de7565b92915050565b600060208284031215612e2957612e28612dab565b5b6000612e3784828501612dfe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b612e7f81612e6c565b82525050565b612e8e81612dd5565b82525050565b60a082016000820151612eaa6000850182612e76565b506020820151612ebd6020850182612e85565b506040820151612ed06040850182612e85565b506060820151612ee36060850182612e76565b506080820151612ef66080850182612e76565b50505050565b6000612f088383612e94565b60a08301905092915050565b6000602082019050919050565b6000612f2c82612e40565b612f368185612e4b565b9350612f4183612e5c565b8060005b83811015612f72578151612f598882612efc565b9750612f6483612f14565b925050600181019050612f45565b5085935050505092915050565b60006020820190508181036000830152612f998184612f21565b905092915050565b612faa81612e6c565b8114612fb557600080fd5b50565b600081359050612fc781612fa1565b92915050565b600060208284031215612fe357612fe2612dab565b5b6000612ff184828501612fb8565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61304882612fff565b810181811067ffffffffffffffff8211171561306757613066613010565b5b80604052505050565b600061307a612da1565b9050613086828261303f565b919050565b600067ffffffffffffffff8211156130a6576130a5613010565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060a082840312156130d7576130d66130bc565b5b6130e160a0613070565b905060006130f184828501612fb8565b600083015250602061310584828501612dfe565b602083015250604061311984828501612dfe565b604083015250606061312d84828501612fb8565b606083015250608061314184828501612fb8565b60808301525092915050565b600061316061315b8461308b565b613070565b90508083825260208201905060a08402830185811115613183576131826130b7565b5b835b818110156131ac578061319888826130c1565b84526020840193505060a081019050613185565b5050509392505050565b600082601f8301126131cb576131ca612ffa565b5b81356131db84826020860161314d565b91505092915050565b600080604083850312156131fb576131fa612dab565b5b600061320985828601612dfe565b925050602083013567ffffffffffffffff81111561322a57613229612db0565b5b613236858286016131b6565b9150509250929050565b600080600080600060a0868803121561325c5761325b612dab565b5b600061326a88828901612dfe565b955050602061327b88828901612fb8565b945050604061328c88828901612dfe565b935050606061329d88828901612fb8565b92505060806132ae88828901612fb8565b9150509295509295909350565b6132c481612e6c565b82525050565b60006020820190506132df60008301846132bb565b92915050565b600080604083850312156132fc576132fb612dab565b5b600061330a85828601612dfe565b925050602061331b85828601612fb8565b9150509250929050565b61332e81612dd5565b82525050565b600060a08201905061334960008301886132bb565b6133566020830187613325565b6133636040830186613325565b61337060608301856132bb565b61337d60808301846132bb565b9695505050505050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6133ac81613387565b81146133b757600080fd5b50565b6000813590506133c9816133a3565b92915050565b600080604083850312156133e6576133e5612dab565b5b60006133f485828601612dfe565b9250506020613405858286016133ba565b9150509250929050565b60006020820190506134246000830184613325565b92915050565b600080fd5b600067ffffffffffffffff82111561344a57613449613010565b5b61345382612fff565b9050602081019050919050565b82818337600083830152505050565b600061348261347d8461342f565b613070565b90508281526020810184848401111561349e5761349d61342a565b5b6134a9848285613460565b509392505050565b600082601f8301126134c6576134c5612ffa565b5b81356134d684826020860161346f565b91505092915050565b600080604083850312156134f6576134f5612dab565b5b600061350485828601612dfe565b925050602083013567ffffffffffffffff81111561352557613524612db0565b5b613531858286016134b1565b9150509250929050565b6000819050919050565b61354e8161353b565b82525050565b60006020820190506135696000830184613545565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156135a957808201518184015260208101905061358e565b60008484015250505050565b60006135c08261356f565b6135ca818561357a565b93506135da81856020860161358b565b6135e381612fff565b840191505092915050565b6000602082019050818103600083015261360881846135b5565b905092915050565b60008115159050919050565b61362581613610565b82525050565b6000602082019050613640600083018461361c565b92915050565b600061ffff82169050919050565b61365d81613646565b82525050565b60006020820190506136786000830184613654565b92915050565b60008060006060848603121561369757613696612dab565b5b60006136a586828701612dfe565b93505060206136b686828701612dfe565b92505060406136c786828701612fb8565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506137156000830186613325565b61372260208301856132bb565b61372f60408301846132bb565b949350505050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b600061376d60148361357a565b915061377882613737565b602082019050919050565b6000602082019050818103600083015261379c81613760565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006137dd82612e6c565b91506137e883612e6c565b9250828201905080821115613800576137ff6137a3565b5b92915050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b600061383c60118361357a565b915061384782613806565b602082019050919050565b6000602082019050818103600083015261386b8161382f565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006138b56138b06138ab84613872565b613890565b61387c565b9050919050565b6138c58161389a565b82525050565b60006020820190506138e060008301846138bc565b92915050565b6138ef8161353b565b81146138fa57600080fd5b50565b60008151905061390c816138e6565b92915050565b60006020828403121561392857613927612dab565b5b6000613936848285016138fd565b91505092915050565b60006040820190506139546000830185613325565b61396160208301846132bb565b9392505050565b600060608201905061397d6000830186613325565b61398a6020830185613325565b61399760408301846132bb565b949350505050565b600081519050919050565b600081905092915050565b60006139c08261399f565b6139ca81856139aa565b93506139da81856020860161358b565b80840191505092915050565b60006139f282846139b5565b915081905092915050565b50565b6000613a0d6000836139aa565b9150613a18826139fd565b600082019050919050565b6000613a2e82613a00565b915081905091905056fea264697066735822122094377ce8fb0088db671d9d8c2af9aaeebe22be10e95c3c846656d25658a70de464736f6c63430008180033",
        "deployedBytecode": "",
        "linkReferences": {},
        "deployedLinkReferences": {},
        "devdoc": {
          "errors": {
            "AddressEmptyCode(address)": [
              {
                "details": "There's no code at `target` (it is not a contract)."
              }
            ],
            "ERC1967InvalidImplementation(address)": [
              {
                "details": "The `implementation` of the proxy is invalid."
              }
            ],
            "ERC1967NonPayable()": [
              {
                "details": "An upgrade function sees `msg.value > 0` that may be lost."
              }
            ],
            "FailedInnerCall()": [
              {
                "details": "A call to an address target failed. The target may have reverted."
              }
            ],
            "InvalidInitialization()": [
              {
                "details": "The contract is already initialized."
              }
            ],
            "NotInitializing()": [
              {
                "details": "The contract is not initializing."
              }
            ],
            "OwnableInvalidOwner(address)": [
              {
                "details": "The owner is not a valid owner account. (eg. `address(0)`)"
              }
            ],
            "OwnableUnauthorizedAccount(address)": [
              {
                "details": "The caller account is not authorized to perform an operation."
              }
            ],
            "UUPSUnauthorizedCallContext()": [
              {
                "details": "The call is from an unauthorized context."
              }
            ],
            "UUPSUnsupportedProxiableUUID(bytes32)": [
              {
                "details": "The storage `slot` is unsupported as a UUID."
              }
            ]
          },
          "events": {
            "Initialized(uint64)": {
              "details": "Triggered when the contract has been initialized or reinitialized."
            },
            "Upgraded(address)": {
              "details": "Emitted when the implementation is upgraded."
            }
          },
          "kind": "dev",
          "methods": {
            "constructor": {
              "custom:oz-upgrades-unsafe-allow": "constructor"
            },
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "proxiableUUID()": {
              "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            },
            "upgradeToAndCall(address,bytes)": {
              "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
              "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
            }
          },
          "version": 1
        },
        "evm": {
          "bytecode": {
            "functionDebugData": {
              "@_7538": {
                "entryPoint": null,
                "id": 7538,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_disableInitializers_416": {
                "entryPoint": 91,
                "id": 416,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_getInitializableStorage_447": {
                "entryPoint": 357,
                "id": 447,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "abi_encode_t_uint64_to_t_uint64_fromStack": {
                "entryPoint": 417,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
                "entryPoint": 434,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "cleanup_t_uint64": {
                "entryPoint": 397,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              }
            },
            "generatedSources": [
              {
                "ast": {
                  "nativeSrc": "0:456:46",
                  "nodeType": "YulBlock",
                  "src": "0:456:46",
                  "statements": [
                    {
                      "body": {
                        "nativeSrc": "51:57:46",
                        "nodeType": "YulBlock",
                        "src": "51:57:46",
                        "statements": [
                          {
                            "nativeSrc": "61:41:46",
                            "nodeType": "YulAssignment",
                            "src": "61:41:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "76:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "76:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "83:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "83:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "72:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "72:3:46"
                              },
                              "nativeSrc": "72:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "72:30:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "61:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "61:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint64",
                      "nativeSrc": "7:101:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "33:5:46",
                          "nodeType": "YulTypedName",
                          "src": "33:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "43:7:46",
                          "nodeType": "YulTypedName",
                          "src": "43:7:46",
                          "type": ""
                        }
                      ],
                      "src": "7:101:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "177:52:46",
                        "nodeType": "YulBlock",
                        "src": "177:52:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "194:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "216:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "216:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint64",
                                    "nativeSrc": "199:16:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "199:16:46"
                                  },
                                  "nativeSrc": "199:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "199:23:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "187:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "187:6:46"
                              },
                              "nativeSrc": "187:36:46",
                              "nodeType": "YulFunctionCall",
                              "src": "187:36:46"
                            },
                            "nativeSrc": "187:36:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "187:36:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                      "nativeSrc": "114:115:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "165:5:46",
                          "nodeType": "YulTypedName",
                          "src": "165:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "172:3:46",
                          "nodeType": "YulTypedName",
                          "src": "172:3:46",
                          "type": ""
                        }
                      ],
                      "src": "114:115:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "331:122:46",
                        "nodeType": "YulBlock",
                        "src": "331:122:46",
                        "statements": [
                          {
                            "nativeSrc": "341:26:46",
                            "nodeType": "YulAssignment",
                            "src": "341:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "353:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "364:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "364:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "349:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "349:3:46"
                              },
                              "nativeSrc": "349:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "349:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "341:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "341:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "419:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "419:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "432:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "432:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "443:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "443:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "428:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "428:3:46"
                                  },
                                  "nativeSrc": "428:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "428:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                                "nativeSrc": "377:41:46",
                                "nodeType": "YulIdentifier",
                                "src": "377:41:46"
                              },
                              "nativeSrc": "377:69:46",
                              "nodeType": "YulFunctionCall",
                              "src": "377:69:46"
                            },
                            "nativeSrc": "377:69:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "377:69:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
                      "nativeSrc": "235:218:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "303:9:46",
                          "nodeType": "YulTypedName",
                          "src": "303:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "315:6:46",
                          "nodeType": "YulTypedName",
                          "src": "315:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "326:4:46",
                          "nodeType": "YulTypedName",
                          "src": "326:4:46",
                          "type": ""
                        }
                      ],
                      "src": "235:218:46"
                    }
                  ]
                },
                "contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                "id": 46,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "linkReferences": {},
            "object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b608051613a6e620001f9600039600081816120c40152818161211901526122d40152613a6e6000f3fe6080604052600436106101855760003560e01c8063881c5be6116100d1578063c4d66de81161008a578063e316b82311610064578063e316b8231461057c578063f2fde38b146105b9578063f551eb19146105e2578063ffe5725f1461060d5761018c565b8063c4d66de8146104ed578063dc170e9e14610516578063e02546b21461053f5761018c565b8063881c5be6146103df5780638da5cb5b14610408578063a7ff9d0f14610433578063ad3cb1cc14610470578063bcf685ed1461049b578063c13f4af7146104c45761018c565b806335de32341161013e5780634f1ef286116101185780634f1ef2861461035857806352d1902d146103745780635437988d1461039f578063715018a6146103c85761018c565b806335de3234146102af578063396f54ba146102f057806346657fe91461032d5761018c565b806316934fc4146101915780631d051e3d146101ce578063220dedf1146101f757806329898059146102205780632c566ae5146102495780632e15ed84146102865761018c565b3661018c57005b600080fd5b34801561019d57600080fd5b506101b860048036038101906101b39190612e13565b610636565b6040516101c59190612f7f565b60405180910390f35b3480156101da57600080fd5b506101f560048036038101906101f09190612fcd565b61079e565b005b34801561020357600080fd5b5061021e600480360381019061021991906131e4565b6107b0565b005b34801561022c57600080fd5b5061024760048036038101906102429190613240565b610952565b005b34801561025557600080fd5b50610270600480360381019061026b9190612e13565b6109b4565b60405161027d91906132ca565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190613240565b610a00565b005b3480156102bb57600080fd5b506102d660048036038101906102d191906132e5565b610a62565b6040516102e7959493929190613334565b60405180910390f35b3480156102fc57600080fd5b50610317600480360381019061031291906133cf565b610af5565b60405161032491906132ca565b60405180910390f35b34801561033957600080fd5b50610342610b74565b60405161034f919061340f565b60405180910390f35b610372600480360381019061036d91906134df565b610b9d565b005b34801561038057600080fd5b50610389610bbc565b6040516103969190613554565b60405180910390f35b3480156103ab57600080fd5b506103c660048036038101906103c19190612e13565b610bef565b005b3480156103d457600080fd5b506103dd610cc0565b005b3480156103eb57600080fd5b50610406600480360381019061040191906133cf565b610cd4565b005b34801561041457600080fd5b5061041d61103c565b60405161042a919061340f565b60405180910390f35b34801561043f57600080fd5b5061045a600480360381019061045591906133cf565b611074565b60405161046791906132ca565b60405180910390f35b34801561047c57600080fd5b50610485611099565b60405161049291906135ee565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190612e13565b6110d2565b005b3480156104d057600080fd5b506104eb60048036038101906104e691906133cf565b6111a6565b005b3480156104f957600080fd5b50610514600480360381019061050f9190612e13565b61184a565b005b34801561052257600080fd5b5061053d60048036038101906105389190613240565b6119f4565b005b34801561054b57600080fd5b50610566600480360381019061056191906133cf565b611a56565b604051610573919061362b565b60405180910390f35b34801561058857600080fd5b506105a3600480360381019061059e91906133cf565b611ad8565b6040516105b09190613663565b60405180910390f35b3480156105c557600080fd5b506105e060048036038101906105db9190612e13565b611c73565b005b3480156105ee57600080fd5b506105f7611cf9565b604051610604919061340f565b60405180910390f35b34801561061957600080fd5b50610634600480360381019061062f919061367e565b611d23565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561079357838290600052602060002090600502016040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201548152505081526020019060010190610697565b505050509050919050565b6107a661203b565b8060028190555050565b6107b861203b565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108039190612d00565b60005b815181101561094d57600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828281518110610861576108606136d1565b5b602002602001015190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015550508080600101915050610806565b505050565b61095a61203b565b838573ffffffffffffffffffffffffffffffffffffffff167f77c1336b2ccea697b92dbb17c7a3e8d2c20a5ed661262752b49cb92c6f7994118585856040516109a593929190613700565b60405180910390a35050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b610a0861203b565b838573ffffffffffffffffffffffffffffffffffffffff167ff636a2600530ecae1a76e3b0e1c91868f1691254641d54c0e3e046d7a6d09aa1858585604051610a5393929190613700565b60405180910390a35050505050565b60036020528160005260406000208181548110610a7e57600080fd5b9060005260206000209060050201600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ba56120c2565b610bae826121a8565b610bb882826121b3565b5050565b6000610bc66122d2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7490613783565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610cc861203b565b610cd26000612359565b565b813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610d5f5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610d96576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110610dfb57610dfa6136d1565b5b90600052602060002090600502016003015403610e44576040517f7e85e0b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025442610e5291906137d2565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816fffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f77c1336b2ccea697b92dbb17c7a3e8d2c20a5ed661262752b49cb92c6f799411600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff1681548110610f7857610f776136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff168154811061100d5761100c6136d1565b5b9060005260206000209060050201600301544260405161102f93929190613700565b60405180910390a3505050565b600080611047612430565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6004602052816000526040600020602052806000526040600020600091509150505481565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611162576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115990613852565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156112315750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611268576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff16815481106112cd576112cc6136d1565b5b90600052602060002090600502016003015403611316576040517f7e85e0b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002054036113c4576040517f9fb937eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020541115611472576040517f03fbb02d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115863084600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff16815481106114da576114d96136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff168154811061156f5761156e6136d1565b5b906000526020600020906005020160030154612458565b816fffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff636a2600530ecae1a76e3b0e1c91868f1691254641d54c0e3e046d7a6d09aa1600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020856fffffffffffffffffffffffffffffffff1681548110611634576116336136d1565b5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020866fffffffffffffffffffffffffffffffff16815481106116c9576116c86136d1565b5b906000526020600020906005020160030154426040516116eb93929190613700565b60405180910390a3600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020826fffffffffffffffffffffffffffffffff1681548110611756576117556136d1565b5b90600052602060002090600502016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000905560048201600090555050600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16815260200190815260200160002060009055505050565b60006118546124af565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156118a25750825b9050600060018367ffffffffffffffff161480156118d7575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156118e5575080155b1561191c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561196c5760018560000160086101000a81548160ff0219169083151502179055505b611975866124d7565b61197e866124eb565b611986612537565b62278d0060028190555083156119ec5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516119e391906138cb565b60405180910390a15b505050505050565b6119fc61203b565b838573ffffffffffffffffffffffffffffffffffffffff167fe91584b4b15912bf7bf5fb21f4edc58a414b370fb2a10e91d4c49c3c3468edea858585604051611a4793929190613700565b60405180910390a35050505050565b600080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110611abc57611abb6136d1565b5b9060005260206000209060050201600301541415905092915050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1681526020019081526020016000205414611be35742600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168152602001908152602001600020541115611bda5760039050611c6d565b60029050611c6d565b6000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020836fffffffffffffffffffffffffffffffff1681548110611c4857611c476136d1565b5b90600052602060002090600502016003015414611c685760019050611c6d565b600090505b92915050565b611c7b61203b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611ced5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ce4919061340f565b60405180910390fd5b611cf681612359565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611dae5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611de5576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008203611e1f576040517f5b7150b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060006040518060a001604052808381526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001428152509050600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401555050611fe086308787612458565b818673ffffffffffffffffffffffffffffffffffffffff167fe91584b4b15912bf7bf5fb21f4edc58a414b370fb2a10e91d4c49c3c3468edea87874260405161202b93929190613700565b60405180910390a3505050505050565b612043612541565b73ffffffffffffffffffffffffffffffffffffffff1661206161103c565b73ffffffffffffffffffffffffffffffffffffffff16146120c057612084612541565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120b7919061340f565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061216f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612156612549565b73ffffffffffffffffffffffffffffffffffffffff1614155b156121a6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6121b061203b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561221b57506040513d601f19601f820116820180604052508101906122189190613912565b60015b61225c57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612253919061340f565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146122c357806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016122ba9190613554565b60405180910390fd5b6122cd83836125a0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612357576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612363612430565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461249d5761249884848484612613565b6124a9565b6124a884848361282e565b5b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6124df6129ae565b6124e8816129ee565b50565b6124f36129ae565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61253f6129ae565b565b600033905090565b60006125777f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612a74565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6125a982612a7e565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612606576126008282612b4b565b5061260f565b61260e612bcf565b5b5050565b60603073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036126e65760007fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b905080858460405160240161268192919061393f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050915050612782565b60007f23b872dd7302113369cda2901243429419bec145408fa8b352b3dd92b66c680b90508086868560405160240161272193929190613968565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150505b60008373ffffffffffffffffffffffffffffffffffffffff16826040516127a991906139e6565b6000604051808303816000865af19150503d80600081146127e6576040519150601f19603f3d011682016040523d82523d6000602084013e6127eb565b606091505b5050905080612826576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361290a5760008273ffffffffffffffffffffffffffffffffffffffff168260405161288790613a23565b60006040518083038185875af1925050503d80600081146128c4576040519150601f19603f3d011682016040523d82523d6000602084013e6128c9565b606091505b5050905080612904576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506129a9565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461296f576040517f11717f1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8034146129a8576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b505050565b6129b6612c0c565b6129ec576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6129f66129ae565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612a685760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612a5f919061340f565b60405180910390fd5b612a7181612359565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612ada57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612ad1919061340f565b60405180910390fd5b80612b077f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612a74565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612b7591906139e6565b600060405180830381855af49150503d8060008114612bb0576040519150601f19603f3d011682016040523d82523d6000602084013e612bb5565b606091505b5091509150612bc5858383612c2c565b9250505092915050565b6000341115612c0a576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612c166124af565b60000160089054906101000a900460ff16905090565b606082612c4157612c3c82612cbb565b612cb3565b60008251148015612c69575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15612cab57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401612ca2919061340f565b60405180910390fd5b819050612cb4565b5b9392505050565b600081511115612cce5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5080546000825560050290600052602060002090810190612d219190612d24565b50565b5b80821115612d9d576000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160009055600482016000905550600501612d25565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612de082612db5565b9050919050565b612df081612dd5565b8114612dfb57600080fd5b50565b600081359050612e0d81612de7565b92915050565b600060208284031215612e2957612e28612dab565b5b6000612e3784828501612dfe565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b612e7f81612e6c565b82525050565b612e8e81612dd5565b82525050565b60a082016000820151612eaa6000850182612e76565b506020820151612ebd6020850182612e85565b506040820151612ed06040850182612e85565b506060820151612ee36060850182612e76565b506080820151612ef66080850182612e76565b50505050565b6000612f088383612e94565b60a08301905092915050565b6000602082019050919050565b6000612f2c82612e40565b612f368185612e4b565b9350612f4183612e5c565b8060005b83811015612f72578151612f598882612efc565b9750612f6483612f14565b925050600181019050612f45565b5085935050505092915050565b60006020820190508181036000830152612f998184612f21565b905092915050565b612faa81612e6c565b8114612fb557600080fd5b50565b600081359050612fc781612fa1565b92915050565b600060208284031215612fe357612fe2612dab565b5b6000612ff184828501612fb8565b91505092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61304882612fff565b810181811067ffffffffffffffff8211171561306757613066613010565b5b80604052505050565b600061307a612da1565b9050613086828261303f565b919050565b600067ffffffffffffffff8211156130a6576130a5613010565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060a082840312156130d7576130d66130bc565b5b6130e160a0613070565b905060006130f184828501612fb8565b600083015250602061310584828501612dfe565b602083015250604061311984828501612dfe565b604083015250606061312d84828501612fb8565b606083015250608061314184828501612fb8565b60808301525092915050565b600061316061315b8461308b565b613070565b90508083825260208201905060a08402830185811115613183576131826130b7565b5b835b818110156131ac578061319888826130c1565b84526020840193505060a081019050613185565b5050509392505050565b600082601f8301126131cb576131ca612ffa565b5b81356131db84826020860161314d565b91505092915050565b600080604083850312156131fb576131fa612dab565b5b600061320985828601612dfe565b925050602083013567ffffffffffffffff81111561322a57613229612db0565b5b613236858286016131b6565b9150509250929050565b600080600080600060a0868803121561325c5761325b612dab565b5b600061326a88828901612dfe565b955050602061327b88828901612fb8565b945050604061328c88828901612dfe565b935050606061329d88828901612fb8565b92505060806132ae88828901612fb8565b9150509295509295909350565b6132c481612e6c565b82525050565b60006020820190506132df60008301846132bb565b92915050565b600080604083850312156132fc576132fb612dab565b5b600061330a85828601612dfe565b925050602061331b85828601612fb8565b9150509250929050565b61332e81612dd5565b82525050565b600060a08201905061334960008301886132bb565b6133566020830187613325565b6133636040830186613325565b61337060608301856132bb565b61337d60808301846132bb565b9695505050505050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6133ac81613387565b81146133b757600080fd5b50565b6000813590506133c9816133a3565b92915050565b600080604083850312156133e6576133e5612dab565b5b60006133f485828601612dfe565b9250506020613405858286016133ba565b9150509250929050565b60006020820190506134246000830184613325565b92915050565b600080fd5b600067ffffffffffffffff82111561344a57613449613010565b5b61345382612fff565b9050602081019050919050565b82818337600083830152505050565b600061348261347d8461342f565b613070565b90508281526020810184848401111561349e5761349d61342a565b5b6134a9848285613460565b509392505050565b600082601f8301126134c6576134c5612ffa565b5b81356134d684826020860161346f565b91505092915050565b600080604083850312156134f6576134f5612dab565b5b600061350485828601612dfe565b925050602083013567ffffffffffffffff81111561352557613524612db0565b5b613531858286016134b1565b9150509250929050565b6000819050919050565b61354e8161353b565b82525050565b60006020820190506135696000830184613545565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156135a957808201518184015260208101905061358e565b60008484015250505050565b60006135c08261356f565b6135ca818561357a565b93506135da81856020860161358b565b6135e381612fff565b840191505092915050565b6000602082019050818103600083015261360881846135b5565b905092915050565b60008115159050919050565b61362581613610565b82525050565b6000602082019050613640600083018461361c565b92915050565b600061ffff82169050919050565b61365d81613646565b82525050565b60006020820190506136786000830184613654565b92915050565b60008060006060848603121561369757613696612dab565b5b60006136a586828701612dfe565b93505060206136b686828701612dfe565b92505060406136c786828701612fb8565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506137156000830186613325565b61372260208301856132bb565b61372f60408301846132bb565b949350505050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b600061376d60148361357a565b915061377882613737565b602082019050919050565b6000602082019050818103600083015261379c81613760565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006137dd82612e6c565b91506137e883612e6c565b9250828201905080821115613800576137ff6137a3565b5b92915050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b600061383c60118361357a565b915061384782613806565b602082019050919050565b6000602082019050818103600083015261386b8161382f565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006138b56138b06138ab84613872565b613890565b61387c565b9050919050565b6138c58161389a565b82525050565b60006020820190506138e060008301846138bc565b92915050565b6138ef8161353b565b81146138fa57600080fd5b50565b60008151905061390c816138e6565b92915050565b60006020828403121561392857613927612dab565b5b6000613936848285016138fd565b91505092915050565b60006040820190506139546000830185613325565b61396160208301846132bb565b9392505050565b600060608201905061397d6000830186613325565b61398a6020830185613325565b61399760408301846132bb565b949350505050565b600081519050919050565b600081905092915050565b60006139c08261399f565b6139ca81856139aa565b93506139da81856020860161358b565b80840191505092915050565b60006139f282846139b5565b915081905092915050565b50565b6000613a0d6000836139aa565b9150613a18826139fd565b600082019050919050565b6000613a2e82613a00565b915081905091905056fea264697066735822122094377ce8fb0088db671d9d8c2af9aaeebe22be10e95c3c846656d25658a70de464736f6c63430008180033",
            "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D PUSH3 0x165 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AC DUP2 PUSH3 0x18D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3A6E PUSH3 0x1F9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x20C4 ADD MSTORE DUP2 DUP2 PUSH2 0x2119 ADD MSTORE PUSH2 0x22D4 ADD MSTORE PUSH2 0x3A6E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x881C5BE6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE316B823 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE316B823 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF551EB19 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xFFE5725F EQ PUSH2 0x60D JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xDC170E9E EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xE02546B2 EQ PUSH2 0x53F JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x881C5BE6 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA7FF9D0F EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC13F4AF7 EQ PUSH2 0x4C4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x35DE3234 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x5437988D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x35DE3234 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x396F54BA EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x46657FE9 EQ PUSH2 0x32D JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x1D051E3D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x220DEDF1 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x29898059 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2C566AE5 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2E15ED84 EQ PUSH2 0x286 JUMPI PUSH2 0x18C JUMP JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x2F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x31E4 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x34DF JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH2 0xCC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x19F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x1C73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x367E JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x793 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x697 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0x203B JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x861 JUMPI PUSH2 0x860 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x806 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77C1336B2CCEA697B92DBB17C7A3E8D2C20A5ED661262752B49CB92C6F799411 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF636A2600530ECAE1A76E3B0E1C91868F1691254641D54C0E3E046D7A6D09AA1 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0xBB8 DUP3 DUP3 PUSH2 0x21B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC6 PUSH2 0x22D2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP1 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCC8 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x0 PUSH2 0x2359 JUMP JUMPDEST JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SUB PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7E85E0B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77C1336B2CCEA697B92DBB17C7A3E8D2C20A5ED661262752B49CB92C6F799411 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x102F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1047 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1231 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7E85E0B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x13C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FB937EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3FBB02D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1586 ADDRESS DUP5 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x156F JUMPI PUSH2 0x156E PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x2458 JUMP JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF636A2600530ECAE1A76E3B0E1C91868F1691254641D54C0E3E046D7A6D09AA1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1634 JUMPI PUSH2 0x1633 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x16EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1854 PUSH2 0x24AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x18A2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x18D7 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x18E5 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x191C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x196C JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1975 DUP7 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x197E DUP7 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x1986 PUSH2 0x2537 JUMP JUMPDEST PUSH3 0x278D00 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x19E3 SWAP2 SWAP1 PUSH2 0x38CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19FC PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE91584B4B15912BF7BF5FB21F4EDC58A414B370FB2A10E91D4C49C3C3468EDEA DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1BE3 JUMPI TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1BDA JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1C68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7B PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE4 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF6 DUP2 PUSH2 0x2359 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x1E1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B7150B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH2 0x1FE0 DUP7 ADDRESS DUP8 DUP8 PUSH2 0x2458 JUMP JUMPDEST DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE91584B4B15912BF7BF5FB21F4EDC58A414B370FB2A10E91D4C49C3C3468EDEA DUP8 DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x202B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2043 PUSH2 0x2541 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2061 PUSH2 0x103C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20C0 JUMPI PUSH2 0x2084 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x216F JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2156 PUSH2 0x2549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x21B0 PUSH2 0x203B JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x221B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2218 SWAP2 SWAP1 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x225C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x22C3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BA SWAP2 SWAP1 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22CD DUP4 DUP4 PUSH2 0x25A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2357 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2363 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x249D JUMPI PUSH2 0x2498 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2613 JUMP JUMPDEST PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x24A8 DUP5 DUP5 DUP4 PUSH2 0x282E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24DF PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x29EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x24F3 PUSH2 0x29AE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x253F PUSH2 0x29AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2577 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x25A9 DUP3 PUSH2 0x2A7E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2606 JUMPI PUSH2 0x2600 DUP3 DUP3 PUSH2 0x2B4B JUMP JUMPDEST POP PUSH2 0x260F JUMP JUMPDEST PUSH2 0x260E PUSH2 0x2BCF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E6 JUMPI PUSH1 0x0 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 POP DUP1 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2681 SWAP3 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP2 POP POP PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x23B872DD7302113369CDA2901243429419BEC145408FA8B352B3DD92B66C680B SWAP1 POP DUP1 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2721 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x27A9 SWAP2 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x290A JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2887 SWAP1 PUSH2 0x3A23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x29A9 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x296F JUMPI PUSH1 0x40 MLOAD PUSH32 0x11717F1200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x29A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29B6 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x29EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29F6 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A68 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5F SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A71 DUP2 PUSH2 0x2359 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2ADA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD1 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2B07 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2B75 SWAP2 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BB0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2BC5 DUP6 DUP4 DUP4 PUSH2 0x2C2C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C16 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2C41 JUMPI PUSH2 0x2C3C DUP3 PUSH2 0x2CBB JUMP JUMPDEST PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2C69 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2CAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA2 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2CB4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CCE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x5 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D21 SWAP2 SWAP1 PUSH2 0x2D24 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D9D JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x5 ADD PUSH2 0x2D25 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 DUP3 PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF0 DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E0D DUP2 PUSH2 0x2DE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E29 JUMPI PUSH2 0x2E28 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E37 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7F DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E8E DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2EAA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2EBD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2E85 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2ED0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2E85 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2EE3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2EF6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP4 DUP4 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2C DUP3 PUSH2 0x2E40 JUMP JUMPDEST PUSH2 0x2F36 DUP2 DUP6 PUSH2 0x2E4B JUMP JUMPDEST SWAP4 POP PUSH2 0x2F41 DUP4 PUSH2 0x2E5C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP2 MLOAD PUSH2 0x2F59 DUP9 DUP3 PUSH2 0x2EFC JUMP JUMPDEST SWAP8 POP PUSH2 0x2F64 DUP4 PUSH2 0x2F14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F45 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F99 DUP2 DUP5 PUSH2 0x2F21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FAA DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FC7 DUP2 PUSH2 0x2FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3048 DUP3 PUSH2 0x2FFF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3067 JUMPI PUSH2 0x3066 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307A PUSH2 0x2DA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3086 DUP3 DUP3 PUSH2 0x303F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30A6 JUMPI PUSH2 0x30A5 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D7 JUMPI PUSH2 0x30D6 PUSH2 0x30BC JUMP JUMPDEST JUMPDEST PUSH2 0x30E1 PUSH1 0xA0 PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30F1 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3105 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3119 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x312D DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x3141 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3160 PUSH2 0x315B DUP5 PUSH2 0x308B JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3183 JUMPI PUSH2 0x3182 PUSH2 0x30B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31AC JUMPI DUP1 PUSH2 0x3198 DUP9 DUP3 PUSH2 0x30C1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x3185 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31CB JUMPI PUSH2 0x31CA PUSH2 0x2FFA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x314D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31FB JUMPI PUSH2 0x31FA PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3209 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322A JUMPI PUSH2 0x3229 PUSH2 0x2DB0 JUMP JUMPDEST JUMPDEST PUSH2 0x3236 DUP6 DUP3 DUP7 ADD PUSH2 0x31B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x325C JUMPI PUSH2 0x325B PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x326A DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x327B DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x328C DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x329D DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x32AE DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x32C4 DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH2 0x32FB PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330A DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x331B DUP6 DUP3 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x332E DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3349 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x3356 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3363 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3370 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x337D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33AC DUP2 PUSH2 0x3387 JUMP JUMPDEST DUP2 EQ PUSH2 0x33B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C9 DUP2 PUSH2 0x33A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3405 DUP6 DUP3 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x344A JUMPI PUSH2 0x3449 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST PUSH2 0x3453 DUP3 PUSH2 0x2FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3482 PUSH2 0x347D DUP5 PUSH2 0x342F JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x349E JUMPI PUSH2 0x349D PUSH2 0x342A JUMP JUMPDEST JUMPDEST PUSH2 0x34A9 DUP5 DUP3 DUP6 PUSH2 0x3460 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34C6 JUMPI PUSH2 0x34C5 PUSH2 0x2FFA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x34D6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x346F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F6 JUMPI PUSH2 0x34F5 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3504 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3525 JUMPI PUSH2 0x3524 PUSH2 0x2DB0 JUMP JUMPDEST JUMPDEST PUSH2 0x3531 DUP6 DUP3 DUP7 ADD PUSH2 0x34B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354E DUP2 PUSH2 0x353B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3569 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x358E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C0 DUP3 PUSH2 0x356F JUMP JUMPDEST PUSH2 0x35CA DUP2 DUP6 PUSH2 0x357A JUMP JUMPDEST SWAP4 POP PUSH2 0x35DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST PUSH2 0x35E3 DUP2 PUSH2 0x2FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3608 DUP2 DUP5 PUSH2 0x35B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3625 DUP2 PUSH2 0x3610 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x361C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365D DUP2 PUSH2 0x3646 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3678 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36B6 DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36C7 DUP7 DUP3 DUP8 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3715 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3722 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x372F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74205665726966696572204163636F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x376D PUSH1 0x14 DUP4 PUSH2 0x357A JUMP JUMPDEST SWAP2 POP PUSH2 0x3778 DUP3 PUSH2 0x3737 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x379C DUP2 PUSH2 0x3760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37DD DUP3 PUSH2 0x2E6C JUMP JUMPDEST SWAP2 POP PUSH2 0x37E8 DUP4 PUSH2 0x2E6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3800 JUMPI PUSH2 0x37FF PUSH2 0x37A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74204167656E74204163636F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x11 DUP4 PUSH2 0x357A JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B5 PUSH2 0x38B0 PUSH2 0x38AB DUP5 PUSH2 0x3872 JUMP JUMPDEST PUSH2 0x3890 JUMP JUMPDEST PUSH2 0x387C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C5 DUP2 PUSH2 0x389A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38EF DUP2 PUSH2 0x353B JUMP JUMPDEST DUP2 EQ PUSH2 0x38FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x390C DUP2 PUSH2 0x38E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3928 JUMPI PUSH2 0x3927 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3936 DUP5 DUP3 DUP6 ADD PUSH2 0x38FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3954 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3961 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x397D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x398A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3997 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 DUP3 PUSH2 0x399F JUMP JUMPDEST PUSH2 0x39CA DUP2 DUP6 PUSH2 0x39AA JUMP JUMPDEST SWAP4 POP PUSH2 0x39DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 DUP5 PUSH2 0x39B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0D PUSH1 0x0 DUP4 PUSH2 0x39AA JUMP JUMPDEST SWAP2 POP PUSH2 0x3A18 DUP3 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2E DUP3 PUSH2 0x3A00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 CALLDATACOPY PUSH29 0xE8FB0088DB671D9D8C2AF9AAEEBE22BE10E95C3C846656D25658A70DE4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
            "sourceMap": "358:4687:34:-:0;;;1171:4:2;1128:48;;;;;;;;;551:41:34;;;;;;;;;;567:22;:20;;;:22;;:::i;:::-;358:4687;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:46:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;358:4687:34:-;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "functionDebugData": {
              "@Cancells_7561": {
                "entryPoint": 4212,
                "id": 7561,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@Stakes_7555": {
                "entryPoint": 2658,
                "id": 7555,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@UPGRADE_INTERFACE_VERSION_472": {
                "entryPoint": 4249,
                "id": 472,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_8833": {
                "entryPoint": null,
                "id": 8833,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@__Ownable_init_54": {
                "entryPoint": 9431,
                "id": 54,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__Ownable_init_unchained_81": {
                "entryPoint": 10734,
                "id": 81,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__Proxyed_init_9119": {
                "entryPoint": 9451,
                "id": 9119,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__UUPSUpgradeable_init_502": {
                "entryPoint": 9527,
                "id": 502,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@__migrate_StakeCancelled_8064": {
                "entryPoint": 2386,
                "id": 8064,
                "parameterSlots": 5,
                "returnSlots": 0
              },
              "@__migrate_StakeClaimed_8088": {
                "entryPoint": 2560,
                "id": 8088,
                "parameterSlots": 5,
                "returnSlots": 0
              },
              "@__migrate_StakeCreated_8040": {
                "entryPoint": 6644,
                "id": 8040,
                "parameterSlots": 5,
                "returnSlots": 0
              },
              "@__migrate_stakes_8016": {
                "entryPoint": 1968,
                "id": 8016,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_authorizeUpgrade_7547": {
                "entryPoint": 8616,
                "id": 7547,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_checkInitializing_370": {
                "entryPoint": 10670,
                "id": 370,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkNonPayable_2776": {
                "entryPoint": 11215,
                "id": 2776,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkNotDelegated_578": {
                "entryPoint": 8914,
                "id": 578,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkOwner_122": {
                "entryPoint": 8251,
                "id": 122,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkProxy_562": {
                "entryPoint": 8386,
                "id": 562,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_getInitializableStorage_447": {
                "entryPoint": 9391,
                "id": 447,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_getOwnableStorage_25": {
                "entryPoint": 9264,
                "id": 25,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_isInitializing_438": {
                "entryPoint": 11276,
                "id": 438,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_msgSender_1960": {
                "entryPoint": 9537,
                "id": 1960,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_revert_4956": {
                "entryPoint": 11451,
                "id": 4956,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_setImplementation_2562": {
                "entryPoint": 10878,
                "id": 2562,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_transferOwnership_193": {
                "entryPoint": 9049,
                "id": 193,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_upgradeToAndCallUUPS_629": {
                "entryPoint": 8627,
                "id": 629,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@cancel_7759": {
                "entryPoint": 3284,
                "id": 7759,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@claim_7858": {
                "entryPoint": 4518,
                "id": 7858,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@create_7706": {
                "entryPoint": 7459,
                "id": 7706,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@erc20Transfer_8907": {
                "entryPoint": 9747,
                "id": 8907,
                "parameterSlots": 4,
                "returnSlots": 0
              },
              "@etherTransfer_8957": {
                "entryPoint": 10286,
                "id": 8957,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@exists_7965": {
                "entryPoint": 6742,
                "id": 7965,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@expiration_7946": {
                "entryPoint": 2805,
                "id": 7946,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@functionDelegateCall_4876": {
                "entryPoint": 11083,
                "id": 4876,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@getAddressSlot_5019": {
                "entryPoint": 10868,
                "id": 5019,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@getAgent_9089": {
                "entryPoint": 7417,
                "id": 9089,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@getImplementation_2535": {
                "entryPoint": 9545,
                "id": 2535,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@getVerifier_9312": {
                "entryPoint": 2932,
                "id": 9312,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@initialize_7641": {
                "entryPoint": 6218,
                "id": 7641,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@length_7930": {
                "entryPoint": 2484,
                "id": 7930,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@owner_105": {
                "entryPoint": 4156,
                "id": 105,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@proxiableUUID_520": {
                "entryPoint": 3004,
                "id": 520,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@renounceOwnership_136": {
                "entryPoint": 3264,
                "id": 136,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@setAgent_9107": {
                "entryPoint": 4306,
                "id": 9107,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@setLocking_7977": {
                "entryPoint": 1950,
                "id": 7977,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@setVerifier_9330": {
                "entryPoint": 3055,
                "id": 9330,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@stakes_7872": {
                "entryPoint": 1590,
                "id": 7872,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@status_7917": {
                "entryPoint": 6872,
                "id": 7917,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@transferOwnership_164": {
                "entryPoint": 7283,
                "id": 164,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@transfer_8989": {
                "entryPoint": 9304,
                "id": 8989,
                "parameterSlots": 4,
                "returnSlots": 0
              },
              "@upgradeToAndCall_2596": {
                "entryPoint": 9632,
                "id": 2596,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@upgradeToAndCall_540": {
                "entryPoint": 2973,
                "id": 540,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@verifyCallResultFromTarget_4916": {
                "entryPoint": 11308,
                "id": 4916,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_decode_available_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 12621,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_decode_available_length_t_bytes_memory_ptr": {
                "entryPoint": 13423,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_decode_t_address": {
                "entryPoint": 11774,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 12726,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes32_fromMemory": {
                "entryPoint": 14589,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes_memory_ptr": {
                "entryPoint": 13489,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_struct$_Stake_$7616_memory_ptr": {
                "entryPoint": 12481,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_uint128": {
                "entryPoint": 13242,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_uint256": {
                "entryPoint": 12216,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_address": {
                "entryPoint": 11795,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_addresst_addresst_uint256": {
                "entryPoint": 13950,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 3
              },
              "abi_decode_tuple_t_addresst_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 12772,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
                "entryPoint": 13535,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_uint128": {
                "entryPoint": 13263,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_uint256": {
                "entryPoint": 13029,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256": {
                "entryPoint": 12864,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 5
              },
              "abi_decode_tuple_t_bytes32_fromMemory": {
                "entryPoint": 14610,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_uint256": {
                "entryPoint": 12237,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encodeUpdatedPos_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr": {
                "entryPoint": 12028,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_address_to_t_address": {
                "entryPoint": 11909,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_address_to_t_address_fromStack": {
                "entryPoint": 13093,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack": {
                "entryPoint": 12065,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_bool_to_t_bool_fromStack": {
                "entryPoint": 13852,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bytes32_to_t_bytes32_fromStack": {
                "entryPoint": 13637,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 14773,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
                "entryPoint": 14524,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 13749,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 14383,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 14176,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 14848,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr": {
                "entryPoint": 11924,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint16_to_t_uint16_fromStack": {
                "entryPoint": 13908,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint256_to_t_uint256": {
                "entryPoint": 11894,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint256_to_t_uint256_fromStack": {
                "entryPoint": 12987,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 14822,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 14883,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                "entryPoint": 13327,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                "entryPoint": 14696,
                "id": null,
                "parameterSlots": 4,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                "entryPoint": 14655,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                "entryPoint": 14080,
                "id": null,
                "parameterSlots": 4,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
                "entryPoint": 12159,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                "entryPoint": 13867,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                "entryPoint": 13652,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
                "entryPoint": 14539,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 13806,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 14418,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 14211,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
                "entryPoint": 13923,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                "entryPoint": 13002,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
                "entryPoint": 13108,
                "id": null,
                "parameterSlots": 6,
                "returnSlots": 1
              },
              "allocate_memory": {
                "entryPoint": 12400,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "allocate_unbounded": {
                "entryPoint": 11681,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "array_allocation_size_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 12427,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_allocation_size_t_bytes_memory_ptr": {
                "entryPoint": 13359,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_dataslot_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 11868,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 11840,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_bytes_memory_ptr": {
                "entryPoint": 14751,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_string_memory_ptr": {
                "entryPoint": 13679,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_nextElement_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr": {
                "entryPoint": 12052,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack": {
                "entryPoint": 11851,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 14762,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                "entryPoint": 13690,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "checked_add_t_uint256": {
                "entryPoint": 14290,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "cleanup_t_address": {
                "entryPoint": 11733,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_bool": {
                "entryPoint": 13840,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_bytes32": {
                "entryPoint": 13627,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_rational_1_by_1": {
                "entryPoint": 14450,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint128": {
                "entryPoint": 13191,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint16": {
                "entryPoint": 13894,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint160": {
                "entryPoint": 11701,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint256": {
                "entryPoint": 11884,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint64": {
                "entryPoint": 14460,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "convert_t_rational_1_by_1_to_t_uint64": {
                "entryPoint": 14490,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "copy_calldata_to_memory_with_cleanup": {
                "entryPoint": 13408,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "copy_memory_to_memory_with_cleanup": {
                "entryPoint": 13707,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "finalize_allocation": {
                "entryPoint": 12351,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "identity": {
                "entryPoint": 14480,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "panic_error_0x11": {
                "entryPoint": 14243,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x32": {
                "entryPoint": 14033,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x41": {
                "entryPoint": 12304,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                "entryPoint": 12282,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
                "entryPoint": 12476,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
                "entryPoint": null,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                "entryPoint": 12471,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                "entryPoint": 13354,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                "entryPoint": 11696,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                "entryPoint": 11691,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "round_up_to_mul_of_32": {
                "entryPoint": 12287,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8": {
                "entryPoint": 14342,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7": {
                "entryPoint": 14135,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
                "entryPoint": 14845,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_address": {
                "entryPoint": 11751,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_bytes32": {
                "entryPoint": 14566,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_uint128": {
                "entryPoint": 13219,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_uint256": {
                "entryPoint": 12193,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              }
            },
            "generatedSources": [
              {
                "ast": {
                  "nativeSrc": "0:26137:46",
                  "nodeType": "YulBlock",
                  "src": "0:26137:46",
                  "statements": [
                    {
                      "body": {
                        "nativeSrc": "47:35:46",
                        "nodeType": "YulBlock",
                        "src": "47:35:46",
                        "statements": [
                          {
                            "nativeSrc": "57:19:46",
                            "nodeType": "YulAssignment",
                            "src": "57:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "73:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "73:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "67:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "67:5:46"
                              },
                              "nativeSrc": "67:9:46",
                              "nodeType": "YulFunctionCall",
                              "src": "67:9:46"
                            },
                            "variableNames": [
                              {
                                "name": "memPtr",
                                "nativeSrc": "57:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "57:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "allocate_unbounded",
                      "nativeSrc": "7:75:46",
                      "nodeType": "YulFunctionDefinition",
                      "returnVariables": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "40:6:46",
                          "nodeType": "YulTypedName",
                          "src": "40:6:46",
                          "type": ""
                        }
                      ],
                      "src": "7:75:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "177:28:46",
                        "nodeType": "YulBlock",
                        "src": "177:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "194:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "194:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "197:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "197:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "187:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "187:6:46"
                              },
                              "nativeSrc": "187:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "187:12:46"
                            },
                            "nativeSrc": "187:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "187:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                      "nativeSrc": "88:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "88:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "300:28:46",
                        "nodeType": "YulBlock",
                        "src": "300:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "317:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "317:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "320:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "320:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "310:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "310:6:46"
                              },
                              "nativeSrc": "310:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "310:12:46"
                            },
                            "nativeSrc": "310:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "310:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                      "nativeSrc": "211:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "211:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "379:81:46",
                        "nodeType": "YulBlock",
                        "src": "379:81:46",
                        "statements": [
                          {
                            "nativeSrc": "389:65:46",
                            "nodeType": "YulAssignment",
                            "src": "389:65:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "404:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "411:42:46",
                                  "nodeType": "YulLiteral",
                                  "src": "411:42:46",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "400:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "400:3:46"
                              },
                              "nativeSrc": "400:54:46",
                              "nodeType": "YulFunctionCall",
                              "src": "400:54:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "389:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "389:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint160",
                      "nativeSrc": "334:126:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "361:5:46",
                          "nodeType": "YulTypedName",
                          "src": "361:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "371:7:46",
                          "nodeType": "YulTypedName",
                          "src": "371:7:46",
                          "type": ""
                        }
                      ],
                      "src": "334:126:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "511:51:46",
                        "nodeType": "YulBlock",
                        "src": "511:51:46",
                        "statements": [
                          {
                            "nativeSrc": "521:35:46",
                            "nodeType": "YulAssignment",
                            "src": "521:35:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "550:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "550:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint160",
                                "nativeSrc": "532:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "532:17:46"
                              },
                              "nativeSrc": "532:24:46",
                              "nodeType": "YulFunctionCall",
                              "src": "532:24:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "521:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "521:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_address",
                      "nativeSrc": "466:96:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "493:5:46",
                          "nodeType": "YulTypedName",
                          "src": "493:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "503:7:46",
                          "nodeType": "YulTypedName",
                          "src": "503:7:46",
                          "type": ""
                        }
                      ],
                      "src": "466:96:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "611:79:46",
                        "nodeType": "YulBlock",
                        "src": "611:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "668:16:46",
                              "nodeType": "YulBlock",
                              "src": "668:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "677:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "677:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "680:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "680:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "670:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:6:46"
                                    },
                                    "nativeSrc": "670:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:12:46"
                                  },
                                  "nativeSrc": "670:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "670:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "634:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "634:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "659:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "659:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_address",
                                        "nativeSrc": "641:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "641:17:46"
                                      },
                                      "nativeSrc": "641:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "641:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "631:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "631:2:46"
                                  },
                                  "nativeSrc": "631:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "631:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "624:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "624:6:46"
                              },
                              "nativeSrc": "624:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "624:43:46"
                            },
                            "nativeSrc": "621:63:46",
                            "nodeType": "YulIf",
                            "src": "621:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_address",
                      "nativeSrc": "568:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "604:5:46",
                          "nodeType": "YulTypedName",
                          "src": "604:5:46",
                          "type": ""
                        }
                      ],
                      "src": "568:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "748:87:46",
                        "nodeType": "YulBlock",
                        "src": "748:87:46",
                        "statements": [
                          {
                            "nativeSrc": "758:29:46",
                            "nodeType": "YulAssignment",
                            "src": "758:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "780:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "767:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "767:12:46"
                              },
                              "nativeSrc": "767:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "767:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "758:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "758:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "823:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "823:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_address",
                                "nativeSrc": "796:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "796:26:46"
                              },
                              "nativeSrc": "796:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "796:33:46"
                            },
                            "nativeSrc": "796:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "796:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_address",
                      "nativeSrc": "696:139:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "726:6:46",
                          "nodeType": "YulTypedName",
                          "src": "726:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "734:3:46",
                          "nodeType": "YulTypedName",
                          "src": "734:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "742:5:46",
                          "nodeType": "YulTypedName",
                          "src": "742:5:46",
                          "type": ""
                        }
                      ],
                      "src": "696:139:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "907:263:46",
                        "nodeType": "YulBlock",
                        "src": "907:263:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "953:83:46",
                              "nodeType": "YulBlock",
                              "src": "953:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "955:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "955:77:46"
                                    },
                                    "nativeSrc": "955:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "955:79:46"
                                  },
                                  "nativeSrc": "955:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "955:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "928:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "928:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "937:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "937:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "924:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "924:3:46"
                                  },
                                  "nativeSrc": "924:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "924:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "949:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "949:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "920:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "920:3:46"
                              },
                              "nativeSrc": "920:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "920:32:46"
                            },
                            "nativeSrc": "917:119:46",
                            "nodeType": "YulIf",
                            "src": "917:119:46"
                          },
                          {
                            "nativeSrc": "1046:117:46",
                            "nodeType": "YulBlock",
                            "src": "1046:117:46",
                            "statements": [
                              {
                                "nativeSrc": "1061:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "1061:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "1075:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "1075:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1065:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "1065:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "1090:63:46",
                                "nodeType": "YulAssignment",
                                "src": "1090:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "1125:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1125:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "1136:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1136:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1121:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "1121:3:46"
                                      },
                                      "nativeSrc": "1121:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1121:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "1145:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1145:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "1100:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1100:20:46"
                                  },
                                  "nativeSrc": "1100:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1100:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1090:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1090:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_address",
                      "nativeSrc": "841:329:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "877:9:46",
                          "nodeType": "YulTypedName",
                          "src": "877:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "888:7:46",
                          "nodeType": "YulTypedName",
                          "src": "888:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "900:6:46",
                          "nodeType": "YulTypedName",
                          "src": "900:6:46",
                          "type": ""
                        }
                      ],
                      "src": "841:329:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1273:40:46",
                        "nodeType": "YulBlock",
                        "src": "1273:40:46",
                        "statements": [
                          {
                            "nativeSrc": "1284:22:46",
                            "nodeType": "YulAssignment",
                            "src": "1284:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1300:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1300:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "1294:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "1294:5:46"
                              },
                              "nativeSrc": "1294:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1294:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "1284:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1284:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "1176:137:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1256:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1256:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "1266:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1266:6:46",
                          "type": ""
                        }
                      ],
                      "src": "1176:137:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1453:73:46",
                        "nodeType": "YulBlock",
                        "src": "1453:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1470:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1470:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "1475:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1475:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "1463:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1463:6:46"
                              },
                              "nativeSrc": "1463:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1463:19:46"
                            },
                            "nativeSrc": "1463:19:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1463:19:46"
                          },
                          {
                            "nativeSrc": "1491:29:46",
                            "nodeType": "YulAssignment",
                            "src": "1491:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1510:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "1515:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "1515:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "1506:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "1506:3:46"
                              },
                              "nativeSrc": "1506:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1506:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "1491:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "1491:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nativeSrc": "1319:207:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "1425:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1425:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "1430:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1430:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "1441:11:46",
                          "nodeType": "YulTypedName",
                          "src": "1441:11:46",
                          "type": ""
                        }
                      ],
                      "src": "1319:207:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1627:60:46",
                        "nodeType": "YulBlock",
                        "src": "1627:60:46",
                        "statements": [
                          {
                            "nativeSrc": "1637:11:46",
                            "nodeType": "YulAssignment",
                            "src": "1637:11:46",
                            "value": {
                              "name": "ptr",
                              "nativeSrc": "1645:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "1645:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nativeSrc": "1637:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "1637:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "1658:22:46",
                            "nodeType": "YulAssignment",
                            "src": "1658:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nativeSrc": "1670:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "1675:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "1675:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "1666:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "1666:3:46"
                              },
                              "nativeSrc": "1666:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1666:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nativeSrc": "1658:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "1658:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_dataslot_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "1532:155:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "ptr",
                          "nativeSrc": "1614:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1614:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "data",
                          "nativeSrc": "1622:4:46",
                          "nodeType": "YulTypedName",
                          "src": "1622:4:46",
                          "type": ""
                        }
                      ],
                      "src": "1532:155:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1738:32:46",
                        "nodeType": "YulBlock",
                        "src": "1738:32:46",
                        "statements": [
                          {
                            "nativeSrc": "1748:16:46",
                            "nodeType": "YulAssignment",
                            "src": "1748:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "1759:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "1759:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "1748:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "1748:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint256",
                      "nativeSrc": "1693:77:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1720:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1720:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "1730:7:46",
                          "nodeType": "YulTypedName",
                          "src": "1730:7:46",
                          "type": ""
                        }
                      ],
                      "src": "1693:77:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1831:53:46",
                        "nodeType": "YulBlock",
                        "src": "1831:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1848:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1848:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "1871:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1871:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nativeSrc": "1853:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1853:17:46"
                                  },
                                  "nativeSrc": "1853:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1853:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "1841:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1841:6:46"
                              },
                              "nativeSrc": "1841:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1841:37:46"
                            },
                            "nativeSrc": "1841:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1841:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nativeSrc": "1776:108:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1819:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1819:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "1826:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1826:3:46",
                          "type": ""
                        }
                      ],
                      "src": "1776:108:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1945:53:46",
                        "nodeType": "YulBlock",
                        "src": "1945:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1962:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1962:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "1985:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1985:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nativeSrc": "1967:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1967:17:46"
                                  },
                                  "nativeSrc": "1967:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1967:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "1955:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1955:6:46"
                              },
                              "nativeSrc": "1955:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1955:37:46"
                            },
                            "nativeSrc": "1955:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1955:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_address_to_t_address",
                      "nativeSrc": "1890:108:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1933:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1933:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "1940:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1940:3:46",
                          "type": ""
                        }
                      ],
                      "src": "1890:108:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2172:924:46",
                        "nodeType": "YulBlock",
                        "src": "2172:924:46",
                        "statements": [
                          {
                            "nativeSrc": "2182:26:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "2182:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2198:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2198:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "2203:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "2203:4:46",
                                  "type": "",
                                  "value": "0xa0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "2194:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2194:3:46"
                              },
                              "nativeSrc": "2194:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2194:14:46"
                            },
                            "variables": [
                              {
                                "name": "tail",
                                "nativeSrc": "2186:4:46",
                                "nodeType": "YulTypedName",
                                "src": "2186:4:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2218:165:46",
                            "nodeType": "YulBlock",
                            "src": "2218:165:46",
                            "statements": [
                              {
                                "nativeSrc": "2254:43:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "2254:43:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "2284:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2284:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2291:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2291:4:46",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2280:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2280:3:46"
                                      },
                                      "nativeSrc": "2280:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2280:16:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nativeSrc": "2274:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2274:5:46"
                                  },
                                  "nativeSrc": "2274:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2274:23:46"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nativeSrc": "2258:12:46",
                                    "nodeType": "YulTypedName",
                                    "src": "2258:12:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nativeSrc": "2344:12:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2344:12:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2362:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2362:3:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2367:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2367:4:46",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2358:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2358:3:46"
                                      },
                                      "nativeSrc": "2358:14:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2358:14:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_t_uint256_to_t_uint256",
                                    "nativeSrc": "2310:33:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2310:33:46"
                                  },
                                  "nativeSrc": "2310:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2310:63:46"
                                },
                                "nativeSrc": "2310:63:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "2310:63:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2393:166:46",
                            "nodeType": "YulBlock",
                            "src": "2393:166:46",
                            "statements": [
                              {
                                "nativeSrc": "2430:43:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "2430:43:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "2460:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2460:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2467:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2467:4:46",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2456:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2456:3:46"
                                      },
                                      "nativeSrc": "2456:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2456:16:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nativeSrc": "2450:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2450:5:46"
                                  },
                                  "nativeSrc": "2450:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2450:23:46"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nativeSrc": "2434:12:46",
                                    "nodeType": "YulTypedName",
                                    "src": "2434:12:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nativeSrc": "2520:12:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2520:12:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2538:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2538:3:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2543:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2543:4:46",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2534:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2534:3:46"
                                      },
                                      "nativeSrc": "2534:14:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2534:14:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_t_address_to_t_address",
                                    "nativeSrc": "2486:33:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2486:33:46"
                                  },
                                  "nativeSrc": "2486:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2486:63:46"
                                },
                                "nativeSrc": "2486:63:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "2486:63:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2569:165:46",
                            "nodeType": "YulBlock",
                            "src": "2569:165:46",
                            "statements": [
                              {
                                "nativeSrc": "2605:43:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "2605:43:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "2635:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2635:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2642:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2642:4:46",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2631:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2631:3:46"
                                      },
                                      "nativeSrc": "2631:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2631:16:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nativeSrc": "2625:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2625:5:46"
                                  },
                                  "nativeSrc": "2625:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2625:23:46"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nativeSrc": "2609:12:46",
                                    "nodeType": "YulTypedName",
                                    "src": "2609:12:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nativeSrc": "2695:12:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2695:12:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2713:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2713:3:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2718:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2718:4:46",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2709:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2709:3:46"
                                      },
                                      "nativeSrc": "2709:14:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2709:14:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_t_address_to_t_address",
                                    "nativeSrc": "2661:33:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2661:33:46"
                                  },
                                  "nativeSrc": "2661:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2661:63:46"
                                },
                                "nativeSrc": "2661:63:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "2661:63:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2744:166:46",
                            "nodeType": "YulBlock",
                            "src": "2744:166:46",
                            "statements": [
                              {
                                "nativeSrc": "2781:43:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "2781:43:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "2811:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2811:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2818:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2818:4:46",
                                          "type": "",
                                          "value": "0x60"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2807:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2807:3:46"
                                      },
                                      "nativeSrc": "2807:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2807:16:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nativeSrc": "2801:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2801:5:46"
                                  },
                                  "nativeSrc": "2801:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2801:23:46"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nativeSrc": "2785:12:46",
                                    "nodeType": "YulTypedName",
                                    "src": "2785:12:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nativeSrc": "2871:12:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2871:12:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "2889:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2889:3:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2894:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2894:4:46",
                                          "type": "",
                                          "value": "0x60"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2885:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2885:3:46"
                                      },
                                      "nativeSrc": "2885:14:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2885:14:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_t_uint256_to_t_uint256",
                                    "nativeSrc": "2837:33:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2837:33:46"
                                  },
                                  "nativeSrc": "2837:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2837:63:46"
                                },
                                "nativeSrc": "2837:63:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "2837:63:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2920:169:46",
                            "nodeType": "YulBlock",
                            "src": "2920:169:46",
                            "statements": [
                              {
                                "nativeSrc": "2960:43:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "2960:43:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "2990:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "2990:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2997:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "2997:4:46",
                                          "type": "",
                                          "value": "0x80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "2986:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "2986:3:46"
                                      },
                                      "nativeSrc": "2986:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2986:16:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nativeSrc": "2980:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2980:5:46"
                                  },
                                  "nativeSrc": "2980:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2980:23:46"
                                },
                                "variables": [
                                  {
                                    "name": "memberValue0",
                                    "nativeSrc": "2964:12:46",
                                    "nodeType": "YulTypedName",
                                    "src": "2964:12:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "memberValue0",
                                      "nativeSrc": "3050:12:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3050:12:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nativeSrc": "3068:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "3068:3:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3073:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "3073:4:46",
                                          "type": "",
                                          "value": "0x80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3064:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "3064:3:46"
                                      },
                                      "nativeSrc": "3064:14:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3064:14:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_encode_t_uint256_to_t_uint256",
                                    "nativeSrc": "3016:33:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3016:33:46"
                                  },
                                  "nativeSrc": "3016:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3016:63:46"
                                },
                                "nativeSrc": "3016:63:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "3016:63:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr",
                      "nativeSrc": "2070:1026:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "2159:5:46",
                          "nodeType": "YulTypedName",
                          "src": "2159:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "2166:3:46",
                          "nodeType": "YulTypedName",
                          "src": "2166:3:46",
                          "type": ""
                        }
                      ],
                      "src": "2070:1026:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3228:145:46",
                        "nodeType": "YulBlock",
                        "src": "3228:145:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3318:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3318:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "3326:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3326:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr",
                                "nativeSrc": "3238:79:46",
                                "nodeType": "YulIdentifier",
                                "src": "3238:79:46"
                              },
                              "nativeSrc": "3238:92:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3238:92:46"
                            },
                            "nativeSrc": "3238:92:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "3238:92:46"
                          },
                          {
                            "nativeSrc": "3339:28:46",
                            "nodeType": "YulAssignment",
                            "src": "3339:28:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "3357:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3357:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3362:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "3362:4:46",
                                  "type": "",
                                  "value": "0xa0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "3353:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "3353:3:46"
                              },
                              "nativeSrc": "3353:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3353:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "updatedPos",
                                "nativeSrc": "3339:10:46",
                                "nodeType": "YulIdentifier",
                                "src": "3339:10:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encodeUpdatedPos_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr",
                      "nativeSrc": "3102:271:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value0",
                          "nativeSrc": "3201:6:46",
                          "nodeType": "YulTypedName",
                          "src": "3201:6:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "3209:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3209:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updatedPos",
                          "nativeSrc": "3217:10:46",
                          "nodeType": "YulTypedName",
                          "src": "3217:10:46",
                          "type": ""
                        }
                      ],
                      "src": "3102:271:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3477:38:46",
                        "nodeType": "YulBlock",
                        "src": "3477:38:46",
                        "statements": [
                          {
                            "nativeSrc": "3487:22:46",
                            "nodeType": "YulAssignment",
                            "src": "3487:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nativeSrc": "3499:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3499:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3504:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "3504:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "3495:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "3495:3:46"
                              },
                              "nativeSrc": "3495:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3495:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "next",
                                "nativeSrc": "3487:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "3487:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_nextElement_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "3379:136:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "ptr",
                          "nativeSrc": "3464:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3464:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "next",
                          "nativeSrc": "3472:4:46",
                          "nodeType": "YulTypedName",
                          "src": "3472:4:46",
                          "type": ""
                        }
                      ],
                      "src": "3379:136:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3761:746:46",
                        "nodeType": "YulBlock",
                        "src": "3761:746:46",
                        "statements": [
                          {
                            "nativeSrc": "3771:91:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "3771:91:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3856:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3856:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                "nativeSrc": "3785:70:46",
                                "nodeType": "YulIdentifier",
                                "src": "3785:70:46"
                              },
                              "nativeSrc": "3785:77:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3785:77:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "3775:6:46",
                                "nodeType": "YulTypedName",
                                "src": "3775:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "3871:116:46",
                            "nodeType": "YulAssignment",
                            "src": "3871:116:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "3975:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3975:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "3980:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3980:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack",
                                "nativeSrc": "3878:96:46",
                                "nodeType": "YulIdentifier",
                                "src": "3878:96:46"
                              },
                              "nativeSrc": "3878:109:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3878:109:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "3871:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "3871:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "3996:94:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "3996:94:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4084:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4084:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                "nativeSrc": "4011:72:46",
                                "nodeType": "YulIdentifier",
                                "src": "4011:72:46"
                              },
                              "nativeSrc": "4011:79:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4011:79:46"
                            },
                            "variables": [
                              {
                                "name": "baseRef",
                                "nativeSrc": "4000:7:46",
                                "nodeType": "YulTypedName",
                                "src": "4000:7:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "4099:21:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "4099:21:46",
                            "value": {
                              "name": "baseRef",
                              "nativeSrc": "4113:7:46",
                              "nodeType": "YulIdentifier",
                              "src": "4113:7:46"
                            },
                            "variables": [
                              {
                                "name": "srcPtr",
                                "nativeSrc": "4103:6:46",
                                "nodeType": "YulTypedName",
                                "src": "4103:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "4189:293:46",
                              "nodeType": "YulBlock",
                              "src": "4189:293:46",
                              "statements": [
                                {
                                  "nativeSrc": "4203:34:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4203:34:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "4230:6:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4230:6:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nativeSrc": "4224:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4224:5:46"
                                    },
                                    "nativeSrc": "4224:13:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4224:13:46"
                                  },
                                  "variables": [
                                    {
                                      "name": "elementValue0",
                                      "nativeSrc": "4207:13:46",
                                      "nodeType": "YulTypedName",
                                      "src": "4207:13:46",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4250:116:46",
                                  "nodeType": "YulAssignment",
                                  "src": "4250:116:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "elementValue0",
                                        "nativeSrc": "4347:13:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4347:13:46"
                                      },
                                      {
                                        "name": "pos",
                                        "nativeSrc": "4362:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4362:3:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encodeUpdatedPos_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr",
                                      "nativeSrc": "4257:89:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:89:46"
                                    },
                                    "nativeSrc": "4257:109:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:109:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "pos",
                                      "nativeSrc": "4250:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4250:3:46"
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4379:93:46",
                                  "nodeType": "YulAssignment",
                                  "src": "4379:93:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcPtr",
                                        "nativeSrc": "4465:6:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4465:6:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_nextElement_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                      "nativeSrc": "4389:75:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4389:75:46"
                                    },
                                    "nativeSrc": "4389:83:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4389:83:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcPtr",
                                      "nativeSrc": "4379:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4379:6:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nativeSrc": "4151:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4151:1:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "4154:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4154:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nativeSrc": "4148:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "4148:2:46"
                              },
                              "nativeSrc": "4148:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4148:13:46"
                            },
                            "nativeSrc": "4129:353:46",
                            "nodeType": "YulForLoop",
                            "post": {
                              "nativeSrc": "4162:18:46",
                              "nodeType": "YulBlock",
                              "src": "4162:18:46",
                              "statements": [
                                {
                                  "nativeSrc": "4164:14:46",
                                  "nodeType": "YulAssignment",
                                  "src": "4164:14:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "4173:1:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4173:1:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4176:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "4176:1:46",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4169:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4169:3:46"
                                    },
                                    "nativeSrc": "4169:9:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4169:9:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "4164:1:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4164:1:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nativeSrc": "4133:14:46",
                              "nodeType": "YulBlock",
                              "src": "4133:14:46",
                              "statements": [
                                {
                                  "nativeSrc": "4135:10:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4135:10:46",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4144:1:46",
                                    "nodeType": "YulLiteral",
                                    "src": "4144:1:46",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "4139:1:46",
                                      "nodeType": "YulTypedName",
                                      "src": "4139:1:46",
                                      "type": ""
                                    }
                                  ]
                                }
                              ]
                            },
                            "src": "4129:353:46"
                          },
                          {
                            "nativeSrc": "4491:10:46",
                            "nodeType": "YulAssignment",
                            "src": "4491:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "4498:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "4498:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "4491:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "4491:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nativeSrc": "3591:916:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "3740:5:46",
                          "nodeType": "YulTypedName",
                          "src": "3740:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "3747:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3747:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "3756:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3756:3:46",
                          "type": ""
                        }
                      ],
                      "src": "3591:916:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4707:271:46",
                        "nodeType": "YulBlock",
                        "src": "4707:271:46",
                        "statements": [
                          {
                            "nativeSrc": "4717:26:46",
                            "nodeType": "YulAssignment",
                            "src": "4717:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "4729:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4729:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "4740:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "4740:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "4725:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "4725:3:46"
                              },
                              "nativeSrc": "4725:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4725:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "4717:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "4717:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "4764:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4764:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4775:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "4775:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "4760:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4760:3:46"
                                  },
                                  "nativeSrc": "4760:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4760:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "4783:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4783:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "4789:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4789:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "4779:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4779:3:46"
                                  },
                                  "nativeSrc": "4779:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4779:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "4753:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "4753:6:46"
                              },
                              "nativeSrc": "4753:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4753:47:46"
                            },
                            "nativeSrc": "4753:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "4753:47:46"
                          },
                          {
                            "nativeSrc": "4809:162:46",
                            "nodeType": "YulAssignment",
                            "src": "4809:162:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4957:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4957:6:46"
                                },
                                {
                                  "name": "tail",
                                  "nativeSrc": "4966:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4966:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack",
                                "nativeSrc": "4817:139:46",
                                "nodeType": "YulIdentifier",
                                "src": "4817:139:46"
                              },
                              "nativeSrc": "4817:154:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4817:154:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "4809:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "4809:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                      "nativeSrc": "4513:465:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "4679:9:46",
                          "nodeType": "YulTypedName",
                          "src": "4679:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "4691:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4691:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "4702:4:46",
                          "nodeType": "YulTypedName",
                          "src": "4702:4:46",
                          "type": ""
                        }
                      ],
                      "src": "4513:465:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5027:79:46",
                        "nodeType": "YulBlock",
                        "src": "5027:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "5084:16:46",
                              "nodeType": "YulBlock",
                              "src": "5084:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5093:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "5093:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5096:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "5096:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "5086:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5086:6:46"
                                    },
                                    "nativeSrc": "5086:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5086:12:46"
                                  },
                                  "nativeSrc": "5086:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5086:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "5050:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5050:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "5075:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5075:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nativeSrc": "5057:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "5057:17:46"
                                      },
                                      "nativeSrc": "5057:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5057:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "5047:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5047:2:46"
                                  },
                                  "nativeSrc": "5047:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5047:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "5040:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5040:6:46"
                              },
                              "nativeSrc": "5040:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5040:43:46"
                            },
                            "nativeSrc": "5037:63:46",
                            "nodeType": "YulIf",
                            "src": "5037:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_uint256",
                      "nativeSrc": "4984:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "5020:5:46",
                          "nodeType": "YulTypedName",
                          "src": "5020:5:46",
                          "type": ""
                        }
                      ],
                      "src": "4984:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5164:87:46",
                        "nodeType": "YulBlock",
                        "src": "5164:87:46",
                        "statements": [
                          {
                            "nativeSrc": "5174:29:46",
                            "nodeType": "YulAssignment",
                            "src": "5174:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "5196:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "5196:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "5183:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "5183:12:46"
                              },
                              "nativeSrc": "5183:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5183:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "5174:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "5174:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "5239:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "5239:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_uint256",
                                "nativeSrc": "5212:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "5212:26:46"
                              },
                              "nativeSrc": "5212:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5212:33:46"
                            },
                            "nativeSrc": "5212:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5212:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_uint256",
                      "nativeSrc": "5112:139:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "5142:6:46",
                          "nodeType": "YulTypedName",
                          "src": "5142:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "5150:3:46",
                          "nodeType": "YulTypedName",
                          "src": "5150:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "5158:5:46",
                          "nodeType": "YulTypedName",
                          "src": "5158:5:46",
                          "type": ""
                        }
                      ],
                      "src": "5112:139:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5323:263:46",
                        "nodeType": "YulBlock",
                        "src": "5323:263:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "5369:83:46",
                              "nodeType": "YulBlock",
                              "src": "5369:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "5371:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5371:77:46"
                                    },
                                    "nativeSrc": "5371:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5371:79:46"
                                  },
                                  "nativeSrc": "5371:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5371:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5344:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5344:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "5353:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5353:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "5340:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5340:3:46"
                                  },
                                  "nativeSrc": "5340:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5340:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5365:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5365:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "5336:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "5336:3:46"
                              },
                              "nativeSrc": "5336:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5336:32:46"
                            },
                            "nativeSrc": "5333:119:46",
                            "nodeType": "YulIf",
                            "src": "5333:119:46"
                          },
                          {
                            "nativeSrc": "5462:117:46",
                            "nodeType": "YulBlock",
                            "src": "5462:117:46",
                            "statements": [
                              {
                                "nativeSrc": "5477:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "5477:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "5491:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5491:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "5481:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "5481:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "5506:63:46",
                                "nodeType": "YulAssignment",
                                "src": "5506:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "5541:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5541:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "5552:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5552:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "5537:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "5537:3:46"
                                      },
                                      "nativeSrc": "5537:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5537:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5561:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5561:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "5516:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5516:20:46"
                                  },
                                  "nativeSrc": "5516:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5516:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5506:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5506:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_uint256",
                      "nativeSrc": "5257:329:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "5293:9:46",
                          "nodeType": "YulTypedName",
                          "src": "5293:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "5304:7:46",
                          "nodeType": "YulTypedName",
                          "src": "5304:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "5316:6:46",
                          "nodeType": "YulTypedName",
                          "src": "5316:6:46",
                          "type": ""
                        }
                      ],
                      "src": "5257:329:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5681:28:46",
                        "nodeType": "YulBlock",
                        "src": "5681:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5698:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5698:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5701:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5701:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "5691:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5691:6:46"
                              },
                              "nativeSrc": "5691:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5691:12:46"
                            },
                            "nativeSrc": "5691:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5691:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                      "nativeSrc": "5592:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "5592:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5763:54:46",
                        "nodeType": "YulBlock",
                        "src": "5763:54:46",
                        "statements": [
                          {
                            "nativeSrc": "5773:38:46",
                            "nodeType": "YulAssignment",
                            "src": "5773:38:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "5791:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5791:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5798:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "5798:2:46",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "5787:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5787:3:46"
                                  },
                                  "nativeSrc": "5787:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5787:14:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "5807:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "5807:2:46",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nativeSrc": "5803:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5803:3:46"
                                  },
                                  "nativeSrc": "5803:7:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5803:7:46"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "5783:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "5783:3:46"
                              },
                              "nativeSrc": "5783:28:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5783:28:46"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nativeSrc": "5773:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5773:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "round_up_to_mul_of_32",
                      "nativeSrc": "5715:102:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "5746:5:46",
                          "nodeType": "YulTypedName",
                          "src": "5746:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nativeSrc": "5756:6:46",
                          "nodeType": "YulTypedName",
                          "src": "5756:6:46",
                          "type": ""
                        }
                      ],
                      "src": "5715:102:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5851:152:46",
                        "nodeType": "YulBlock",
                        "src": "5851:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5868:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5868:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5871:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5871:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "5861:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5861:6:46"
                              },
                              "nativeSrc": "5861:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5861:88:46"
                            },
                            "nativeSrc": "5861:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5861:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5965:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5965:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5968:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5968:4:46",
                                  "type": "",
                                  "value": "0x41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "5958:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5958:6:46"
                              },
                              "nativeSrc": "5958:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5958:15:46"
                            },
                            "nativeSrc": "5958:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5958:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5989:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5989:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5992:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5992:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "5982:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5982:6:46"
                              },
                              "nativeSrc": "5982:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5982:15:46"
                            },
                            "nativeSrc": "5982:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5982:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x41",
                      "nativeSrc": "5823:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "5823:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6052:238:46",
                        "nodeType": "YulBlock",
                        "src": "6052:238:46",
                        "statements": [
                          {
                            "nativeSrc": "6062:58:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "6062:58:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "6084:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6084:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "size",
                                      "nativeSrc": "6114:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6114:4:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "round_up_to_mul_of_32",
                                    "nativeSrc": "6092:21:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6092:21:46"
                                  },
                                  "nativeSrc": "6092:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6092:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "6080:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "6080:3:46"
                              },
                              "nativeSrc": "6080:40:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6080:40:46"
                            },
                            "variables": [
                              {
                                "name": "newFreePtr",
                                "nativeSrc": "6066:10:46",
                                "nodeType": "YulTypedName",
                                "src": "6066:10:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "6231:22:46",
                              "nodeType": "YulBlock",
                              "src": "6231:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "6233:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6233:16:46"
                                    },
                                    "nativeSrc": "6233:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6233:18:46"
                                  },
                                  "nativeSrc": "6233:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6233:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nativeSrc": "6174:10:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6174:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6186:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "6186:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "6171:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6171:2:46"
                                  },
                                  "nativeSrc": "6171:34:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6171:34:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nativeSrc": "6210:10:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6210:10:46"
                                    },
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "6222:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6222:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "6207:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6207:2:46"
                                  },
                                  "nativeSrc": "6207:22:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6207:22:46"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nativeSrc": "6168:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "6168:2:46"
                              },
                              "nativeSrc": "6168:62:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6168:62:46"
                            },
                            "nativeSrc": "6165:88:46",
                            "nodeType": "YulIf",
                            "src": "6165:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "6269:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6269:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "6273:10:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6273:10:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "6262:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6262:6:46"
                              },
                              "nativeSrc": "6262:22:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6262:22:46"
                            },
                            "nativeSrc": "6262:22:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6262:22:46"
                          }
                        ]
                      },
                      "name": "finalize_allocation",
                      "nativeSrc": "6009:281:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "6038:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6038:6:46",
                          "type": ""
                        },
                        {
                          "name": "size",
                          "nativeSrc": "6046:4:46",
                          "nodeType": "YulTypedName",
                          "src": "6046:4:46",
                          "type": ""
                        }
                      ],
                      "src": "6009:281:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6337:88:46",
                        "nodeType": "YulBlock",
                        "src": "6337:88:46",
                        "statements": [
                          {
                            "nativeSrc": "6347:30:46",
                            "nodeType": "YulAssignment",
                            "src": "6347:30:46",
                            "value": {
                              "arguments": [],
                              "functionName": {
                                "name": "allocate_unbounded",
                                "nativeSrc": "6357:18:46",
                                "nodeType": "YulIdentifier",
                                "src": "6357:18:46"
                              },
                              "nativeSrc": "6357:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6357:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "memPtr",
                                "nativeSrc": "6347:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6347:6:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "6406:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6406:6:46"
                                },
                                {
                                  "name": "size",
                                  "nativeSrc": "6414:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6414:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "finalize_allocation",
                                "nativeSrc": "6386:19:46",
                                "nodeType": "YulIdentifier",
                                "src": "6386:19:46"
                              },
                              "nativeSrc": "6386:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6386:33:46"
                            },
                            "nativeSrc": "6386:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6386:33:46"
                          }
                        ]
                      },
                      "name": "allocate_memory",
                      "nativeSrc": "6296:129:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "size",
                          "nativeSrc": "6321:4:46",
                          "nodeType": "YulTypedName",
                          "src": "6321:4:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "6330:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6330:6:46",
                          "type": ""
                        }
                      ],
                      "src": "6296:129:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6536:229:46",
                        "nodeType": "YulBlock",
                        "src": "6536:229:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "6641:22:46",
                              "nodeType": "YulBlock",
                              "src": "6641:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "6643:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6643:16:46"
                                    },
                                    "nativeSrc": "6643:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6643:18:46"
                                  },
                                  "nativeSrc": "6643:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6643:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "6613:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6613:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6621:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6621:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "6610:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "6610:2:46"
                              },
                              "nativeSrc": "6610:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6610:30:46"
                            },
                            "nativeSrc": "6607:56:46",
                            "nodeType": "YulIf",
                            "src": "6607:56:46"
                          },
                          {
                            "nativeSrc": "6673:25:46",
                            "nodeType": "YulAssignment",
                            "src": "6673:25:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "6685:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6685:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6693:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6693:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nativeSrc": "6681:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "6681:3:46"
                              },
                              "nativeSrc": "6681:17:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6681:17:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "6673:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "6673:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "6735:23:46",
                            "nodeType": "YulAssignment",
                            "src": "6735:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "size",
                                  "nativeSrc": "6747:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6747:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6753:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6753:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "6743:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "6743:3:46"
                              },
                              "nativeSrc": "6743:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6743:15:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "6735:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "6735:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_allocation_size_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "6431:334:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "length",
                          "nativeSrc": "6520:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6520:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "size",
                          "nativeSrc": "6531:4:46",
                          "nodeType": "YulTypedName",
                          "src": "6531:4:46",
                          "type": ""
                        }
                      ],
                      "src": "6431:334:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6860:28:46",
                        "nodeType": "YulBlock",
                        "src": "6860:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "6877:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6877:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6880:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6880:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "6870:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6870:6:46"
                              },
                              "nativeSrc": "6870:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6870:12:46"
                            },
                            "nativeSrc": "6870:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6870:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                      "nativeSrc": "6771:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "6771:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6983:28:46",
                        "nodeType": "YulBlock",
                        "src": "6983:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "7000:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7000:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7003:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7003:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "6993:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6993:6:46"
                              },
                              "nativeSrc": "6993:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6993:12:46"
                            },
                            "nativeSrc": "6993:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6993:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                      "nativeSrc": "6894:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "6894:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "7106:28:46",
                        "nodeType": "YulBlock",
                        "src": "7106:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "7123:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7123:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7126:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7126:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "7116:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "7116:6:46"
                              },
                              "nativeSrc": "7116:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7116:12:46"
                            },
                            "nativeSrc": "7116:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "7116:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
                      "nativeSrc": "7017:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "7017:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "7253:989:46",
                        "nodeType": "YulBlock",
                        "src": "7253:989:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "7297:83:46",
                              "nodeType": "YulBlock",
                              "src": "7297:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                                      "nativeSrc": "7299:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7299:77:46"
                                    },
                                    "nativeSrc": "7299:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7299:79:46"
                                  },
                                  "nativeSrc": "7299:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7299:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "end",
                                      "nativeSrc": "7274:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7274:3:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "7279:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7279:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "7270:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7270:3:46"
                                  },
                                  "nativeSrc": "7270:19:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7270:19:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7291:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7291:4:46",
                                  "type": "",
                                  "value": "0xa0"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "7266:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "7266:3:46"
                              },
                              "nativeSrc": "7266:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7266:30:46"
                            },
                            "nativeSrc": "7263:117:46",
                            "nodeType": "YulIf",
                            "src": "7263:117:46"
                          },
                          {
                            "nativeSrc": "7389:30:46",
                            "nodeType": "YulAssignment",
                            "src": "7389:30:46",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "7414:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7414:4:46",
                                  "type": "",
                                  "value": "0xa0"
                                }
                              ],
                              "functionName": {
                                "name": "allocate_memory",
                                "nativeSrc": "7398:15:46",
                                "nodeType": "YulIdentifier",
                                "src": "7398:15:46"
                              },
                              "nativeSrc": "7398:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7398:21:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "7389:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "7389:5:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7429:151:46",
                            "nodeType": "YulBlock",
                            "src": "7429:151:46",
                            "statements": [
                              {
                                "nativeSrc": "7465:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "7465:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "7479:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7479:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "7469:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "7469:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "7505:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7505:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7512:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "7512:4:46",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "7501:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7501:3:46"
                                      },
                                      "nativeSrc": "7501:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7501:16:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nativeSrc": "7544:9:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7544:9:46"
                                            },
                                            {
                                              "name": "offset",
                                              "nativeSrc": "7555:6:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7555:6:46"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "7540:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "7540:3:46"
                                          },
                                          "nativeSrc": "7540:22:46",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7540:22:46"
                                        },
                                        {
                                          "name": "end",
                                          "nativeSrc": "7564:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7564:3:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_uint256",
                                        "nativeSrc": "7519:20:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7519:20:46"
                                      },
                                      "nativeSrc": "7519:49:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7519:49:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7494:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7494:6:46"
                                  },
                                  "nativeSrc": "7494:75:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7494:75:46"
                                },
                                "nativeSrc": "7494:75:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "7494:75:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7590:153:46",
                            "nodeType": "YulBlock",
                            "src": "7590:153:46",
                            "statements": [
                              {
                                "nativeSrc": "7627:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "7627:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "7641:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7641:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "7631:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "7631:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "7668:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7668:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7675:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "7675:4:46",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "7664:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7664:3:46"
                                      },
                                      "nativeSrc": "7664:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7664:16:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nativeSrc": "7707:9:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7707:9:46"
                                            },
                                            {
                                              "name": "offset",
                                              "nativeSrc": "7718:6:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7718:6:46"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "7703:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "7703:3:46"
                                          },
                                          "nativeSrc": "7703:22:46",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7703:22:46"
                                        },
                                        {
                                          "name": "end",
                                          "nativeSrc": "7727:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7727:3:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_address",
                                        "nativeSrc": "7682:20:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7682:20:46"
                                      },
                                      "nativeSrc": "7682:49:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7682:49:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7657:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7657:6:46"
                                  },
                                  "nativeSrc": "7657:75:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7657:75:46"
                                },
                                "nativeSrc": "7657:75:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "7657:75:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7753:152:46",
                            "nodeType": "YulBlock",
                            "src": "7753:152:46",
                            "statements": [
                              {
                                "nativeSrc": "7789:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "7789:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "7803:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7803:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "7793:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "7793:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "7830:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7830:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7837:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "7837:4:46",
                                          "type": "",
                                          "value": "0x40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "7826:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7826:3:46"
                                      },
                                      "nativeSrc": "7826:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7826:16:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nativeSrc": "7869:9:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7869:9:46"
                                            },
                                            {
                                              "name": "offset",
                                              "nativeSrc": "7880:6:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "7880:6:46"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "7865:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "7865:3:46"
                                          },
                                          "nativeSrc": "7865:22:46",
                                          "nodeType": "YulFunctionCall",
                                          "src": "7865:22:46"
                                        },
                                        {
                                          "name": "end",
                                          "nativeSrc": "7889:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7889:3:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_address",
                                        "nativeSrc": "7844:20:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7844:20:46"
                                      },
                                      "nativeSrc": "7844:49:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7844:49:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7819:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7819:6:46"
                                  },
                                  "nativeSrc": "7819:75:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7819:75:46"
                                },
                                "nativeSrc": "7819:75:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "7819:75:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7915:153:46",
                            "nodeType": "YulBlock",
                            "src": "7915:153:46",
                            "statements": [
                              {
                                "nativeSrc": "7952:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "7952:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "7966:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7966:2:46",
                                  "type": "",
                                  "value": "96"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "7956:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "7956:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "7993:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7993:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8000:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "8000:4:46",
                                          "type": "",
                                          "value": "0x60"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "7989:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7989:3:46"
                                      },
                                      "nativeSrc": "7989:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7989:16:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nativeSrc": "8032:9:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "8032:9:46"
                                            },
                                            {
                                              "name": "offset",
                                              "nativeSrc": "8043:6:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "8043:6:46"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "8028:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "8028:3:46"
                                          },
                                          "nativeSrc": "8028:22:46",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8028:22:46"
                                        },
                                        {
                                          "name": "end",
                                          "nativeSrc": "8052:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "8052:3:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_uint256",
                                        "nativeSrc": "8007:20:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8007:20:46"
                                      },
                                      "nativeSrc": "8007:49:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8007:49:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "7982:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7982:6:46"
                                  },
                                  "nativeSrc": "7982:75:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7982:75:46"
                                },
                                "nativeSrc": "7982:75:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "7982:75:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "8078:157:46",
                            "nodeType": "YulBlock",
                            "src": "8078:157:46",
                            "statements": [
                              {
                                "nativeSrc": "8118:17:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "8118:17:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "8132:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "8132:3:46",
                                  "type": "",
                                  "value": "128"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "8122:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "8122:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "8160:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "8160:5:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8167:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "8167:4:46",
                                          "type": "",
                                          "value": "0x80"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "8156:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8156:3:46"
                                      },
                                      "nativeSrc": "8156:16:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8156:16:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nativeSrc": "8199:9:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "8199:9:46"
                                            },
                                            {
                                              "name": "offset",
                                              "nativeSrc": "8210:6:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "8210:6:46"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "8195:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "8195:3:46"
                                          },
                                          "nativeSrc": "8195:22:46",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8195:22:46"
                                        },
                                        {
                                          "name": "end",
                                          "nativeSrc": "8219:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "8219:3:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_uint256",
                                        "nativeSrc": "8174:20:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8174:20:46"
                                      },
                                      "nativeSrc": "8174:49:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8174:49:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "8149:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8149:6:46"
                                  },
                                  "nativeSrc": "8149:75:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8149:75:46"
                                },
                                "nativeSrc": "8149:75:46",
                                "nodeType": "YulExpressionStatement",
                                "src": "8149:75:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_t_struct$_Stake_$7616_memory_ptr",
                      "nativeSrc": "7175:1067:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "7228:9:46",
                          "nodeType": "YulTypedName",
                          "src": "7228:9:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "7239:3:46",
                          "nodeType": "YulTypedName",
                          "src": "7239:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "7247:5:46",
                          "nodeType": "YulTypedName",
                          "src": "7247:5:46",
                          "type": ""
                        }
                      ],
                      "src": "7175:1067:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "8410:654:46",
                        "nodeType": "YulBlock",
                        "src": "8410:654:46",
                        "statements": [
                          {
                            "nativeSrc": "8420:113:46",
                            "nodeType": "YulAssignment",
                            "src": "8420:113:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "8525:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8525:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_allocation_size_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                    "nativeSrc": "8445:79:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8445:79:46"
                                  },
                                  "nativeSrc": "8445:87:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8445:87:46"
                                }
                              ],
                              "functionName": {
                                "name": "allocate_memory",
                                "nativeSrc": "8429:15:46",
                                "nodeType": "YulIdentifier",
                                "src": "8429:15:46"
                              },
                              "nativeSrc": "8429:104:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8429:104:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "8420:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "8420:5:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "8542:16:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "8542:16:46",
                            "value": {
                              "name": "array",
                              "nativeSrc": "8553:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "8553:5:46"
                            },
                            "variables": [
                              {
                                "name": "dst",
                                "nativeSrc": "8546:3:46",
                                "nodeType": "YulTypedName",
                                "src": "8546:3:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "8575:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8575:5:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "8582:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8582:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "8568:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "8568:6:46"
                              },
                              "nativeSrc": "8568:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8568:21:46"
                            },
                            "nativeSrc": "8568:21:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "8568:21:46"
                          },
                          {
                            "nativeSrc": "8598:23:46",
                            "nodeType": "YulAssignment",
                            "src": "8598:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "8609:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8609:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "8616:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "8616:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "8605:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "8605:3:46"
                              },
                              "nativeSrc": "8605:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8605:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "dst",
                                "nativeSrc": "8598:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "8598:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "8631:44:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "8631:44:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "8649:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8649:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "8661:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8661:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "8669:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "8669:4:46",
                                      "type": "",
                                      "value": "0xa0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nativeSrc": "8657:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8657:3:46"
                                  },
                                  "nativeSrc": "8657:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8657:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "8645:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "8645:3:46"
                              },
                              "nativeSrc": "8645:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8645:30:46"
                            },
                            "variables": [
                              {
                                "name": "srcEnd",
                                "nativeSrc": "8635:6:46",
                                "nodeType": "YulTypedName",
                                "src": "8635:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "8703:103:46",
                              "nodeType": "YulBlock",
                              "src": "8703:103:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                      "nativeSrc": "8717:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8717:77:46"
                                    },
                                    "nativeSrc": "8717:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8717:79:46"
                                  },
                                  "nativeSrc": "8717:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8717:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "srcEnd",
                                  "nativeSrc": "8690:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8690:6:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "8698:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8698:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "8687:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "8687:2:46"
                              },
                              "nativeSrc": "8687:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8687:15:46"
                            },
                            "nativeSrc": "8684:122:46",
                            "nodeType": "YulIf",
                            "src": "8684:122:46"
                          },
                          {
                            "body": {
                              "nativeSrc": "8891:167:46",
                              "nodeType": "YulBlock",
                              "src": "8891:167:46",
                              "statements": [
                                {
                                  "nativeSrc": "8906:21:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8906:21:46",
                                  "value": {
                                    "name": "src",
                                    "nativeSrc": "8924:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8924:3:46"
                                  },
                                  "variables": [
                                    {
                                      "name": "elementPos",
                                      "nativeSrc": "8910:10:46",
                                      "nodeType": "YulTypedName",
                                      "src": "8910:10:46",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "8948:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8948:3:46"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "elementPos",
                                            "nativeSrc": "8997:10:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "8997:10:46"
                                          },
                                          {
                                            "name": "end",
                                            "nativeSrc": "9009:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "9009:3:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_decode_t_struct$_Stake_$7616_memory_ptr",
                                          "nativeSrc": "8953:43:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "8953:43:46"
                                        },
                                        "nativeSrc": "8953:60:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8953:60:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "8941:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8941:6:46"
                                    },
                                    "nativeSrc": "8941:73:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8941:73:46"
                                  },
                                  "nativeSrc": "8941:73:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8941:73:46"
                                },
                                {
                                  "nativeSrc": "9027:21:46",
                                  "nodeType": "YulAssignment",
                                  "src": "9027:21:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "9038:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9038:3:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9043:4:46",
                                        "nodeType": "YulLiteral",
                                        "src": "9043:4:46",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9034:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9034:3:46"
                                    },
                                    "nativeSrc": "9034:14:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9034:14:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dst",
                                      "nativeSrc": "9027:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9027:3:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nativeSrc": "8844:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8844:3:46"
                                },
                                {
                                  "name": "srcEnd",
                                  "nativeSrc": "8849:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8849:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nativeSrc": "8841:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "8841:2:46"
                              },
                              "nativeSrc": "8841:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8841:15:46"
                            },
                            "nativeSrc": "8815:243:46",
                            "nodeType": "YulForLoop",
                            "post": {
                              "nativeSrc": "8857:25:46",
                              "nodeType": "YulBlock",
                              "src": "8857:25:46",
                              "statements": [
                                {
                                  "nativeSrc": "8859:21:46",
                                  "nodeType": "YulAssignment",
                                  "src": "8859:21:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nativeSrc": "8870:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8870:3:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8875:4:46",
                                        "nodeType": "YulLiteral",
                                        "src": "8875:4:46",
                                        "type": "",
                                        "value": "0xa0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8866:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8866:3:46"
                                    },
                                    "nativeSrc": "8866:14:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8866:14:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "src",
                                      "nativeSrc": "8859:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8859:3:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nativeSrc": "8819:21:46",
                              "nodeType": "YulBlock",
                              "src": "8819:21:46",
                              "statements": [
                                {
                                  "nativeSrc": "8821:17:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8821:17:46",
                                  "value": {
                                    "name": "offset",
                                    "nativeSrc": "8832:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8832:6:46"
                                  },
                                  "variables": [
                                    {
                                      "name": "src",
                                      "nativeSrc": "8825:3:46",
                                      "nodeType": "YulTypedName",
                                      "src": "8825:3:46",
                                      "type": ""
                                    }
                                  ]
                                }
                              ]
                            },
                            "src": "8815:243:46"
                          }
                        ]
                      },
                      "name": "abi_decode_available_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "8285:779:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "8380:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8380:6:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "8388:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8388:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "8396:3:46",
                          "nodeType": "YulTypedName",
                          "src": "8396:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "8404:5:46",
                          "nodeType": "YulTypedName",
                          "src": "8404:5:46",
                          "type": ""
                        }
                      ],
                      "src": "8285:779:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "9207:316:46",
                        "nodeType": "YulBlock",
                        "src": "9207:316:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "9256:83:46",
                              "nodeType": "YulBlock",
                              "src": "9256:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                      "nativeSrc": "9258:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9258:77:46"
                                    },
                                    "nativeSrc": "9258:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9258:79:46"
                                  },
                                  "nativeSrc": "9258:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9258:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nativeSrc": "9235:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9235:6:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9243:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "9243:4:46",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9231:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9231:3:46"
                                      },
                                      "nativeSrc": "9231:17:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9231:17:46"
                                    },
                                    {
                                      "name": "end",
                                      "nativeSrc": "9250:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9250:3:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nativeSrc": "9227:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9227:3:46"
                                  },
                                  "nativeSrc": "9227:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9227:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "9220:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "9220:6:46"
                              },
                              "nativeSrc": "9220:35:46",
                              "nodeType": "YulFunctionCall",
                              "src": "9220:35:46"
                            },
                            "nativeSrc": "9217:122:46",
                            "nodeType": "YulIf",
                            "src": "9217:122:46"
                          },
                          {
                            "nativeSrc": "9348:34:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "9348:34:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "9375:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "9375:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "9362:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "9362:12:46"
                              },
                              "nativeSrc": "9362:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "9362:20:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "9352:6:46",
                                "nodeType": "YulTypedName",
                                "src": "9352:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "9391:126:46",
                            "nodeType": "YulAssignment",
                            "src": "9391:126:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "9490:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9490:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "9498:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "9498:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "9486:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9486:3:46"
                                  },
                                  "nativeSrc": "9486:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9486:17:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "9505:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "9505:6:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "9513:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "9513:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_available_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                "nativeSrc": "9400:85:46",
                                "nodeType": "YulIdentifier",
                                "src": "9400:85:46"
                              },
                              "nativeSrc": "9400:117:46",
                              "nodeType": "YulFunctionCall",
                              "src": "9400:117:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "9391:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "9391:5:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "9107:416:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "9185:6:46",
                          "nodeType": "YulTypedName",
                          "src": "9185:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "9193:3:46",
                          "nodeType": "YulTypedName",
                          "src": "9193:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "9201:5:46",
                          "nodeType": "YulTypedName",
                          "src": "9201:5:46",
                          "type": ""
                        }
                      ],
                      "src": "9107:416:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "9660:599:46",
                        "nodeType": "YulBlock",
                        "src": "9660:599:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "9706:83:46",
                              "nodeType": "YulBlock",
                              "src": "9706:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "9708:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9708:77:46"
                                    },
                                    "nativeSrc": "9708:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9708:79:46"
                                  },
                                  "nativeSrc": "9708:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9708:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9681:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9681:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "9690:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9690:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "9677:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9677:3:46"
                                  },
                                  "nativeSrc": "9677:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9677:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "9702:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "9702:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "9673:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "9673:3:46"
                              },
                              "nativeSrc": "9673:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "9673:32:46"
                            },
                            "nativeSrc": "9670:119:46",
                            "nodeType": "YulIf",
                            "src": "9670:119:46"
                          },
                          {
                            "nativeSrc": "9799:117:46",
                            "nodeType": "YulBlock",
                            "src": "9799:117:46",
                            "statements": [
                              {
                                "nativeSrc": "9814:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "9814:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "9828:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "9828:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9818:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9818:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "9843:63:46",
                                "nodeType": "YulAssignment",
                                "src": "9843:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9878:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9878:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "9889:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9889:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9874:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9874:3:46"
                                      },
                                      "nativeSrc": "9874:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9874:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9898:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9898:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "9853:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9853:20:46"
                                  },
                                  "nativeSrc": "9853:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9853:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "9843:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9843:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "9926:326:46",
                            "nodeType": "YulBlock",
                            "src": "9926:326:46",
                            "statements": [
                              {
                                "nativeSrc": "9941:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "9941:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9972:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9972:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9983:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "9983:2:46",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9968:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9968:3:46"
                                      },
                                      "nativeSrc": "9968:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9968:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "9955:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9955:12:46"
                                  },
                                  "nativeSrc": "9955:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9955:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9945:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9945:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "10034:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "10034:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "10036:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10036:77:46"
                                        },
                                        "nativeSrc": "10036:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10036:79:46"
                                      },
                                      "nativeSrc": "10036:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "10036:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "10006:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10006:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "10014:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "10014:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "10003:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10003:2:46"
                                  },
                                  "nativeSrc": "10003:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10003:30:46"
                                },
                                "nativeSrc": "10000:117:46",
                                "nodeType": "YulIf",
                                "src": "10000:117:46"
                              },
                              {
                                "nativeSrc": "10131:111:46",
                                "nodeType": "YulAssignment",
                                "src": "10131:111:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10214:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10214:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10225:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10225:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10210:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10210:3:46"
                                      },
                                      "nativeSrc": "10210:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10210:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10234:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10234:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                                    "nativeSrc": "10141:68:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10141:68:46"
                                  },
                                  "nativeSrc": "10141:101:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10141:101:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "10131:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10131:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr",
                      "nativeSrc": "9529:730:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "9622:9:46",
                          "nodeType": "YulTypedName",
                          "src": "9622:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "9633:7:46",
                          "nodeType": "YulTypedName",
                          "src": "9633:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "9645:6:46",
                          "nodeType": "YulTypedName",
                          "src": "9645:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "9653:6:46",
                          "nodeType": "YulTypedName",
                          "src": "9653:6:46",
                          "type": ""
                        }
                      ],
                      "src": "9529:730:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "10399:777:46",
                        "nodeType": "YulBlock",
                        "src": "10399:777:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "10446:83:46",
                              "nodeType": "YulBlock",
                              "src": "10446:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "10448:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10448:77:46"
                                    },
                                    "nativeSrc": "10448:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10448:79:46"
                                  },
                                  "nativeSrc": "10448:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10448:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10420:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10420:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "10429:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10429:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "10416:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10416:3:46"
                                  },
                                  "nativeSrc": "10416:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10416:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "10441:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10441:3:46",
                                  "type": "",
                                  "value": "160"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "10412:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "10412:3:46"
                              },
                              "nativeSrc": "10412:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "10412:33:46"
                            },
                            "nativeSrc": "10409:120:46",
                            "nodeType": "YulIf",
                            "src": "10409:120:46"
                          },
                          {
                            "nativeSrc": "10539:117:46",
                            "nodeType": "YulBlock",
                            "src": "10539:117:46",
                            "statements": [
                              {
                                "nativeSrc": "10554:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10554:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10568:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10568:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10558:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10558:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10583:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10583:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10618:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10618:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10629:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10629:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10614:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10614:3:46"
                                      },
                                      "nativeSrc": "10614:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10614:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10638:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10638:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "10593:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10593:20:46"
                                  },
                                  "nativeSrc": "10593:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10593:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "10583:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10583:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "10666:118:46",
                            "nodeType": "YulBlock",
                            "src": "10666:118:46",
                            "statements": [
                              {
                                "nativeSrc": "10681:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10681:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10695:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10695:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10685:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10685:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10711:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10711:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10746:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10746:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10757:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10757:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10742:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10742:3:46"
                                      },
                                      "nativeSrc": "10742:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10742:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10766:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10766:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "10721:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10721:20:46"
                                  },
                                  "nativeSrc": "10721:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10721:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "10711:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10711:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "10794:118:46",
                            "nodeType": "YulBlock",
                            "src": "10794:118:46",
                            "statements": [
                              {
                                "nativeSrc": "10809:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10809:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10823:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10823:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10813:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10813:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10839:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10839:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10874:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10874:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10885:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10885:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10870:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10870:3:46"
                                      },
                                      "nativeSrc": "10870:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10870:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10894:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10894:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "10849:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10849:20:46"
                                  },
                                  "nativeSrc": "10849:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10849:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "10839:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10839:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "10922:118:46",
                            "nodeType": "YulBlock",
                            "src": "10922:118:46",
                            "statements": [
                              {
                                "nativeSrc": "10937:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10937:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10951:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10951:2:46",
                                  "type": "",
                                  "value": "96"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10941:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10941:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10967:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10967:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "11002:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11002:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "11013:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11013:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10998:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10998:3:46"
                                      },
                                      "nativeSrc": "10998:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10998:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11022:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11022:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "10977:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10977:20:46"
                                  },
                                  "nativeSrc": "10977:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10977:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value3",
                                    "nativeSrc": "10967:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10967:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "11050:119:46",
                            "nodeType": "YulBlock",
                            "src": "11050:119:46",
                            "statements": [
                              {
                                "nativeSrc": "11065:17:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11065:17:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "11079:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11079:3:46",
                                  "type": "",
                                  "value": "128"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "11069:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "11069:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "11096:63:46",
                                "nodeType": "YulAssignment",
                                "src": "11096:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "11131:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11131:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "11142:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11142:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "11127:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "11127:3:46"
                                      },
                                      "nativeSrc": "11127:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11127:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11151:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11151:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "11106:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11106:20:46"
                                  },
                                  "nativeSrc": "11106:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11106:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value4",
                                    "nativeSrc": "11096:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11096:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256",
                      "nativeSrc": "10265:911:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "10337:9:46",
                          "nodeType": "YulTypedName",
                          "src": "10337:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "10348:7:46",
                          "nodeType": "YulTypedName",
                          "src": "10348:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "10360:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10360:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "10368:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10368:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "10376:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10376:6:46",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nativeSrc": "10384:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10384:6:46",
                          "type": ""
                        },
                        {
                          "name": "value4",
                          "nativeSrc": "10392:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10392:6:46",
                          "type": ""
                        }
                      ],
                      "src": "10265:911:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11247:53:46",
                        "nodeType": "YulBlock",
                        "src": "11247:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "11264:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11264:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "11287:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11287:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nativeSrc": "11269:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11269:17:46"
                                  },
                                  "nativeSrc": "11269:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11269:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "11257:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "11257:6:46"
                              },
                              "nativeSrc": "11257:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11257:37:46"
                            },
                            "nativeSrc": "11257:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11257:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nativeSrc": "11182:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "11235:5:46",
                          "nodeType": "YulTypedName",
                          "src": "11235:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "11242:3:46",
                          "nodeType": "YulTypedName",
                          "src": "11242:3:46",
                          "type": ""
                        }
                      ],
                      "src": "11182:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11404:124:46",
                        "nodeType": "YulBlock",
                        "src": "11404:124:46",
                        "statements": [
                          {
                            "nativeSrc": "11414:26:46",
                            "nodeType": "YulAssignment",
                            "src": "11414:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "11426:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11426:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11437:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11437:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "11422:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "11422:3:46"
                              },
                              "nativeSrc": "11422:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11422:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "11414:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "11414:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "11494:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11494:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "11507:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11507:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "11518:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "11518:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "11503:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11503:3:46"
                                  },
                                  "nativeSrc": "11503:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11503:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "11450:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "11450:43:46"
                              },
                              "nativeSrc": "11450:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11450:71:46"
                            },
                            "nativeSrc": "11450:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11450:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                      "nativeSrc": "11306:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "11376:9:46",
                          "nodeType": "YulTypedName",
                          "src": "11376:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "11388:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11388:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "11399:4:46",
                          "nodeType": "YulTypedName",
                          "src": "11399:4:46",
                          "type": ""
                        }
                      ],
                      "src": "11306:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11617:391:46",
                        "nodeType": "YulBlock",
                        "src": "11617:391:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "11663:83:46",
                              "nodeType": "YulBlock",
                              "src": "11663:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "11665:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11665:77:46"
                                    },
                                    "nativeSrc": "11665:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11665:79:46"
                                  },
                                  "nativeSrc": "11665:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11665:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11638:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11638:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "11647:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11647:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "11634:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11634:3:46"
                                  },
                                  "nativeSrc": "11634:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11634:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11659:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11659:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "11630:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "11630:3:46"
                              },
                              "nativeSrc": "11630:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11630:32:46"
                            },
                            "nativeSrc": "11627:119:46",
                            "nodeType": "YulIf",
                            "src": "11627:119:46"
                          },
                          {
                            "nativeSrc": "11756:117:46",
                            "nodeType": "YulBlock",
                            "src": "11756:117:46",
                            "statements": [
                              {
                                "nativeSrc": "11771:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11771:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "11785:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11785:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "11775:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "11775:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "11800:63:46",
                                "nodeType": "YulAssignment",
                                "src": "11800:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "11835:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11835:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "11846:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11846:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "11831:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "11831:3:46"
                                      },
                                      "nativeSrc": "11831:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11831:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11855:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11855:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "11810:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11810:20:46"
                                  },
                                  "nativeSrc": "11810:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11810:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "11800:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11800:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "11883:118:46",
                            "nodeType": "YulBlock",
                            "src": "11883:118:46",
                            "statements": [
                              {
                                "nativeSrc": "11898:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11898:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "11912:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11912:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "11902:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "11902:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "11928:63:46",
                                "nodeType": "YulAssignment",
                                "src": "11928:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "11963:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11963:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "11974:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11974:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "11959:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "11959:3:46"
                                      },
                                      "nativeSrc": "11959:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11959:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11983:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11983:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "11938:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11938:20:46"
                                  },
                                  "nativeSrc": "11938:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11938:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "11928:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11928:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint256",
                      "nativeSrc": "11534:474:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "11579:9:46",
                          "nodeType": "YulTypedName",
                          "src": "11579:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "11590:7:46",
                          "nodeType": "YulTypedName",
                          "src": "11590:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "11602:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11602:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "11610:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11610:6:46",
                          "type": ""
                        }
                      ],
                      "src": "11534:474:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12079:53:46",
                        "nodeType": "YulBlock",
                        "src": "12079:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "12096:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12096:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "12119:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12119:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nativeSrc": "12101:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12101:17:46"
                                  },
                                  "nativeSrc": "12101:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12101:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "12089:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "12089:6:46"
                              },
                              "nativeSrc": "12089:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12089:37:46"
                            },
                            "nativeSrc": "12089:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12089:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nativeSrc": "12014:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "12067:5:46",
                          "nodeType": "YulTypedName",
                          "src": "12067:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "12074:3:46",
                          "nodeType": "YulTypedName",
                          "src": "12074:3:46",
                          "type": ""
                        }
                      ],
                      "src": "12014:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12348:454:46",
                        "nodeType": "YulBlock",
                        "src": "12348:454:46",
                        "statements": [
                          {
                            "nativeSrc": "12358:27:46",
                            "nodeType": "YulAssignment",
                            "src": "12358:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "12370:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12370:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "12381:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12381:3:46",
                                  "type": "",
                                  "value": "160"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "12366:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "12366:3:46"
                              },
                              "nativeSrc": "12366:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12366:19:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "12358:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "12358:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "12439:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12439:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12452:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12452:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "12463:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "12463:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "12448:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12448:3:46"
                                  },
                                  "nativeSrc": "12448:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12448:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "12395:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "12395:43:46"
                              },
                              "nativeSrc": "12395:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12395:71:46"
                            },
                            "nativeSrc": "12395:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12395:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "12520:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12520:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12533:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12533:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "12544:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "12544:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "12529:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12529:3:46"
                                  },
                                  "nativeSrc": "12529:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12529:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "12476:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "12476:43:46"
                              },
                              "nativeSrc": "12476:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12476:72:46"
                            },
                            "nativeSrc": "12476:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12476:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "12602:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12602:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12615:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12615:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "12626:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "12626:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "12611:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12611:3:46"
                                  },
                                  "nativeSrc": "12611:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12611:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "12558:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "12558:43:46"
                              },
                              "nativeSrc": "12558:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12558:72:46"
                            },
                            "nativeSrc": "12558:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12558:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "12684:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12684:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12697:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12697:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "12708:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "12708:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "12693:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12693:3:46"
                                  },
                                  "nativeSrc": "12693:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12693:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "12640:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "12640:43:46"
                              },
                              "nativeSrc": "12640:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12640:72:46"
                            },
                            "nativeSrc": "12640:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12640:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value4",
                                  "nativeSrc": "12766:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12766:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12779:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12779:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "12790:3:46",
                                      "nodeType": "YulLiteral",
                                      "src": "12790:3:46",
                                      "type": "",
                                      "value": "128"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "12775:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12775:3:46"
                                  },
                                  "nativeSrc": "12775:19:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12775:19:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "12722:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "12722:43:46"
                              },
                              "nativeSrc": "12722:73:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12722:73:46"
                            },
                            "nativeSrc": "12722:73:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12722:73:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
                      "nativeSrc": "12138:664:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "12288:9:46",
                          "nodeType": "YulTypedName",
                          "src": "12288:9:46",
                          "type": ""
                        },
                        {
                          "name": "value4",
                          "nativeSrc": "12300:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12300:6:46",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nativeSrc": "12308:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12308:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "12316:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12316:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "12324:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12324:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "12332:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12332:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "12343:4:46",
                          "nodeType": "YulTypedName",
                          "src": "12343:4:46",
                          "type": ""
                        }
                      ],
                      "src": "12138:664:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12853:73:46",
                        "nodeType": "YulBlock",
                        "src": "12853:73:46",
                        "statements": [
                          {
                            "nativeSrc": "12863:57:46",
                            "nodeType": "YulAssignment",
                            "src": "12863:57:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "12878:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12878:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "12885:34:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12885:34:46",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "12874:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "12874:3:46"
                              },
                              "nativeSrc": "12874:46:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12874:46:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "12863:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "12863:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint128",
                      "nativeSrc": "12808:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "12835:5:46",
                          "nodeType": "YulTypedName",
                          "src": "12835:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "12845:7:46",
                          "nodeType": "YulTypedName",
                          "src": "12845:7:46",
                          "type": ""
                        }
                      ],
                      "src": "12808:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12975:79:46",
                        "nodeType": "YulBlock",
                        "src": "12975:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "13032:16:46",
                              "nodeType": "YulBlock",
                              "src": "13032:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13041:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "13041:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "13044:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "13044:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "13034:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13034:6:46"
                                    },
                                    "nativeSrc": "13034:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13034:12:46"
                                  },
                                  "nativeSrc": "13034:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13034:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "12998:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12998:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "13023:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13023:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint128",
                                        "nativeSrc": "13005:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13005:17:46"
                                      },
                                      "nativeSrc": "13005:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13005:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "12995:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12995:2:46"
                                  },
                                  "nativeSrc": "12995:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12995:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "12988:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "12988:6:46"
                              },
                              "nativeSrc": "12988:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12988:43:46"
                            },
                            "nativeSrc": "12985:63:46",
                            "nodeType": "YulIf",
                            "src": "12985:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_uint128",
                      "nativeSrc": "12932:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "12968:5:46",
                          "nodeType": "YulTypedName",
                          "src": "12968:5:46",
                          "type": ""
                        }
                      ],
                      "src": "12932:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "13112:87:46",
                        "nodeType": "YulBlock",
                        "src": "13112:87:46",
                        "statements": [
                          {
                            "nativeSrc": "13122:29:46",
                            "nodeType": "YulAssignment",
                            "src": "13122:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "13144:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "13144:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "13131:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "13131:12:46"
                              },
                              "nativeSrc": "13131:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13131:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "13122:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "13122:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "13187:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "13187:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_uint128",
                                "nativeSrc": "13160:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "13160:26:46"
                              },
                              "nativeSrc": "13160:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13160:33:46"
                            },
                            "nativeSrc": "13160:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "13160:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_uint128",
                      "nativeSrc": "13060:139:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "13090:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13090:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "13098:3:46",
                          "nodeType": "YulTypedName",
                          "src": "13098:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "13106:5:46",
                          "nodeType": "YulTypedName",
                          "src": "13106:5:46",
                          "type": ""
                        }
                      ],
                      "src": "13060:139:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "13288:391:46",
                        "nodeType": "YulBlock",
                        "src": "13288:391:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "13334:83:46",
                              "nodeType": "YulBlock",
                              "src": "13334:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "13336:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13336:77:46"
                                    },
                                    "nativeSrc": "13336:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13336:79:46"
                                  },
                                  "nativeSrc": "13336:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13336:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13309:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13309:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "13318:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13318:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "13305:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13305:3:46"
                                  },
                                  "nativeSrc": "13305:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13305:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "13330:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13330:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "13301:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "13301:3:46"
                              },
                              "nativeSrc": "13301:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13301:32:46"
                            },
                            "nativeSrc": "13298:119:46",
                            "nodeType": "YulIf",
                            "src": "13298:119:46"
                          },
                          {
                            "nativeSrc": "13427:117:46",
                            "nodeType": "YulBlock",
                            "src": "13427:117:46",
                            "statements": [
                              {
                                "nativeSrc": "13442:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13442:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "13456:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13456:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13446:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13446:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "13471:63:46",
                                "nodeType": "YulAssignment",
                                "src": "13471:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13506:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13506:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13517:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13517:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13502:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13502:3:46"
                                      },
                                      "nativeSrc": "13502:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13502:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13526:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13526:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "13481:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13481:20:46"
                                  },
                                  "nativeSrc": "13481:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13481:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "13471:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13471:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "13554:118:46",
                            "nodeType": "YulBlock",
                            "src": "13554:118:46",
                            "statements": [
                              {
                                "nativeSrc": "13569:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13569:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "13583:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13583:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13573:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13573:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "13599:63:46",
                                "nodeType": "YulAssignment",
                                "src": "13599:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13634:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13634:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13645:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13645:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13630:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13630:3:46"
                                      },
                                      "nativeSrc": "13630:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13630:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13654:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13654:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint128",
                                    "nativeSrc": "13609:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13609:20:46"
                                  },
                                  "nativeSrc": "13609:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13609:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "13599:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13599:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint128",
                      "nativeSrc": "13205:474:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "13250:9:46",
                          "nodeType": "YulTypedName",
                          "src": "13250:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "13261:7:46",
                          "nodeType": "YulTypedName",
                          "src": "13261:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "13273:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13273:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "13281:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13281:6:46",
                          "type": ""
                        }
                      ],
                      "src": "13205:474:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "13783:124:46",
                        "nodeType": "YulBlock",
                        "src": "13783:124:46",
                        "statements": [
                          {
                            "nativeSrc": "13793:26:46",
                            "nodeType": "YulAssignment",
                            "src": "13793:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "13805:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "13805:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "13816:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13816:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "13801:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "13801:3:46"
                              },
                              "nativeSrc": "13801:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13801:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "13793:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "13793:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "13873:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "13873:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "13886:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13886:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "13897:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "13897:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "13882:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13882:3:46"
                                  },
                                  "nativeSrc": "13882:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13882:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "13829:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "13829:43:46"
                              },
                              "nativeSrc": "13829:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13829:71:46"
                            },
                            "nativeSrc": "13829:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "13829:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                      "nativeSrc": "13685:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "13755:9:46",
                          "nodeType": "YulTypedName",
                          "src": "13755:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "13767:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13767:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "13778:4:46",
                          "nodeType": "YulTypedName",
                          "src": "13778:4:46",
                          "type": ""
                        }
                      ],
                      "src": "13685:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14002:28:46",
                        "nodeType": "YulBlock",
                        "src": "14002:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "14019:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14019:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14022:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14022:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "14012:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14012:6:46"
                              },
                              "nativeSrc": "14012:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14012:12:46"
                            },
                            "nativeSrc": "14012:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14012:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                      "nativeSrc": "13913:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "13913:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14102:241:46",
                        "nodeType": "YulBlock",
                        "src": "14102:241:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "14207:22:46",
                              "nodeType": "YulBlock",
                              "src": "14207:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "14209:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14209:16:46"
                                    },
                                    "nativeSrc": "14209:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14209:18:46"
                                  },
                                  "nativeSrc": "14209:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14209:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "14179:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14179:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14187:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14187:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "14176:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "14176:2:46"
                              },
                              "nativeSrc": "14176:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14176:30:46"
                            },
                            "nativeSrc": "14173:56:46",
                            "nodeType": "YulIf",
                            "src": "14173:56:46"
                          },
                          {
                            "nativeSrc": "14239:37:46",
                            "nodeType": "YulAssignment",
                            "src": "14239:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "14269:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14269:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nativeSrc": "14247:21:46",
                                "nodeType": "YulIdentifier",
                                "src": "14247:21:46"
                              },
                              "nativeSrc": "14247:29:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14247:29:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "14239:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "14239:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "14313:23:46",
                            "nodeType": "YulAssignment",
                            "src": "14313:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "size",
                                  "nativeSrc": "14325:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14325:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14331:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14331:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "14321:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "14321:3:46"
                              },
                              "nativeSrc": "14321:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14321:15:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "14313:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "14313:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_allocation_size_t_bytes_memory_ptr",
                      "nativeSrc": "14036:307:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "length",
                          "nativeSrc": "14086:6:46",
                          "nodeType": "YulTypedName",
                          "src": "14086:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "size",
                          "nativeSrc": "14097:4:46",
                          "nodeType": "YulTypedName",
                          "src": "14097:4:46",
                          "type": ""
                        }
                      ],
                      "src": "14036:307:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14413:82:46",
                        "nodeType": "YulBlock",
                        "src": "14413:82:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "14436:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14436:3:46"
                                },
                                {
                                  "name": "src",
                                  "nativeSrc": "14441:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14441:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "14446:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14446:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldatacopy",
                                "nativeSrc": "14423:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "14423:12:46"
                              },
                              "nativeSrc": "14423:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14423:30:46"
                            },
                            "nativeSrc": "14423:30:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14423:30:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nativeSrc": "14473:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14473:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "14478:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14478:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "14469:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14469:3:46"
                                  },
                                  "nativeSrc": "14469:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14469:16:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14487:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14487:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "14462:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14462:6:46"
                              },
                              "nativeSrc": "14462:27:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14462:27:46"
                            },
                            "nativeSrc": "14462:27:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14462:27:46"
                          }
                        ]
                      },
                      "name": "copy_calldata_to_memory_with_cleanup",
                      "nativeSrc": "14349:146:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "14395:3:46",
                          "nodeType": "YulTypedName",
                          "src": "14395:3:46",
                          "type": ""
                        },
                        {
                          "name": "dst",
                          "nativeSrc": "14400:3:46",
                          "nodeType": "YulTypedName",
                          "src": "14400:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "14405:6:46",
                          "nodeType": "YulTypedName",
                          "src": "14405:6:46",
                          "type": ""
                        }
                      ],
                      "src": "14349:146:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14584:340:46",
                        "nodeType": "YulBlock",
                        "src": "14584:340:46",
                        "statements": [
                          {
                            "nativeSrc": "14594:74:46",
                            "nodeType": "YulAssignment",
                            "src": "14594:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "14660:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14660:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_allocation_size_t_bytes_memory_ptr",
                                    "nativeSrc": "14619:40:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14619:40:46"
                                  },
                                  "nativeSrc": "14619:48:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14619:48:46"
                                }
                              ],
                              "functionName": {
                                "name": "allocate_memory",
                                "nativeSrc": "14603:15:46",
                                "nodeType": "YulIdentifier",
                                "src": "14603:15:46"
                              },
                              "nativeSrc": "14603:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14603:65:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "14594:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "14594:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "14684:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14684:5:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "14691:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14691:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "14677:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14677:6:46"
                              },
                              "nativeSrc": "14677:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14677:21:46"
                            },
                            "nativeSrc": "14677:21:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14677:21:46"
                          },
                          {
                            "nativeSrc": "14707:27:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "14707:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "14722:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14722:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14729:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14729:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "14718:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "14718:3:46"
                              },
                              "nativeSrc": "14718:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14718:16:46"
                            },
                            "variables": [
                              {
                                "name": "dst",
                                "nativeSrc": "14711:3:46",
                                "nodeType": "YulTypedName",
                                "src": "14711:3:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "14772:83:46",
                              "nodeType": "YulBlock",
                              "src": "14772:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                      "nativeSrc": "14774:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14774:77:46"
                                    },
                                    "nativeSrc": "14774:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14774:79:46"
                                  },
                                  "nativeSrc": "14774:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14774:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nativeSrc": "14753:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14753:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "14758:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14758:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "14749:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14749:3:46"
                                  },
                                  "nativeSrc": "14749:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14749:16:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "14767:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14767:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "14746:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "14746:2:46"
                              },
                              "nativeSrc": "14746:25:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14746:25:46"
                            },
                            "nativeSrc": "14743:112:46",
                            "nodeType": "YulIf",
                            "src": "14743:112:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nativeSrc": "14901:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14901:3:46"
                                },
                                {
                                  "name": "dst",
                                  "nativeSrc": "14906:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14906:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "14911:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14911:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_calldata_to_memory_with_cleanup",
                                "nativeSrc": "14864:36:46",
                                "nodeType": "YulIdentifier",
                                "src": "14864:36:46"
                              },
                              "nativeSrc": "14864:54:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14864:54:46"
                            },
                            "nativeSrc": "14864:54:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14864:54:46"
                          }
                        ]
                      },
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nativeSrc": "14501:423:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "14557:3:46",
                          "nodeType": "YulTypedName",
                          "src": "14557:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "14562:6:46",
                          "nodeType": "YulTypedName",
                          "src": "14562:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "14570:3:46",
                          "nodeType": "YulTypedName",
                          "src": "14570:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "14578:5:46",
                          "nodeType": "YulTypedName",
                          "src": "14578:5:46",
                          "type": ""
                        }
                      ],
                      "src": "14501:423:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15004:277:46",
                        "nodeType": "YulBlock",
                        "src": "15004:277:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "15053:83:46",
                              "nodeType": "YulBlock",
                              "src": "15053:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                      "nativeSrc": "15055:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15055:77:46"
                                    },
                                    "nativeSrc": "15055:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15055:79:46"
                                  },
                                  "nativeSrc": "15055:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15055:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nativeSrc": "15032:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15032:6:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "15040:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "15040:4:46",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "15028:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "15028:3:46"
                                      },
                                      "nativeSrc": "15028:17:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15028:17:46"
                                    },
                                    {
                                      "name": "end",
                                      "nativeSrc": "15047:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15047:3:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nativeSrc": "15024:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15024:3:46"
                                  },
                                  "nativeSrc": "15024:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15024:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "15017:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "15017:6:46"
                              },
                              "nativeSrc": "15017:35:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15017:35:46"
                            },
                            "nativeSrc": "15014:122:46",
                            "nodeType": "YulIf",
                            "src": "15014:122:46"
                          },
                          {
                            "nativeSrc": "15145:34:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "15145:34:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "15172:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15172:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "15159:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "15159:12:46"
                              },
                              "nativeSrc": "15159:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15159:20:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "15149:6:46",
                                "nodeType": "YulTypedName",
                                "src": "15149:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "15188:87:46",
                            "nodeType": "YulAssignment",
                            "src": "15188:87:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "15248:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15248:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "15256:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "15256:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "15244:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15244:3:46"
                                  },
                                  "nativeSrc": "15244:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15244:17:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "15263:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15263:6:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "15271:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15271:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                "nativeSrc": "15197:46:46",
                                "nodeType": "YulIdentifier",
                                "src": "15197:46:46"
                              },
                              "nativeSrc": "15197:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15197:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "15188:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "15188:5:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes_memory_ptr",
                      "nativeSrc": "14943:338:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "14982:6:46",
                          "nodeType": "YulTypedName",
                          "src": "14982:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "14990:3:46",
                          "nodeType": "YulTypedName",
                          "src": "14990:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "14998:5:46",
                          "nodeType": "YulTypedName",
                          "src": "14998:5:46",
                          "type": ""
                        }
                      ],
                      "src": "14943:338:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15379:560:46",
                        "nodeType": "YulBlock",
                        "src": "15379:560:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "15425:83:46",
                              "nodeType": "YulBlock",
                              "src": "15425:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "15427:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15427:77:46"
                                    },
                                    "nativeSrc": "15427:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15427:79:46"
                                  },
                                  "nativeSrc": "15427:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "15427:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "15400:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15400:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "15409:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15409:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "15396:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15396:3:46"
                                  },
                                  "nativeSrc": "15396:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15396:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "15421:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "15421:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "15392:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "15392:3:46"
                              },
                              "nativeSrc": "15392:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15392:32:46"
                            },
                            "nativeSrc": "15389:119:46",
                            "nodeType": "YulIf",
                            "src": "15389:119:46"
                          },
                          {
                            "nativeSrc": "15518:117:46",
                            "nodeType": "YulBlock",
                            "src": "15518:117:46",
                            "statements": [
                              {
                                "nativeSrc": "15533:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "15533:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "15547:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "15547:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "15537:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "15537:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "15562:63:46",
                                "nodeType": "YulAssignment",
                                "src": "15562:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "15597:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15597:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "15608:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15608:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "15593:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "15593:3:46"
                                      },
                                      "nativeSrc": "15593:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15593:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "15617:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15617:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "15572:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15572:20:46"
                                  },
                                  "nativeSrc": "15572:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15572:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "15562:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15562:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "15645:287:46",
                            "nodeType": "YulBlock",
                            "src": "15645:287:46",
                            "statements": [
                              {
                                "nativeSrc": "15660:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "15660:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "15691:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15691:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "15702:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "15702:2:46",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "15687:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "15687:3:46"
                                      },
                                      "nativeSrc": "15687:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15687:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "15674:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15674:12:46"
                                  },
                                  "nativeSrc": "15674:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15674:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "15664:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "15664:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "15753:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "15753:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "15755:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15755:77:46"
                                        },
                                        "nativeSrc": "15755:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "15755:79:46"
                                      },
                                      "nativeSrc": "15755:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "15755:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "15725:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15725:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "15733:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "15733:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "15722:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15722:2:46"
                                  },
                                  "nativeSrc": "15722:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15722:30:46"
                                },
                                "nativeSrc": "15719:117:46",
                                "nodeType": "YulIf",
                                "src": "15719:117:46"
                              },
                              {
                                "nativeSrc": "15850:72:46",
                                "nodeType": "YulAssignment",
                                "src": "15850:72:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "15894:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15894:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "15905:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15905:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "15890:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "15890:3:46"
                                      },
                                      "nativeSrc": "15890:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15890:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "15914:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15914:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes_memory_ptr",
                                    "nativeSrc": "15860:29:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15860:29:46"
                                  },
                                  "nativeSrc": "15860:62:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15860:62:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "15850:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15850:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                      "nativeSrc": "15287:652:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "15341:9:46",
                          "nodeType": "YulTypedName",
                          "src": "15341:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "15352:7:46",
                          "nodeType": "YulTypedName",
                          "src": "15352:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "15364:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15364:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "15372:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15372:6:46",
                          "type": ""
                        }
                      ],
                      "src": "15287:652:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15990:32:46",
                        "nodeType": "YulBlock",
                        "src": "15990:32:46",
                        "statements": [
                          {
                            "nativeSrc": "16000:16:46",
                            "nodeType": "YulAssignment",
                            "src": "16000:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "16011:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "16011:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "16000:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "16000:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_bytes32",
                      "nativeSrc": "15945:77:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "15972:5:46",
                          "nodeType": "YulTypedName",
                          "src": "15972:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "15982:7:46",
                          "nodeType": "YulTypedName",
                          "src": "15982:7:46",
                          "type": ""
                        }
                      ],
                      "src": "15945:77:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16093:53:46",
                        "nodeType": "YulBlock",
                        "src": "16093:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16110:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16110:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "16133:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16133:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bytes32",
                                    "nativeSrc": "16115:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "16115:17:46"
                                  },
                                  "nativeSrc": "16115:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "16115:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "16103:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "16103:6:46"
                              },
                              "nativeSrc": "16103:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16103:37:46"
                            },
                            "nativeSrc": "16103:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16103:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nativeSrc": "16028:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "16081:5:46",
                          "nodeType": "YulTypedName",
                          "src": "16081:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "16088:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16088:3:46",
                          "type": ""
                        }
                      ],
                      "src": "16028:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16250:124:46",
                        "nodeType": "YulBlock",
                        "src": "16250:124:46",
                        "statements": [
                          {
                            "nativeSrc": "16260:26:46",
                            "nodeType": "YulAssignment",
                            "src": "16260:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "16272:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16272:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "16283:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "16283:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "16268:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16268:3:46"
                              },
                              "nativeSrc": "16268:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16268:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "16260:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "16260:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "16340:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16340:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "16353:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16353:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "16364:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "16364:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "16349:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "16349:3:46"
                                  },
                                  "nativeSrc": "16349:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "16349:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                "nativeSrc": "16296:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "16296:43:46"
                              },
                              "nativeSrc": "16296:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16296:71:46"
                            },
                            "nativeSrc": "16296:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16296:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                      "nativeSrc": "16152:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "16222:9:46",
                          "nodeType": "YulTypedName",
                          "src": "16222:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "16234:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16234:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "16245:4:46",
                          "nodeType": "YulTypedName",
                          "src": "16245:4:46",
                          "type": ""
                        }
                      ],
                      "src": "16152:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16439:40:46",
                        "nodeType": "YulBlock",
                        "src": "16439:40:46",
                        "statements": [
                          {
                            "nativeSrc": "16450:22:46",
                            "nodeType": "YulAssignment",
                            "src": "16450:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "16466:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16466:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "16460:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "16460:5:46"
                              },
                              "nativeSrc": "16460:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16460:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "16450:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "16450:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_string_memory_ptr",
                      "nativeSrc": "16380:99:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "16422:5:46",
                          "nodeType": "YulTypedName",
                          "src": "16422:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "16432:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16432:6:46",
                          "type": ""
                        }
                      ],
                      "src": "16380:99:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16581:73:46",
                        "nodeType": "YulBlock",
                        "src": "16581:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16598:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16598:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "16603:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16603:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "16591:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "16591:6:46"
                              },
                              "nativeSrc": "16591:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16591:19:46"
                            },
                            "nativeSrc": "16591:19:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16591:19:46"
                          },
                          {
                            "nativeSrc": "16619:29:46",
                            "nodeType": "YulAssignment",
                            "src": "16619:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16638:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16638:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "16643:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "16643:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "16634:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16634:3:46"
                              },
                              "nativeSrc": "16634:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16634:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "16619:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "16619:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nativeSrc": "16485:169:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "16553:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16553:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "16558:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16558:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "16569:11:46",
                          "nodeType": "YulTypedName",
                          "src": "16569:11:46",
                          "type": ""
                        }
                      ],
                      "src": "16485:169:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16722:184:46",
                        "nodeType": "YulBlock",
                        "src": "16722:184:46",
                        "statements": [
                          {
                            "nativeSrc": "16732:10:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "16732:10:46",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "16741:1:46",
                              "nodeType": "YulLiteral",
                              "src": "16741:1:46",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nativeSrc": "16736:1:46",
                                "nodeType": "YulTypedName",
                                "src": "16736:1:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "16801:63:46",
                              "nodeType": "YulBlock",
                              "src": "16801:63:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dst",
                                            "nativeSrc": "16826:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "16826:3:46"
                                          },
                                          {
                                            "name": "i",
                                            "nativeSrc": "16831:1:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "16831:1:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "16822:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "16822:3:46"
                                        },
                                        "nativeSrc": "16822:11:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "16822:11:46"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nativeSrc": "16845:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "16845:3:46"
                                              },
                                              {
                                                "name": "i",
                                                "nativeSrc": "16850:1:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "16850:1:46"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "16841:3:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "16841:3:46"
                                            },
                                            "nativeSrc": "16841:11:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "16841:11:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nativeSrc": "16835:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "16835:5:46"
                                        },
                                        "nativeSrc": "16835:18:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "16835:18:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "16815:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16815:6:46"
                                    },
                                    "nativeSrc": "16815:39:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16815:39:46"
                                  },
                                  "nativeSrc": "16815:39:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16815:39:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nativeSrc": "16762:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16762:1:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "16765:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16765:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nativeSrc": "16759:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "16759:2:46"
                              },
                              "nativeSrc": "16759:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16759:13:46"
                            },
                            "nativeSrc": "16751:113:46",
                            "nodeType": "YulForLoop",
                            "post": {
                              "nativeSrc": "16773:19:46",
                              "nodeType": "YulBlock",
                              "src": "16773:19:46",
                              "statements": [
                                {
                                  "nativeSrc": "16775:15:46",
                                  "nodeType": "YulAssignment",
                                  "src": "16775:15:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "16784:1:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "16784:1:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16787:2:46",
                                        "nodeType": "YulLiteral",
                                        "src": "16787:2:46",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16780:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16780:3:46"
                                    },
                                    "nativeSrc": "16780:10:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16780:10:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "16775:1:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16775:1:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nativeSrc": "16755:3:46",
                              "nodeType": "YulBlock",
                              "src": "16755:3:46",
                              "statements": []
                            },
                            "src": "16751:113:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nativeSrc": "16884:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16884:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "16889:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16889:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "16880:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "16880:3:46"
                                  },
                                  "nativeSrc": "16880:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "16880:16:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "16898:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "16898:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "16873:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "16873:6:46"
                              },
                              "nativeSrc": "16873:27:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16873:27:46"
                            },
                            "nativeSrc": "16873:27:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16873:27:46"
                          }
                        ]
                      },
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nativeSrc": "16660:246:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "16704:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16704:3:46",
                          "type": ""
                        },
                        {
                          "name": "dst",
                          "nativeSrc": "16709:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16709:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "16714:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16714:6:46",
                          "type": ""
                        }
                      ],
                      "src": "16660:246:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17004:285:46",
                        "nodeType": "YulBlock",
                        "src": "17004:285:46",
                        "statements": [
                          {
                            "nativeSrc": "17014:53:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "17014:53:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "17061:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17061:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_string_memory_ptr",
                                "nativeSrc": "17028:32:46",
                                "nodeType": "YulIdentifier",
                                "src": "17028:32:46"
                              },
                              "nativeSrc": "17028:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17028:39:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "17018:6:46",
                                "nodeType": "YulTypedName",
                                "src": "17018:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "17076:78:46",
                            "nodeType": "YulAssignment",
                            "src": "17076:78:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "17142:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17142:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "17147:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17147:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "17083:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "17083:58:46"
                              },
                              "nativeSrc": "17083:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17083:71:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "17076:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17076:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "17202:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17202:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17209:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17209:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17198:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17198:3:46"
                                  },
                                  "nativeSrc": "17198:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17198:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "17216:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17216:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "17221:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17221:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "17163:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "17163:34:46"
                              },
                              "nativeSrc": "17163:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17163:65:46"
                            },
                            "nativeSrc": "17163:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17163:65:46"
                          },
                          {
                            "nativeSrc": "17237:46:46",
                            "nodeType": "YulAssignment",
                            "src": "17237:46:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "17248:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17248:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "17275:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17275:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "round_up_to_mul_of_32",
                                    "nativeSrc": "17253:21:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17253:21:46"
                                  },
                                  "nativeSrc": "17253:29:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17253:29:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "17244:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17244:3:46"
                              },
                              "nativeSrc": "17244:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17244:39:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "17237:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17237:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "16912:377:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "16985:5:46",
                          "nodeType": "YulTypedName",
                          "src": "16985:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "16992:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16992:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "17000:3:46",
                          "nodeType": "YulTypedName",
                          "src": "17000:3:46",
                          "type": ""
                        }
                      ],
                      "src": "16912:377:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17413:195:46",
                        "nodeType": "YulBlock",
                        "src": "17413:195:46",
                        "statements": [
                          {
                            "nativeSrc": "17423:26:46",
                            "nodeType": "YulAssignment",
                            "src": "17423:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "17435:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17435:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "17446:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "17446:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "17431:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17431:3:46"
                              },
                              "nativeSrc": "17431:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17431:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17423:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17423:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17470:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17470:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17481:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17481:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17466:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17466:3:46"
                                  },
                                  "nativeSrc": "17466:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17466:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "17489:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17489:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17495:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17495:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "17485:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17485:3:46"
                                  },
                                  "nativeSrc": "17485:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17485:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "17459:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "17459:6:46"
                              },
                              "nativeSrc": "17459:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17459:47:46"
                            },
                            "nativeSrc": "17459:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17459:47:46"
                          },
                          {
                            "nativeSrc": "17515:86:46",
                            "nodeType": "YulAssignment",
                            "src": "17515:86:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "17587:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17587:6:46"
                                },
                                {
                                  "name": "tail",
                                  "nativeSrc": "17596:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17596:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "17523:63:46",
                                "nodeType": "YulIdentifier",
                                "src": "17523:63:46"
                              },
                              "nativeSrc": "17523:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17523:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17515:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17515:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "17295:313:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "17385:9:46",
                          "nodeType": "YulTypedName",
                          "src": "17385:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "17397:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17397:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "17408:4:46",
                          "nodeType": "YulTypedName",
                          "src": "17408:4:46",
                          "type": ""
                        }
                      ],
                      "src": "17295:313:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17656:48:46",
                        "nodeType": "YulBlock",
                        "src": "17656:48:46",
                        "statements": [
                          {
                            "nativeSrc": "17666:32:46",
                            "nodeType": "YulAssignment",
                            "src": "17666:32:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "17691:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17691:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nativeSrc": "17684:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17684:6:46"
                                  },
                                  "nativeSrc": "17684:13:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17684:13:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "17677:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "17677:6:46"
                              },
                              "nativeSrc": "17677:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17677:21:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "17666:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "17666:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_bool",
                      "nativeSrc": "17614:90:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "17638:5:46",
                          "nodeType": "YulTypedName",
                          "src": "17638:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "17648:7:46",
                          "nodeType": "YulTypedName",
                          "src": "17648:7:46",
                          "type": ""
                        }
                      ],
                      "src": "17614:90:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17769:50:46",
                        "nodeType": "YulBlock",
                        "src": "17769:50:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "17786:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17786:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "17806:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17806:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bool",
                                    "nativeSrc": "17791:14:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17791:14:46"
                                  },
                                  "nativeSrc": "17791:21:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17791:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "17779:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "17779:6:46"
                              },
                              "nativeSrc": "17779:34:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17779:34:46"
                            },
                            "nativeSrc": "17779:34:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17779:34:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nativeSrc": "17710:109:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "17757:5:46",
                          "nodeType": "YulTypedName",
                          "src": "17757:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "17764:3:46",
                          "nodeType": "YulTypedName",
                          "src": "17764:3:46",
                          "type": ""
                        }
                      ],
                      "src": "17710:109:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17917:118:46",
                        "nodeType": "YulBlock",
                        "src": "17917:118:46",
                        "statements": [
                          {
                            "nativeSrc": "17927:26:46",
                            "nodeType": "YulAssignment",
                            "src": "17927:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "17939:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17939:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "17950:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "17950:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "17935:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17935:3:46"
                              },
                              "nativeSrc": "17935:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17935:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17927:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17927:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "18001:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18001:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "18014:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18014:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "18025:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "18025:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "18010:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18010:3:46"
                                  },
                                  "nativeSrc": "18010:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18010:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                "nativeSrc": "17963:37:46",
                                "nodeType": "YulIdentifier",
                                "src": "17963:37:46"
                              },
                              "nativeSrc": "17963:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17963:65:46"
                            },
                            "nativeSrc": "17963:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17963:65:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                      "nativeSrc": "17825:210:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "17889:9:46",
                          "nodeType": "YulTypedName",
                          "src": "17889:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "17901:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17901:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "17912:4:46",
                          "nodeType": "YulTypedName",
                          "src": "17912:4:46",
                          "type": ""
                        }
                      ],
                      "src": "17825:210:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18085:45:46",
                        "nodeType": "YulBlock",
                        "src": "18085:45:46",
                        "statements": [
                          {
                            "nativeSrc": "18095:29:46",
                            "nodeType": "YulAssignment",
                            "src": "18095:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "18110:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18110:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "18117:6:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18117:6:46",
                                  "type": "",
                                  "value": "0xffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "18106:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "18106:3:46"
                              },
                              "nativeSrc": "18106:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18106:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "18095:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "18095:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint16",
                      "nativeSrc": "18041:89:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "18067:5:46",
                          "nodeType": "YulTypedName",
                          "src": "18067:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "18077:7:46",
                          "nodeType": "YulTypedName",
                          "src": "18077:7:46",
                          "type": ""
                        }
                      ],
                      "src": "18041:89:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18199:52:46",
                        "nodeType": "YulBlock",
                        "src": "18199:52:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "18216:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18216:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "18238:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18238:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint16",
                                    "nativeSrc": "18221:16:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18221:16:46"
                                  },
                                  "nativeSrc": "18221:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18221:23:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "18209:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "18209:6:46"
                              },
                              "nativeSrc": "18209:36:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18209:36:46"
                            },
                            "nativeSrc": "18209:36:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18209:36:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nativeSrc": "18136:115:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "18187:5:46",
                          "nodeType": "YulTypedName",
                          "src": "18187:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "18194:3:46",
                          "nodeType": "YulTypedName",
                          "src": "18194:3:46",
                          "type": ""
                        }
                      ],
                      "src": "18136:115:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18353:122:46",
                        "nodeType": "YulBlock",
                        "src": "18353:122:46",
                        "statements": [
                          {
                            "nativeSrc": "18363:26:46",
                            "nodeType": "YulAssignment",
                            "src": "18363:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "18375:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18375:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "18386:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18386:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "18371:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "18371:3:46"
                              },
                              "nativeSrc": "18371:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18371:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "18363:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "18363:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "18441:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18441:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "18454:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18454:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "18465:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "18465:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "18450:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18450:3:46"
                                  },
                                  "nativeSrc": "18450:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18450:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                                "nativeSrc": "18399:41:46",
                                "nodeType": "YulIdentifier",
                                "src": "18399:41:46"
                              },
                              "nativeSrc": "18399:69:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18399:69:46"
                            },
                            "nativeSrc": "18399:69:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18399:69:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
                      "nativeSrc": "18257:218:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "18325:9:46",
                          "nodeType": "YulTypedName",
                          "src": "18325:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "18337:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18337:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "18348:4:46",
                          "nodeType": "YulTypedName",
                          "src": "18348:4:46",
                          "type": ""
                        }
                      ],
                      "src": "18257:218:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18581:519:46",
                        "nodeType": "YulBlock",
                        "src": "18581:519:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "18627:83:46",
                              "nodeType": "YulBlock",
                              "src": "18627:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "18629:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18629:77:46"
                                    },
                                    "nativeSrc": "18629:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "18629:79:46"
                                  },
                                  "nativeSrc": "18629:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "18629:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "18602:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18602:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "18611:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18611:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "18598:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18598:3:46"
                                  },
                                  "nativeSrc": "18598:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18598:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "18623:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18623:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "18594:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "18594:3:46"
                              },
                              "nativeSrc": "18594:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18594:32:46"
                            },
                            "nativeSrc": "18591:119:46",
                            "nodeType": "YulIf",
                            "src": "18591:119:46"
                          },
                          {
                            "nativeSrc": "18720:117:46",
                            "nodeType": "YulBlock",
                            "src": "18720:117:46",
                            "statements": [
                              {
                                "nativeSrc": "18735:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "18735:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "18749:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18749:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "18739:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "18739:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "18764:63:46",
                                "nodeType": "YulAssignment",
                                "src": "18764:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "18799:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "18799:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "18810:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "18810:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "18795:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "18795:3:46"
                                      },
                                      "nativeSrc": "18795:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "18795:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "18819:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18819:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "18774:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18774:20:46"
                                  },
                                  "nativeSrc": "18774:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18774:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "18764:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18764:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "18847:118:46",
                            "nodeType": "YulBlock",
                            "src": "18847:118:46",
                            "statements": [
                              {
                                "nativeSrc": "18862:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "18862:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "18876:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18876:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "18866:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "18866:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "18892:63:46",
                                "nodeType": "YulAssignment",
                                "src": "18892:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "18927:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "18927:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "18938:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "18938:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "18923:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "18923:3:46"
                                      },
                                      "nativeSrc": "18923:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "18923:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "18947:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18947:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "18902:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18902:20:46"
                                  },
                                  "nativeSrc": "18902:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18902:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "18892:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18892:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "18975:118:46",
                            "nodeType": "YulBlock",
                            "src": "18975:118:46",
                            "statements": [
                              {
                                "nativeSrc": "18990:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "18990:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "19004:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19004:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "18994:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "18994:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "19020:63:46",
                                "nodeType": "YulAssignment",
                                "src": "19020:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "19055:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "19055:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "19066:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "19066:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "19051:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "19051:3:46"
                                      },
                                      "nativeSrc": "19051:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "19051:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "19075:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19075:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "19030:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19030:20:46"
                                  },
                                  "nativeSrc": "19030:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19030:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "19020:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19020:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                      "nativeSrc": "18481:619:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "18535:9:46",
                          "nodeType": "YulTypedName",
                          "src": "18535:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "18546:7:46",
                          "nodeType": "YulTypedName",
                          "src": "18546:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "18558:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18558:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "18566:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18566:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "18574:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18574:6:46",
                          "type": ""
                        }
                      ],
                      "src": "18481:619:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19134:152:46",
                        "nodeType": "YulBlock",
                        "src": "19134:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "19151:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19151:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19154:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19154:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "19144:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19144:6:46"
                              },
                              "nativeSrc": "19144:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19144:88:46"
                            },
                            "nativeSrc": "19144:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19144:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "19248:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19248:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19251:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19251:4:46",
                                  "type": "",
                                  "value": "0x32"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "19241:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19241:6:46"
                              },
                              "nativeSrc": "19241:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19241:15:46"
                            },
                            "nativeSrc": "19241:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19241:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "19272:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19272:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19275:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19275:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "19265:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19265:6:46"
                              },
                              "nativeSrc": "19265:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19265:15:46"
                            },
                            "nativeSrc": "19265:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19265:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x32",
                      "nativeSrc": "19106:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "19106:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19446:288:46",
                        "nodeType": "YulBlock",
                        "src": "19446:288:46",
                        "statements": [
                          {
                            "nativeSrc": "19456:26:46",
                            "nodeType": "YulAssignment",
                            "src": "19456:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "19468:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19468:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19479:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19479:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "19464:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "19464:3:46"
                              },
                              "nativeSrc": "19464:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19464:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "19456:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "19456:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "19536:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19536:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "19549:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19549:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "19560:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "19560:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "19545:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19545:3:46"
                                  },
                                  "nativeSrc": "19545:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19545:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "19492:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "19492:43:46"
                              },
                              "nativeSrc": "19492:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19492:71:46"
                            },
                            "nativeSrc": "19492:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19492:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "19617:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19617:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "19630:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19630:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "19641:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "19641:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "19626:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19626:3:46"
                                  },
                                  "nativeSrc": "19626:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19626:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "19573:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "19573:43:46"
                              },
                              "nativeSrc": "19573:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19573:72:46"
                            },
                            "nativeSrc": "19573:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19573:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "19699:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19699:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "19712:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19712:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "19723:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "19723:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "19708:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19708:3:46"
                                  },
                                  "nativeSrc": "19708:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19708:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "19655:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "19655:43:46"
                              },
                              "nativeSrc": "19655:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19655:72:46"
                            },
                            "nativeSrc": "19655:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19655:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                      "nativeSrc": "19292:442:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "19402:9:46",
                          "nodeType": "YulTypedName",
                          "src": "19402:9:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "19414:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19414:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "19422:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19422:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "19430:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19430:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "19441:4:46",
                          "nodeType": "YulTypedName",
                          "src": "19441:4:46",
                          "type": ""
                        }
                      ],
                      "src": "19292:442:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19846:64:46",
                        "nodeType": "YulBlock",
                        "src": "19846:64:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "19868:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19868:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "19876:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "19876:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "19864:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19864:3:46"
                                  },
                                  "nativeSrc": "19864:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19864:14:46"
                                },
                                {
                                  "hexValue": "4e6f74205665726966696572204163636f756e74",
                                  "kind": "string",
                                  "nativeSrc": "19880:22:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19880:22:46",
                                  "type": "",
                                  "value": "Not Verifier Account"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "19857:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19857:6:46"
                              },
                              "nativeSrc": "19857:46:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19857:46:46"
                            },
                            "nativeSrc": "19857:46:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19857:46:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7",
                      "nativeSrc": "19740:170:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "19838:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19838:6:46",
                          "type": ""
                        }
                      ],
                      "src": "19740:170:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20062:220:46",
                        "nodeType": "YulBlock",
                        "src": "20062:220:46",
                        "statements": [
                          {
                            "nativeSrc": "20072:74:46",
                            "nodeType": "YulAssignment",
                            "src": "20072:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20138:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20138:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20143:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20143:2:46",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "20079:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "20079:58:46"
                              },
                              "nativeSrc": "20079:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20079:67:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "20072:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20072:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20244:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20244:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7",
                                "nativeSrc": "20155:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "20155:88:46"
                              },
                              "nativeSrc": "20155:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20155:93:46"
                            },
                            "nativeSrc": "20155:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20155:93:46"
                          },
                          {
                            "nativeSrc": "20257:19:46",
                            "nodeType": "YulAssignment",
                            "src": "20257:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20268:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20268:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20273:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20273:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20264:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20264:3:46"
                              },
                              "nativeSrc": "20264:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20264:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "20257:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20257:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "19916:366:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "20050:3:46",
                          "nodeType": "YulTypedName",
                          "src": "20050:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "20058:3:46",
                          "nodeType": "YulTypedName",
                          "src": "20058:3:46",
                          "type": ""
                        }
                      ],
                      "src": "19916:366:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20459:248:46",
                        "nodeType": "YulBlock",
                        "src": "20459:248:46",
                        "statements": [
                          {
                            "nativeSrc": "20469:26:46",
                            "nodeType": "YulAssignment",
                            "src": "20469:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "20481:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20481:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20492:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20492:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20477:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20477:3:46"
                              },
                              "nativeSrc": "20477:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20477:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "20469:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "20469:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "20516:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20516:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "20527:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "20527:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "20512:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "20512:3:46"
                                  },
                                  "nativeSrc": "20512:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "20512:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "20535:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20535:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "20541:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20541:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "20531:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "20531:3:46"
                                  },
                                  "nativeSrc": "20531:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "20531:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "20505:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20505:6:46"
                              },
                              "nativeSrc": "20505:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20505:47:46"
                            },
                            "nativeSrc": "20505:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20505:47:46"
                          },
                          {
                            "nativeSrc": "20561:139:46",
                            "nodeType": "YulAssignment",
                            "src": "20561:139:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "20695:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20695:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "20569:124:46",
                                "nodeType": "YulIdentifier",
                                "src": "20569:124:46"
                              },
                              "nativeSrc": "20569:131:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20569:131:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "20561:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "20561:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "20288:419:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "20439:9:46",
                          "nodeType": "YulTypedName",
                          "src": "20439:9:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "20454:4:46",
                          "nodeType": "YulTypedName",
                          "src": "20454:4:46",
                          "type": ""
                        }
                      ],
                      "src": "20288:419:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20741:152:46",
                        "nodeType": "YulBlock",
                        "src": "20741:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "20758:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20758:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20761:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20761:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "20751:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20751:6:46"
                              },
                              "nativeSrc": "20751:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20751:88:46"
                            },
                            "nativeSrc": "20751:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20751:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "20855:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20855:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20858:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20858:4:46",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "20848:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20848:6:46"
                              },
                              "nativeSrc": "20848:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20848:15:46"
                            },
                            "nativeSrc": "20848:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20848:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "20879:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20879:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20882:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20882:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "20872:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20872:6:46"
                              },
                              "nativeSrc": "20872:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20872:15:46"
                            },
                            "nativeSrc": "20872:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20872:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x11",
                      "nativeSrc": "20713:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "20713:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20943:147:46",
                        "nodeType": "YulBlock",
                        "src": "20943:147:46",
                        "statements": [
                          {
                            "nativeSrc": "20953:25:46",
                            "nodeType": "YulAssignment",
                            "src": "20953:25:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nativeSrc": "20976:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20976:1:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nativeSrc": "20958:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "20958:17:46"
                              },
                              "nativeSrc": "20958:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20958:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "x",
                                "nativeSrc": "20953:1:46",
                                "nodeType": "YulIdentifier",
                                "src": "20953:1:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "20987:25:46",
                            "nodeType": "YulAssignment",
                            "src": "20987:25:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "y",
                                  "nativeSrc": "21010:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21010:1:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nativeSrc": "20992:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "20992:17:46"
                              },
                              "nativeSrc": "20992:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20992:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "y",
                                "nativeSrc": "20987:1:46",
                                "nodeType": "YulIdentifier",
                                "src": "20987:1:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "21021:16:46",
                            "nodeType": "YulAssignment",
                            "src": "21021:16:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nativeSrc": "21032:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21032:1:46"
                                },
                                {
                                  "name": "y",
                                  "nativeSrc": "21035:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21035:1:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "21028:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21028:3:46"
                              },
                              "nativeSrc": "21028:9:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21028:9:46"
                            },
                            "variableNames": [
                              {
                                "name": "sum",
                                "nativeSrc": "21021:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21021:3:46"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "21061:22:46",
                              "nodeType": "YulBlock",
                              "src": "21061:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nativeSrc": "21063:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21063:16:46"
                                    },
                                    "nativeSrc": "21063:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "21063:18:46"
                                  },
                                  "nativeSrc": "21063:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "21063:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "x",
                                  "nativeSrc": "21053:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21053:1:46"
                                },
                                {
                                  "name": "sum",
                                  "nativeSrc": "21056:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21056:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "21050:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "21050:2:46"
                              },
                              "nativeSrc": "21050:10:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21050:10:46"
                            },
                            "nativeSrc": "21047:36:46",
                            "nodeType": "YulIf",
                            "src": "21047:36:46"
                          }
                        ]
                      },
                      "name": "checked_add_t_uint256",
                      "nativeSrc": "20899:191:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "x",
                          "nativeSrc": "20930:1:46",
                          "nodeType": "YulTypedName",
                          "src": "20930:1:46",
                          "type": ""
                        },
                        {
                          "name": "y",
                          "nativeSrc": "20933:1:46",
                          "nodeType": "YulTypedName",
                          "src": "20933:1:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "sum",
                          "nativeSrc": "20939:3:46",
                          "nodeType": "YulTypedName",
                          "src": "20939:3:46",
                          "type": ""
                        }
                      ],
                      "src": "20899:191:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21202:61:46",
                        "nodeType": "YulBlock",
                        "src": "21202:61:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "21224:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21224:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "21232:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "21232:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "21220:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "21220:3:46"
                                  },
                                  "nativeSrc": "21220:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "21220:14:46"
                                },
                                {
                                  "hexValue": "4e6f74204167656e74204163636f756e74",
                                  "kind": "string",
                                  "nativeSrc": "21236:19:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21236:19:46",
                                  "type": "",
                                  "value": "Not Agent Account"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "21213:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "21213:6:46"
                              },
                              "nativeSrc": "21213:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21213:43:46"
                            },
                            "nativeSrc": "21213:43:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21213:43:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8",
                      "nativeSrc": "21096:167:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "21194:6:46",
                          "nodeType": "YulTypedName",
                          "src": "21194:6:46",
                          "type": ""
                        }
                      ],
                      "src": "21096:167:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21415:220:46",
                        "nodeType": "YulBlock",
                        "src": "21415:220:46",
                        "statements": [
                          {
                            "nativeSrc": "21425:74:46",
                            "nodeType": "YulAssignment",
                            "src": "21425:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "21491:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21491:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21496:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21496:2:46",
                                  "type": "",
                                  "value": "17"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "21432:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "21432:58:46"
                              },
                              "nativeSrc": "21432:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21432:67:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "21425:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21425:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "21597:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21597:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8",
                                "nativeSrc": "21508:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "21508:88:46"
                              },
                              "nativeSrc": "21508:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21508:93:46"
                            },
                            "nativeSrc": "21508:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21508:93:46"
                          },
                          {
                            "nativeSrc": "21610:19:46",
                            "nodeType": "YulAssignment",
                            "src": "21610:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "21621:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21621:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21626:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21626:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "21617:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21617:3:46"
                              },
                              "nativeSrc": "21617:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21617:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "21610:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21610:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "21269:366:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "21403:3:46",
                          "nodeType": "YulTypedName",
                          "src": "21403:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "21411:3:46",
                          "nodeType": "YulTypedName",
                          "src": "21411:3:46",
                          "type": ""
                        }
                      ],
                      "src": "21269:366:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21812:248:46",
                        "nodeType": "YulBlock",
                        "src": "21812:248:46",
                        "statements": [
                          {
                            "nativeSrc": "21822:26:46",
                            "nodeType": "YulAssignment",
                            "src": "21822:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "21834:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21834:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21845:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21845:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "21830:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21830:3:46"
                              },
                              "nativeSrc": "21830:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21830:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "21822:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "21822:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "21869:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21869:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "21880:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "21880:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "21865:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "21865:3:46"
                                  },
                                  "nativeSrc": "21865:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "21865:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "21888:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21888:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "21894:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21894:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "21884:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "21884:3:46"
                                  },
                                  "nativeSrc": "21884:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "21884:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "21858:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "21858:6:46"
                              },
                              "nativeSrc": "21858:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21858:47:46"
                            },
                            "nativeSrc": "21858:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21858:47:46"
                          },
                          {
                            "nativeSrc": "21914:139:46",
                            "nodeType": "YulAssignment",
                            "src": "21914:139:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "22048:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22048:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "21922:124:46",
                                "nodeType": "YulIdentifier",
                                "src": "21922:124:46"
                              },
                              "nativeSrc": "21922:131:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21922:131:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "21914:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "21914:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "21641:419:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "21792:9:46",
                          "nodeType": "YulTypedName",
                          "src": "21792:9:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "21807:4:46",
                          "nodeType": "YulTypedName",
                          "src": "21807:4:46",
                          "type": ""
                        }
                      ],
                      "src": "21641:419:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22119:32:46",
                        "nodeType": "YulBlock",
                        "src": "22119:32:46",
                        "statements": [
                          {
                            "nativeSrc": "22129:16:46",
                            "nodeType": "YulAssignment",
                            "src": "22129:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "22140:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "22140:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "22129:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "22129:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_rational_1_by_1",
                      "nativeSrc": "22066:85:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22101:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22101:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "22111:7:46",
                          "nodeType": "YulTypedName",
                          "src": "22111:7:46",
                          "type": ""
                        }
                      ],
                      "src": "22066:85:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22201:57:46",
                        "nodeType": "YulBlock",
                        "src": "22201:57:46",
                        "statements": [
                          {
                            "nativeSrc": "22211:41:46",
                            "nodeType": "YulAssignment",
                            "src": "22211:41:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "22226:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22226:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "22233:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "22233:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "22222:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "22222:3:46"
                              },
                              "nativeSrc": "22222:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22222:30:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "22211:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "22211:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint64",
                      "nativeSrc": "22157:101:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22183:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22183:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "22193:7:46",
                          "nodeType": "YulTypedName",
                          "src": "22193:7:46",
                          "type": ""
                        }
                      ],
                      "src": "22157:101:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22296:28:46",
                        "nodeType": "YulBlock",
                        "src": "22296:28:46",
                        "statements": [
                          {
                            "nativeSrc": "22306:12:46",
                            "nodeType": "YulAssignment",
                            "src": "22306:12:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "22313:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "22313:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nativeSrc": "22306:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "22306:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "identity",
                      "nativeSrc": "22264:60:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22282:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22282:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nativeSrc": "22292:3:46",
                          "nodeType": "YulTypedName",
                          "src": "22292:3:46",
                          "type": ""
                        }
                      ],
                      "src": "22264:60:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22397:89:46",
                        "nodeType": "YulBlock",
                        "src": "22397:89:46",
                        "statements": [
                          {
                            "nativeSrc": "22407:73:46",
                            "nodeType": "YulAssignment",
                            "src": "22407:73:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "22472:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "22472:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_rational_1_by_1",
                                        "nativeSrc": "22446:25:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "22446:25:46"
                                      },
                                      "nativeSrc": "22446:32:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "22446:32:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "identity",
                                    "nativeSrc": "22437:8:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22437:8:46"
                                  },
                                  "nativeSrc": "22437:42:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22437:42:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint64",
                                "nativeSrc": "22420:16:46",
                                "nodeType": "YulIdentifier",
                                "src": "22420:16:46"
                              },
                              "nativeSrc": "22420:60:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22420:60:46"
                            },
                            "variableNames": [
                              {
                                "name": "converted",
                                "nativeSrc": "22407:9:46",
                                "nodeType": "YulIdentifier",
                                "src": "22407:9:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "convert_t_rational_1_by_1_to_t_uint64",
                      "nativeSrc": "22330:156:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22377:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22377:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "converted",
                          "nativeSrc": "22387:9:46",
                          "nodeType": "YulTypedName",
                          "src": "22387:9:46",
                          "type": ""
                        }
                      ],
                      "src": "22330:156:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22564:73:46",
                        "nodeType": "YulBlock",
                        "src": "22564:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "22581:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22581:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "22624:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22624:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "convert_t_rational_1_by_1_to_t_uint64",
                                    "nativeSrc": "22586:37:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22586:37:46"
                                  },
                                  "nativeSrc": "22586:44:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22586:44:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "22574:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "22574:6:46"
                              },
                              "nativeSrc": "22574:57:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22574:57:46"
                            },
                            "nativeSrc": "22574:57:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "22574:57:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                      "nativeSrc": "22492:145:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22552:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22552:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "22559:3:46",
                          "nodeType": "YulTypedName",
                          "src": "22559:3:46",
                          "type": ""
                        }
                      ],
                      "src": "22492:145:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22748:131:46",
                        "nodeType": "YulBlock",
                        "src": "22748:131:46",
                        "statements": [
                          {
                            "nativeSrc": "22758:26:46",
                            "nodeType": "YulAssignment",
                            "src": "22758:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "22770:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22770:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "22781:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "22781:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "22766:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "22766:3:46"
                              },
                              "nativeSrc": "22766:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22766:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "22758:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "22758:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "22845:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22845:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "22858:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22858:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "22869:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "22869:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "22854:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22854:3:46"
                                  },
                                  "nativeSrc": "22854:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22854:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                                "nativeSrc": "22794:50:46",
                                "nodeType": "YulIdentifier",
                                "src": "22794:50:46"
                              },
                              "nativeSrc": "22794:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22794:78:46"
                            },
                            "nativeSrc": "22794:78:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "22794:78:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
                      "nativeSrc": "22643:236:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "22720:9:46",
                          "nodeType": "YulTypedName",
                          "src": "22720:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "22732:6:46",
                          "nodeType": "YulTypedName",
                          "src": "22732:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "22743:4:46",
                          "nodeType": "YulTypedName",
                          "src": "22743:4:46",
                          "type": ""
                        }
                      ],
                      "src": "22643:236:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22928:79:46",
                        "nodeType": "YulBlock",
                        "src": "22928:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "22985:16:46",
                              "nodeType": "YulBlock",
                              "src": "22985:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "22994:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "22994:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "22997:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "22997:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "22987:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22987:6:46"
                                    },
                                    "nativeSrc": "22987:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "22987:12:46"
                                  },
                                  "nativeSrc": "22987:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "22987:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "22951:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22951:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "22976:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "22976:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_bytes32",
                                        "nativeSrc": "22958:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "22958:17:46"
                                      },
                                      "nativeSrc": "22958:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "22958:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "22948:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22948:2:46"
                                  },
                                  "nativeSrc": "22948:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22948:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "22941:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "22941:6:46"
                              },
                              "nativeSrc": "22941:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22941:43:46"
                            },
                            "nativeSrc": "22938:63:46",
                            "nodeType": "YulIf",
                            "src": "22938:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_bytes32",
                      "nativeSrc": "22885:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22921:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22921:5:46",
                          "type": ""
                        }
                      ],
                      "src": "22885:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "23076:80:46",
                        "nodeType": "YulBlock",
                        "src": "23076:80:46",
                        "statements": [
                          {
                            "nativeSrc": "23086:22:46",
                            "nodeType": "YulAssignment",
                            "src": "23086:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "23101:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23101:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "23095:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "23095:5:46"
                              },
                              "nativeSrc": "23095:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23095:13:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "23086:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "23086:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "23144:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23144:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_bytes32",
                                "nativeSrc": "23117:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "23117:26:46"
                              },
                              "nativeSrc": "23117:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23117:33:46"
                            },
                            "nativeSrc": "23117:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23117:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes32_fromMemory",
                      "nativeSrc": "23013:143:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "23054:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23054:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "23062:3:46",
                          "nodeType": "YulTypedName",
                          "src": "23062:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "23070:5:46",
                          "nodeType": "YulTypedName",
                          "src": "23070:5:46",
                          "type": ""
                        }
                      ],
                      "src": "23013:143:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "23239:274:46",
                        "nodeType": "YulBlock",
                        "src": "23239:274:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "23285:83:46",
                              "nodeType": "YulBlock",
                              "src": "23285:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "23287:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23287:77:46"
                                    },
                                    "nativeSrc": "23287:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "23287:79:46"
                                  },
                                  "nativeSrc": "23287:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "23287:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "23260:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23260:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23269:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23269:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "23256:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23256:3:46"
                                  },
                                  "nativeSrc": "23256:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23256:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "23281:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "23281:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "23252:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23252:3:46"
                              },
                              "nativeSrc": "23252:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23252:32:46"
                            },
                            "nativeSrc": "23249:119:46",
                            "nodeType": "YulIf",
                            "src": "23249:119:46"
                          },
                          {
                            "nativeSrc": "23378:128:46",
                            "nodeType": "YulBlock",
                            "src": "23378:128:46",
                            "statements": [
                              {
                                "nativeSrc": "23393:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "23393:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "23407:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "23407:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "23397:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "23397:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "23422:74:46",
                                "nodeType": "YulAssignment",
                                "src": "23422:74:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "23468:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "23468:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "23479:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "23479:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "23464:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "23464:3:46"
                                      },
                                      "nativeSrc": "23464:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "23464:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "23488:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23488:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes32_fromMemory",
                                    "nativeSrc": "23432:31:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23432:31:46"
                                  },
                                  "nativeSrc": "23432:64:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23432:64:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "23422:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23422:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bytes32_fromMemory",
                      "nativeSrc": "23162:351:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "23209:9:46",
                          "nodeType": "YulTypedName",
                          "src": "23209:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "23220:7:46",
                          "nodeType": "YulTypedName",
                          "src": "23220:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "23232:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23232:6:46",
                          "type": ""
                        }
                      ],
                      "src": "23162:351:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "23645:206:46",
                        "nodeType": "YulBlock",
                        "src": "23645:206:46",
                        "statements": [
                          {
                            "nativeSrc": "23655:26:46",
                            "nodeType": "YulAssignment",
                            "src": "23655:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "23667:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23667:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "23678:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "23678:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "23663:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23663:3:46"
                              },
                              "nativeSrc": "23663:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23663:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "23655:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "23655:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "23735:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23735:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23748:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23748:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23759:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23759:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23744:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23744:3:46"
                                  },
                                  "nativeSrc": "23744:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23744:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "23691:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "23691:43:46"
                              },
                              "nativeSrc": "23691:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23691:71:46"
                            },
                            "nativeSrc": "23691:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23691:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "23816:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23816:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23829:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23829:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23840:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23840:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23825:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23825:3:46"
                                  },
                                  "nativeSrc": "23825:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23825:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "23772:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "23772:43:46"
                              },
                              "nativeSrc": "23772:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23772:72:46"
                            },
                            "nativeSrc": "23772:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23772:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                      "nativeSrc": "23519:332:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "23609:9:46",
                          "nodeType": "YulTypedName",
                          "src": "23609:9:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "23621:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23621:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "23629:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23629:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "23640:4:46",
                          "nodeType": "YulTypedName",
                          "src": "23640:4:46",
                          "type": ""
                        }
                      ],
                      "src": "23519:332:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24011:288:46",
                        "nodeType": "YulBlock",
                        "src": "24011:288:46",
                        "statements": [
                          {
                            "nativeSrc": "24021:26:46",
                            "nodeType": "YulAssignment",
                            "src": "24021:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "24033:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24033:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "24044:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "24044:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "24029:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24029:3:46"
                              },
                              "nativeSrc": "24029:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24029:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "24021:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "24021:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "24101:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24101:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24114:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24114:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24125:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24125:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24110:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24110:3:46"
                                  },
                                  "nativeSrc": "24110:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24110:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "24057:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "24057:43:46"
                              },
                              "nativeSrc": "24057:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24057:71:46"
                            },
                            "nativeSrc": "24057:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24057:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "24182:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24182:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24195:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24195:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24206:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24206:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24191:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24191:3:46"
                                  },
                                  "nativeSrc": "24191:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24191:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "24138:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "24138:43:46"
                              },
                              "nativeSrc": "24138:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24138:72:46"
                            },
                            "nativeSrc": "24138:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24138:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "24264:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24264:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24277:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24277:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24288:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24288:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24273:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24273:3:46"
                                  },
                                  "nativeSrc": "24273:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24273:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "24220:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "24220:43:46"
                              },
                              "nativeSrc": "24220:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24220:72:46"
                            },
                            "nativeSrc": "24220:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24220:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                      "nativeSrc": "23857:442:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "23967:9:46",
                          "nodeType": "YulTypedName",
                          "src": "23967:9:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "23979:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23979:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "23987:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23987:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "23995:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23995:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "24006:4:46",
                          "nodeType": "YulTypedName",
                          "src": "24006:4:46",
                          "type": ""
                        }
                      ],
                      "src": "23857:442:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24363:40:46",
                        "nodeType": "YulBlock",
                        "src": "24363:40:46",
                        "statements": [
                          {
                            "nativeSrc": "24374:22:46",
                            "nodeType": "YulAssignment",
                            "src": "24374:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "24390:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24390:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "24384:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "24384:5:46"
                              },
                              "nativeSrc": "24384:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24384:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "24374:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "24374:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_bytes_memory_ptr",
                      "nativeSrc": "24305:98:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "24346:5:46",
                          "nodeType": "YulTypedName",
                          "src": "24346:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "24356:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24356:6:46",
                          "type": ""
                        }
                      ],
                      "src": "24305:98:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24522:34:46",
                        "nodeType": "YulBlock",
                        "src": "24522:34:46",
                        "statements": [
                          {
                            "nativeSrc": "24532:18:46",
                            "nodeType": "YulAssignment",
                            "src": "24532:18:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "24547:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "24547:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "24532:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "24532:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "24409:147:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "24494:3:46",
                          "nodeType": "YulTypedName",
                          "src": "24494:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "24499:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24499:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "24510:11:46",
                          "nodeType": "YulTypedName",
                          "src": "24510:11:46",
                          "type": ""
                        }
                      ],
                      "src": "24409:147:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24670:278:46",
                        "nodeType": "YulBlock",
                        "src": "24670:278:46",
                        "statements": [
                          {
                            "nativeSrc": "24680:52:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "24680:52:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "24726:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24726:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_bytes_memory_ptr",
                                "nativeSrc": "24694:31:46",
                                "nodeType": "YulIdentifier",
                                "src": "24694:31:46"
                              },
                              "nativeSrc": "24694:38:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24694:38:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "24684:6:46",
                                "nodeType": "YulTypedName",
                                "src": "24684:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "24741:95:46",
                            "nodeType": "YulAssignment",
                            "src": "24741:95:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "24824:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24824:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "24829:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24829:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "24748:75:46",
                                "nodeType": "YulIdentifier",
                                "src": "24748:75:46"
                              },
                              "nativeSrc": "24748:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24748:88:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "24741:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24741:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "24884:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24884:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24891:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24891:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24880:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24880:3:46"
                                  },
                                  "nativeSrc": "24880:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24880:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "24898:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24898:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "24903:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24903:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "24845:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "24845:34:46"
                              },
                              "nativeSrc": "24845:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24845:65:46"
                            },
                            "nativeSrc": "24845:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24845:65:46"
                          },
                          {
                            "nativeSrc": "24919:23:46",
                            "nodeType": "YulAssignment",
                            "src": "24919:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "24930:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24930:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "24935:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24935:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "24926:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24926:3:46"
                              },
                              "nativeSrc": "24926:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24926:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "24919:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24919:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "24562:386:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "24651:5:46",
                          "nodeType": "YulTypedName",
                          "src": "24651:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "24658:3:46",
                          "nodeType": "YulTypedName",
                          "src": "24658:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "24666:3:46",
                          "nodeType": "YulTypedName",
                          "src": "24666:3:46",
                          "type": ""
                        }
                      ],
                      "src": "24562:386:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25088:137:46",
                        "nodeType": "YulBlock",
                        "src": "25088:137:46",
                        "statements": [
                          {
                            "nativeSrc": "25099:100:46",
                            "nodeType": "YulAssignment",
                            "src": "25099:100:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "25186:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25186:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "25195:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25195:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "25106:79:46",
                                "nodeType": "YulIdentifier",
                                "src": "25106:79:46"
                              },
                              "nativeSrc": "25106:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25106:93:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "25099:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25099:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "25209:10:46",
                            "nodeType": "YulAssignment",
                            "src": "25209:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "25216:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "25216:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "25209:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25209:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "24954:271:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "25067:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25067:3:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "25073:6:46",
                          "nodeType": "YulTypedName",
                          "src": "25073:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "25084:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25084:3:46",
                          "type": ""
                        }
                      ],
                      "src": "24954:271:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25337:8:46",
                        "nodeType": "YulBlock",
                        "src": "25337:8:46",
                        "statements": []
                      },
                      "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "nativeSrc": "25231:114:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "25329:6:46",
                          "nodeType": "YulTypedName",
                          "src": "25329:6:46",
                          "type": ""
                        }
                      ],
                      "src": "25231:114:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25514:235:46",
                        "nodeType": "YulBlock",
                        "src": "25514:235:46",
                        "statements": [
                          {
                            "nativeSrc": "25524:90:46",
                            "nodeType": "YulAssignment",
                            "src": "25524:90:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25607:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25607:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25612:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25612:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "25531:75:46",
                                "nodeType": "YulIdentifier",
                                "src": "25531:75:46"
                              },
                              "nativeSrc": "25531:83:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25531:83:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "25524:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25524:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25712:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25712:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "nativeSrc": "25623:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "25623:88:46"
                              },
                              "nativeSrc": "25623:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25623:93:46"
                            },
                            "nativeSrc": "25623:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "25623:93:46"
                          },
                          {
                            "nativeSrc": "25725:18:46",
                            "nodeType": "YulAssignment",
                            "src": "25725:18:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25736:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25736:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25741:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25741:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "25732:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25732:3:46"
                              },
                              "nativeSrc": "25732:11:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25732:11:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "25725:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25725:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "25351:398:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "25502:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25502:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "25510:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25510:3:46",
                          "type": ""
                        }
                      ],
                      "src": "25351:398:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25943:191:46",
                        "nodeType": "YulBlock",
                        "src": "25943:191:46",
                        "statements": [
                          {
                            "nativeSrc": "25954:154:46",
                            "nodeType": "YulAssignment",
                            "src": "25954:154:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "26104:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "26104:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "25961:141:46",
                                "nodeType": "YulIdentifier",
                                "src": "25961:141:46"
                              },
                              "nativeSrc": "25961:147:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25961:147:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "25954:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25954:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "26118:10:46",
                            "nodeType": "YulAssignment",
                            "src": "26118:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "26125:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "26125:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "26118:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "26118:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "25755:379:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "25930:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25930:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "25939:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25939:3:46",
                          "type": ""
                        }
                      ],
                      "src": "25755:379:46"
                    }
                  ]
                },
                "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct DoitRingStaked.Stake -> struct DoitRingStaked.Stake\n    function abi_encode_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // index\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // staker\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // token\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DoitRingStaked.Stake[] -> struct DoitRingStaked.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$7616_memory_ptr_to_t_struct$_Stake_$7616_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    // struct DoitRingStaked.Stake\n    function abi_decode_t_struct$_Stake_$7616_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // index\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // staker\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // token\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // amount\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // timestamp\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct DoitRingStaked.Stake[]\n    function abi_decode_available_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0xa0))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0xa0) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_Stake_$7616_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct DoitRingStaked.Stake[]\n    function abi_decode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_struct$_Stake_$7616_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint128(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Verifier Account\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Agent Account\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n",
                "id": 46,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "immutableReferences": {
              "468": [
                {
                  "length": 32,
                  "start": 8388
                },
                {
                  "length": 32,
                  "start": 8473
                },
                {
                  "length": 32,
                  "start": 8916
                }
              ]
            },
            "linkReferences": {},
            "object": "",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x881C5BE6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE316B823 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE316B823 EQ PUSH2 0x57C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF551EB19 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xFFE5725F EQ PUSH2 0x60D JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xDC170E9E EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xE02546B2 EQ PUSH2 0x53F JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x881C5BE6 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xA7FF9D0F EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xC13F4AF7 EQ PUSH2 0x4C4 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x35DE3234 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x5437988D EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x35DE3234 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x396F54BA EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x46657FE9 EQ PUSH2 0x32D JUMPI PUSH2 0x18C JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x1D051E3D EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x220DEDF1 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x29898059 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2C566AE5 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2E15ED84 EQ PUSH2 0x286 JUMPI PUSH2 0x18C JUMP JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x2F7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x31E4 JUMP JUMPDEST PUSH2 0x7B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x952 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x32E5 JUMP JUMPDEST PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x342 PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x34DF JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x389 PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DD PUSH2 0xCC0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0xCD4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41D PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x32CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 PUSH2 0x1099 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x10D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x11A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x184A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x538 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0x19F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x362B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x33CF JUMP JUMPDEST PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x3663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x1C73 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F7 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x634 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x367E JUMP JUMPDEST PUSH2 0x1D23 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x793 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x697 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A6 PUSH2 0x203B JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0x203B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x861 JUMPI PUSH2 0x860 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x806 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x95A PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77C1336B2CCEA697B92DBB17C7A3E8D2C20A5ED661262752B49CB92C6F799411 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9A5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF636A2600530ECAE1A76E3B0E1C91868F1691254641D54C0E3E046D7A6D09AA1 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0xBAE DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH2 0xBB8 DUP3 DUP3 PUSH2 0x21B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC6 PUSH2 0x22D2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC74 SWAP1 PUSH2 0x3783 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCC8 PUSH2 0x203B JUMP JUMPDEST PUSH2 0xCD2 PUSH1 0x0 PUSH2 0x2359 JUMP JUMPDEST JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD5F JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xD96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SUB PUSH2 0xE44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7E85E0B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xE52 SWAP2 SWAP1 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x77C1336B2CCEA697B92DBB17C7A3E8D2C20A5ED661262752B49CB92C6F799411 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x102F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1047 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1231 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x12CD JUMPI PUSH2 0x12CC PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD SUB PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7E85E0B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x13C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9FB937EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3FBB02D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1586 ADDRESS DUP5 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x14DA JUMPI PUSH2 0x14D9 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x156F JUMPI PUSH2 0x156E PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x2458 JUMP JUMPDEST DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF636A2600530ECAE1A76E3B0E1C91868F1691254641D54C0E3E046D7A6D09AA1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1634 JUMPI PUSH2 0x1633 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x16C9 JUMPI PUSH2 0x16C8 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x16EB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1756 JUMPI PUSH2 0x1755 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1854 PUSH2 0x24AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x18A2 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x18D7 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x18E5 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x191C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x196C JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1975 DUP7 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x197E DUP7 PUSH2 0x24EB JUMP JUMPDEST PUSH2 0x1986 PUSH2 0x2537 JUMP JUMPDEST PUSH3 0x278D00 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x19E3 SWAP2 SWAP1 PUSH2 0x38CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19FC PUSH2 0x203B JUMP JUMPDEST DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE91584B4B15912BF7BF5FB21F4EDC58A414B370FB2A10E91D4C49C3C3468EDEA DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1A47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x1BE3 JUMPI TIMESTAMP PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x1BDA JUMPI PUSH1 0x3 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x2 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x36D1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD EQ PUSH2 0x1C68 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7B PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CED JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE4 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF6 DUP2 PUSH2 0x2359 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x1E1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B7150B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH2 0x1FE0 DUP7 ADDRESS DUP8 DUP8 PUSH2 0x2458 JUMP JUMPDEST DUP2 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE91584B4B15912BF7BF5FB21F4EDC58A414B370FB2A10E91D4C49C3C3468EDEA DUP8 DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x202B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2043 PUSH2 0x2541 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2061 PUSH2 0x103C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20C0 JUMPI PUSH2 0x2084 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B7 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x216F JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2156 PUSH2 0x2549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x21B0 PUSH2 0x203B JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x221B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2218 SWAP2 SWAP1 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x225C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2253 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x22C3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BA SWAP2 SWAP1 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22CD DUP4 DUP4 PUSH2 0x25A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2357 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2363 PUSH2 0x2430 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x249D JUMPI PUSH2 0x2498 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2613 JUMP JUMPDEST PUSH2 0x24A9 JUMP JUMPDEST PUSH2 0x24A8 DUP5 DUP5 DUP4 PUSH2 0x282E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x24DF PUSH2 0x29AE JUMP JUMPDEST PUSH2 0x24E8 DUP2 PUSH2 0x29EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x24F3 PUSH2 0x29AE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x253F PUSH2 0x29AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2577 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x25A9 DUP3 PUSH2 0x2A7E JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2606 JUMPI PUSH2 0x2600 DUP3 DUP3 PUSH2 0x2B4B JUMP JUMPDEST POP PUSH2 0x260F JUMP JUMPDEST PUSH2 0x260E PUSH2 0x2BCF JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26E6 JUMPI PUSH1 0x0 PUSH32 0xA9059CBB2AB09EB219583F4A59A5D0623ADE346D962BCD4E46B11DA047C9049B SWAP1 POP DUP1 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2681 SWAP3 SWAP2 SWAP1 PUSH2 0x393F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP2 POP POP PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x23B872DD7302113369CDA2901243429419BEC145408FA8B352B3DD92B66C680B SWAP1 POP DUP1 DUP7 DUP7 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2721 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3968 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP2 POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x27A9 SWAP2 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27E6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27EB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x290A JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x2887 SWAP1 PUSH2 0x3A23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28C4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2904 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x29A9 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x296F JUMPI PUSH1 0x40 MLOAD PUSH32 0x11717F1200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLVALUE EQ PUSH2 0x29A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x90B8EC1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29B6 PUSH2 0x2C0C JUMP JUMPDEST PUSH2 0x29EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x29F6 PUSH2 0x29AE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A68 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5F SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A71 DUP2 PUSH2 0x2359 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2ADA JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD1 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2B07 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2B75 SWAP2 SWAP1 PUSH2 0x39E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BB0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2BC5 DUP6 DUP4 DUP4 PUSH2 0x2C2C JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2C0A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C16 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2C41 JUMPI PUSH2 0x2C3C DUP3 PUSH2 0x2CBB JUMP JUMPDEST PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2C69 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2CAB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA2 SWAP2 SWAP1 PUSH2 0x340F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2CB4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CCE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x5 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2D21 SWAP2 SWAP1 PUSH2 0x2D24 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2D9D JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x5 ADD PUSH2 0x2D25 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE0 DUP3 PUSH2 0x2DB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DF0 DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E0D DUP2 PUSH2 0x2DE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E29 JUMPI PUSH2 0x2E28 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E37 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E7F DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E8E DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2EAA PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2EBD PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2E85 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2ED0 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2E85 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2EE3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2EF6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F08 DUP4 DUP4 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2C DUP3 PUSH2 0x2E40 JUMP JUMPDEST PUSH2 0x2F36 DUP2 DUP6 PUSH2 0x2E4B JUMP JUMPDEST SWAP4 POP PUSH2 0x2F41 DUP4 PUSH2 0x2E5C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F72 JUMPI DUP2 MLOAD PUSH2 0x2F59 DUP9 DUP3 PUSH2 0x2EFC JUMP JUMPDEST SWAP8 POP PUSH2 0x2F64 DUP4 PUSH2 0x2F14 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2F45 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F99 DUP2 DUP5 PUSH2 0x2F21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FAA DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP2 EQ PUSH2 0x2FB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FC7 DUP2 PUSH2 0x2FA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FE3 JUMPI PUSH2 0x2FE2 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FF1 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3048 DUP3 PUSH2 0x2FFF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3067 JUMPI PUSH2 0x3066 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x307A PUSH2 0x2DA1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3086 DUP3 DUP3 PUSH2 0x303F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x30A6 JUMPI PUSH2 0x30A5 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30D7 JUMPI PUSH2 0x30D6 PUSH2 0x30BC JUMP JUMPDEST JUMPDEST PUSH2 0x30E1 PUSH1 0xA0 PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x30F1 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3105 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3119 DUP5 DUP3 DUP6 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x312D DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x3141 DUP5 DUP3 DUP6 ADD PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3160 PUSH2 0x315B DUP5 PUSH2 0x308B JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xA0 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3183 JUMPI PUSH2 0x3182 PUSH2 0x30B7 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x31AC JUMPI DUP1 PUSH2 0x3198 DUP9 DUP3 PUSH2 0x30C1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0xA0 DUP2 ADD SWAP1 POP PUSH2 0x3185 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x31CB JUMPI PUSH2 0x31CA PUSH2 0x2FFA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x31DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x314D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31FB JUMPI PUSH2 0x31FA PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3209 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x322A JUMPI PUSH2 0x3229 PUSH2 0x2DB0 JUMP JUMPDEST JUMPDEST PUSH2 0x3236 DUP6 DUP3 DUP7 ADD PUSH2 0x31B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x325C JUMPI PUSH2 0x325B PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x326A DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x327B DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x328C DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x329D DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x32AE DUP9 DUP3 DUP10 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x32C4 DUP2 PUSH2 0x2E6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x32DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32FC JUMPI PUSH2 0x32FB PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x330A DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x331B DUP6 DUP3 DUP7 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x332E DUP2 PUSH2 0x2DD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3349 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x3356 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3363 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3370 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x337D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33AC DUP2 PUSH2 0x3387 JUMP JUMPDEST DUP2 EQ PUSH2 0x33B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33C9 DUP2 PUSH2 0x33A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33F4 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3405 DUP6 DUP3 DUP7 ADD PUSH2 0x33BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3325 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x344A JUMPI PUSH2 0x3449 PUSH2 0x3010 JUMP JUMPDEST JUMPDEST PUSH2 0x3453 DUP3 PUSH2 0x2FFF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3482 PUSH2 0x347D DUP5 PUSH2 0x342F JUMP JUMPDEST PUSH2 0x3070 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x349E JUMPI PUSH2 0x349D PUSH2 0x342A JUMP JUMPDEST JUMPDEST PUSH2 0x34A9 DUP5 DUP3 DUP6 PUSH2 0x3460 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x34C6 JUMPI PUSH2 0x34C5 PUSH2 0x2FFA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x34D6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x346F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F6 JUMPI PUSH2 0x34F5 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3504 DUP6 DUP3 DUP7 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3525 JUMPI PUSH2 0x3524 PUSH2 0x2DB0 JUMP JUMPDEST JUMPDEST PUSH2 0x3531 DUP6 DUP3 DUP7 ADD PUSH2 0x34B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354E DUP2 PUSH2 0x353B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3569 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3545 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35A9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x358E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35C0 DUP3 PUSH2 0x356F JUMP JUMPDEST PUSH2 0x35CA DUP2 DUP6 PUSH2 0x357A JUMP JUMPDEST SWAP4 POP PUSH2 0x35DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST PUSH2 0x35E3 DUP2 PUSH2 0x2FFF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3608 DUP2 DUP5 PUSH2 0x35B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3625 DUP2 PUSH2 0x3610 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3640 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x361C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x365D DUP2 PUSH2 0x3646 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3678 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3697 JUMPI PUSH2 0x3696 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x36A5 DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x36B6 DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x36C7 DUP7 DUP3 DUP8 ADD PUSH2 0x2FB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3715 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3722 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x32BB JUMP JUMPDEST PUSH2 0x372F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74205665726966696572204163636F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x376D PUSH1 0x14 DUP4 PUSH2 0x357A JUMP JUMPDEST SWAP2 POP PUSH2 0x3778 DUP3 PUSH2 0x3737 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x379C DUP2 PUSH2 0x3760 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37DD DUP3 PUSH2 0x2E6C JUMP JUMPDEST SWAP2 POP PUSH2 0x37E8 DUP4 PUSH2 0x2E6C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3800 JUMPI PUSH2 0x37FF PUSH2 0x37A3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74204167656E74204163636F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x11 DUP4 PUSH2 0x357A JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x3806 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38B5 PUSH2 0x38B0 PUSH2 0x38AB DUP5 PUSH2 0x3872 JUMP JUMPDEST PUSH2 0x3890 JUMP JUMPDEST PUSH2 0x387C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38C5 DUP2 PUSH2 0x389A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x38EF DUP2 PUSH2 0x353B JUMP JUMPDEST DUP2 EQ PUSH2 0x38FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x390C DUP2 PUSH2 0x38E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3928 JUMPI PUSH2 0x3927 PUSH2 0x2DAB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3936 DUP5 DUP3 DUP6 ADD PUSH2 0x38FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3954 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3961 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x397D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x398A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3325 JUMP JUMPDEST PUSH2 0x3997 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x32BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C0 DUP3 PUSH2 0x399F JUMP JUMPDEST PUSH2 0x39CA DUP2 DUP6 PUSH2 0x39AA JUMP JUMPDEST SWAP4 POP PUSH2 0x39DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x358B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 DUP5 PUSH2 0x39B5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0D PUSH1 0x0 DUP4 PUSH2 0x39AA JUMP JUMPDEST SWAP2 POP PUSH2 0x3A18 DUP3 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2E DUP3 PUSH2 0x3A00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 CALLDATACOPY PUSH29 0xE8FB0088DB671D9D8C2AF9AAEEBE22BE10E95C3C846656D25658A70DE4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
            "sourceMap": "358:4687:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:100;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3982:88;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4076:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4558:241;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3620:99;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4805:237;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;688:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3725:121;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:81:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:154:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;2135:368:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;734:63:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;480:136:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2509:676:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1475:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4315:237;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3852:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3297:317;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;399:75:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1658:471:34;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:100;3242:14;3272:6;:13;3279:5;3272:13;;;;;;;;;;;;;;;3265:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3191:100;;;:::o;3982:88::-;2334:13:0;:11;:13::i;:::-;4056:8:34::1;4046:7;:18;;;;3982:88:::0;:::o;4076:231::-;2334:13:0;:11;:13::i;:::-;4174:6:34::1;:13;4181:5;4174:13;;;;;;;;;;;;;;;;4167:20;;;;:::i;:::-;4199:13;4194:108;4226:7;:14;4218:5;:22;4194:108;;;4260:6;:13;4267:5;4260:13;;;;;;;;;;;;;;;4279:7;4287:5;4279:14;;;;;;;;:::i;:::-;;;;;;;;4260:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4242:7;;;;;;;4194:108;;;;4076:231:::0;;:::o;4558:241::-;2334:13:0;:11;:13::i;:::-;4734:5:34::1;4720;4697:96;;;4748:5;4762:6;4777:9;4697:96;;;;;;;;:::i;:::-;;;;;;;;4558:241:::0;;;;;:::o;3620:99::-;3671:7;3693:6;:13;3700:5;3693:13;;;;;;;;;;;;;;;:20;;;;3686:27;;3620:99;;;:::o;4805:237::-;2334:13:0;:11;:13::i;:::-;4977:5:34::1;4963;4942:94;;;4991:5;5005:6;5020:9;4942:94;;;;;;;;:::i;:::-;;;;;;;;4805:237:::0;;;;;:::o;688:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3725:121::-;3795:7;3818:8;:15;3827:5;3818:15;;;;;;;;;;;;;;;:22;3834:5;3818:22;;;;;;;;;;;;;;;;3811:29;;3725:121;;;;:::o;973:81:45:-;1017:7;1040:8;;;;;;;;;;;1033:15;;973:81;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:14::1;3800:32:2;;3793:39;;3705:134:::0;:::o;1060:154:45:-;1146:8;;;;;;;;;;1132:22;;:10;:22;;;1124:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:11;1186:8;;:22;;;;;;;;;;;;;;;;;;1060:154;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2135:368:34:-;2195:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;2246:1:34::1;2214:6;:14;2221:6;2214:14;;;;;;;;;;;;;;;2229:5;2214:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;:33:::0;2210:65:::1;;2263:12;;;;;;;;;;;;;;2210:65;2328:7;;2310:15;:25;;;;:::i;:::-;2284:8;:16;2293:6;2284:16;;;;;;;;;;;;;;;:23;2301:5;2284:23;;;;;;;;;;;;;;;:51;;;;2387:5;2349:148;;2372:6;2349:148;;;2401:6;:14;2408:6;2401:14;;;;;;;;;;;;;;;2416:5;2401:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;;;;;;;;;;2438:6;:14;2445:6;2438:14;;;;;;;;;;;;;;;2453:5;2438:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;2475:15;2349:148;;;;;;;;:::i;:::-;;;;;;;;2135:368:::0;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;734:63:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;480:136:43:-;560:5;;;;;;;;;;;546:19;;:10;:19;;;538:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;602:8;594:5;;:16;;;;;;;;;;;;;;;;;;480:136;:::o;2509:676:34:-;2568:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;2619:1:34::1;2587:6;:14;2594:6;2587:14;;;;;;;;;;;;;;;2602:5;2587:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;:33:::0;2583:65:::1;;2636:12;;;;;;;;;;;;;;2583:65;2686:1;2659:8;:16;2668:6;2659:16;;;;;;;;;;;;;;;:23;2676:5;2659:23;;;;;;;;;;;;;;;;:28:::0;2655:66:::1;;2703:18;;;;;;;;;;;;;;2655:66;2758:15;2732:8;:16;2741:6;2732:16;;;;;;;;;;;;;;;:23;2749:5;2732:23;;;;;;;;;;;;;;;;:41;2728:83;;;2789:22;;;;;;;;;;;;;;2728:83;2820:125;2845:4;2859:6;2874;:14;2881:6;2874:14;;;;;;;;;;;;;;;2889:5;2874:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;;;;;;;;;;2910:6;:14;2917:6;2910:14;;;;;;;;;;;;;;;2925:5;2910:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;2820:8;:125::i;:::-;2994:5;2958:147;;2979:6;2958:147;;;3008:6;:14;3015:6;3008:14;;;;;;;;;;;;;;;3023:5;3008:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;;;;;;;;;;3045:6;:14;3052:6;3045:14;;;;;;;;;;;;;;;3060:5;3045:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;3083:15;2958:147;;;;;;;;:::i;:::-;;;;;;;;3121:6;:14;3128:6;3121:14;;;;;;;;;;;;;;;3136:5;3121:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3114:28:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:8;:16;3165:6;3156:16;;;;;;;;;;;;;;;:23;3173:5;3156:23;;;;;;;;;;;;;;;3149:30;;;2509:676:::0;;;:::o;1475:177::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1537:22:34::1;1552:6;1537:14;:22::i;:::-;1566;1581:6;1566:14;:22::i;:::-;1595:24;:22;:24::i;:::-;1636:10;1626:7;:20;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1475:177:34;:::o;4315:237::-;2334:13:0;:11;:13::i;:::-;4487:5:34::1;4473;4452:94;;;4501:5;4515:6;4530:9;4452:94;;;;;;;;:::i;:::-;;;;;;;;4315:237:::0;;;;;:::o;3852:124::-;3918:4;3969:1;3938:6;:13;3945:5;3938:13;;;;;;;;;;;;;;;3952:5;3938:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;:32;;3931:39;;3852:124;;;;:::o;3297:317::-;3363:6;3408:1;3382:8;:15;3391:5;3382:15;;;;;;;;;;;;;;;:22;3398:5;3382:22;;;;;;;;;;;;;;;;:27;3378:144;;3449:15;3424:8;:15;3433:5;3424:15;;;;;;;;;;;;;;;:22;3440:5;3424:22;;;;;;;;;;;;;;;;:40;3420:94;;;3482:1;3475:8;;;;3420:94;3513:1;3506:8;;;;3378:144;3563:1;3532:6;:13;3539:5;3532:13;;;;;;;;;;;;;;;3546:5;3532:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;:32;3528:80;;3580:1;3573:8;;;;3528:80;3607:1;3600:8;;3297:317;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;399:75:43:-;440:7;463:5;;;;;;;;;;;456:12;;399:75;:::o;1658:471:34:-;1731:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;1760:1:34::1;1750:6;:11:::0;1746:49:::1;;1777:18;;;;;;;;;;;;;;1746:49;1804:10;1817:6;:14;1824:6;1817:14;;;;;;;;;;;;;;;:21;;;;1804:34;;1847:18;1868:52;;;;;;;;1874:5;1868:52;;;;1881:6;1868:52;;;;;;1889:5;1868:52;;;;;;1896:6;1868:52;;;;1904:15;1868:52;;::::0;1847:73:::1;;1927:6;:14;1934:6;1927:14;;;;;;;;;;;;;;;1947:5;1927:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:46;1971:6;1987:4;1994:5;2001:6;1962:8;:46::i;:::-;2058:5;2043:6;2022:101;;;2072:5;2086:6;2101:15;2022:101;;;;;;;;:::i;:::-;;;;;;;;1739:390;;1658:471:::0;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;596:66:34:-;2334:13:0;:11;:13::i;:::-;596:66:34;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:14;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;1120:217:41:-;1232:1;1215:19;;:5;:19;;;1211:120;;1243:38;1257:4;1263:2;1267:5;1274:6;1243:13;:38::i;:::-;1211:120;;;1300:31;1314:4;1320:2;1324:6;1300:13;:31::i;:::-;1211:120;1120:217;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;622:105:43:-;6931:20:1;:18;:20::i;:::-;709:12:43::1;701:5;;:20;;;;;;;;;;;;;;;;;;622:105:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;1957:138:14:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;194:535:41:-;290:17;334:4;318:21;;:4;:21;;;314:325;;350:13;373:38;350:62;;451:6;459:2;463:6;428:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:49;;341:137;314:325;;;493:13;516:50;493:74;;606:6;614:4;620:2;624:6;583:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:55;;484:155;314:325;646:9;660:5;:10;;671:4;660:16;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:31;;;688:4;683:40;;707:16;;;;;;;;;;;;;;683:40;283:446;;194:535;;;;:::o;737:377::-;838:4;822:21;;:4;:21;;;818:291;;855:9;870:2;:7;;886:6;870:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:44;;;912:4;907:43;;934:16;;;;;;;;;;;;;;907:43;845:113;818:291;;;985:10;977:18;;:4;:18;;;973:62;;1013:22;;;;;;;;;;;;;;973:62;1061:6;1048:9;:19;1044:57;;1085:16;;;;;;;;;;;;;;1044:57;818:291;737:377;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1684:190:26:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:14:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:24:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:14:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:24:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:46:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:137::-;1266:6;1300:5;1294:12;1284:22;;1176:137;;;:::o;1319:207::-;1441:11;1475:6;1470:3;1463:19;1515:4;1510:3;1506:14;1491:29;;1319:207;;;;:::o;1532:155::-;1622:4;1645:3;1637:11;;1675:4;1670:3;1666:14;1658:22;;1532:155;;;:::o;1693:77::-;1730:7;1759:5;1748:16;;1693:77;;;:::o;1776:108::-;1853:24;1871:5;1853:24;:::i;:::-;1848:3;1841:37;1776:108;;:::o;1890:::-;1967:24;1985:5;1967:24;:::i;:::-;1962:3;1955:37;1890:108;;:::o;2070:1026::-;2203:4;2198:3;2194:14;2291:4;2284:5;2280:16;2274:23;2310:63;2367:4;2362:3;2358:14;2344:12;2310:63;:::i;:::-;2218:165;2467:4;2460:5;2456:16;2450:23;2486:63;2543:4;2538:3;2534:14;2520:12;2486:63;:::i;:::-;2393:166;2642:4;2635:5;2631:16;2625:23;2661:63;2718:4;2713:3;2709:14;2695:12;2661:63;:::i;:::-;2569:165;2818:4;2811:5;2807:16;2801:23;2837:63;2894:4;2889:3;2885:14;2871:12;2837:63;:::i;:::-;2744:166;2997:4;2990:5;2986:16;2980:23;3016:63;3073:4;3068:3;3064:14;3050:12;3016:63;:::i;:::-;2920:169;2172:924;2070:1026;;:::o;3102:271::-;3217:10;3238:92;3326:3;3318:6;3238:92;:::i;:::-;3362:4;3357:3;3353:14;3339:28;;3102:271;;;;:::o;3379:136::-;3472:4;3504;3499:3;3495:14;3487:22;;3379:136;;;:::o;3591:916::-;3756:3;3785:77;3856:5;3785:77;:::i;:::-;3878:109;3980:6;3975:3;3878:109;:::i;:::-;3871:116;;4011:79;4084:5;4011:79;:::i;:::-;4113:7;4144:1;4129:353;4154:6;4151:1;4148:13;4129:353;;;4230:6;4224:13;4257:109;4362:3;4347:13;4257:109;:::i;:::-;4250:116;;4389:83;4465:6;4389:83;:::i;:::-;4379:93;;4189:293;4176:1;4173;4169:9;4164:14;;4129:353;;;4133:14;4498:3;4491:10;;3761:746;;;3591:916;;;;:::o;4513:465::-;4702:4;4740:2;4729:9;4725:18;4717:26;;4789:9;4783:4;4779:20;4775:1;4764:9;4760:17;4753:47;4817:154;4966:4;4957:6;4817:154;:::i;:::-;4809:162;;4513:465;;;;:::o;4984:122::-;5057:24;5075:5;5057:24;:::i;:::-;5050:5;5047:35;5037:63;;5096:1;5093;5086:12;5037:63;4984:122;:::o;5112:139::-;5158:5;5196:6;5183:20;5174:29;;5212:33;5239:5;5212:33;:::i;:::-;5112:139;;;;:::o;5257:329::-;5316:6;5365:2;5353:9;5344:7;5340:23;5336:32;5333:119;;;5371:79;;:::i;:::-;5333:119;5491:1;5516:53;5561:7;5552:6;5541:9;5537:22;5516:53;:::i;:::-;5506:63;;5462:117;5257:329;;;;:::o;5592:117::-;5701:1;5698;5691:12;5715:102;5756:6;5807:2;5803:7;5798:2;5791:5;5787:14;5783:28;5773:38;;5715:102;;;:::o;5823:180::-;5871:77;5868:1;5861:88;5968:4;5965:1;5958:15;5992:4;5989:1;5982:15;6009:281;6092:27;6114:4;6092:27;:::i;:::-;6084:6;6080:40;6222:6;6210:10;6207:22;6186:18;6174:10;6171:34;6168:62;6165:88;;;6233:18;;:::i;:::-;6165:88;6273:10;6269:2;6262:22;6052:238;6009:281;;:::o;6296:129::-;6330:6;6357:20;;:::i;:::-;6347:30;;6386:33;6414:4;6406:6;6386:33;:::i;:::-;6296:129;;;:::o;6431:334::-;6531:4;6621:18;6613:6;6610:30;6607:56;;;6643:18;;:::i;:::-;6607:56;6693:4;6685:6;6681:17;6673:25;;6753:4;6747;6743:15;6735:23;;6431:334;;;:::o;6771:117::-;6880:1;6877;6870:12;6894:117;7003:1;7000;6993:12;7175:1067;7247:5;7291:4;7279:9;7274:3;7270:19;7266:30;7263:117;;;7299:79;;:::i;:::-;7263:117;7398:21;7414:4;7398:21;:::i;:::-;7389:30;;7479:1;7519:49;7564:3;7555:6;7544:9;7540:22;7519:49;:::i;:::-;7512:4;7505:5;7501:16;7494:75;7429:151;7641:2;7682:49;7727:3;7718:6;7707:9;7703:22;7682:49;:::i;:::-;7675:4;7668:5;7664:16;7657:75;7590:153;7803:2;7844:49;7889:3;7880:6;7869:9;7865:22;7844:49;:::i;:::-;7837:4;7830:5;7826:16;7819:75;7753:152;7966:2;8007:49;8052:3;8043:6;8032:9;8028:22;8007:49;:::i;:::-;8000:4;7993:5;7989:16;7982:75;7915:153;8132:3;8174:49;8219:3;8210:6;8199:9;8195:22;8174:49;:::i;:::-;8167:4;8160:5;8156:16;8149:75;8078:157;7175:1067;;;;:::o;8285:779::-;8404:5;8429:104;8445:87;8525:6;8445:87;:::i;:::-;8429:104;:::i;:::-;8420:113;;8553:5;8582:6;8575:5;8568:21;8616:4;8609:5;8605:16;8598:23;;8669:4;8661:6;8657:17;8649:6;8645:30;8698:3;8690:6;8687:15;8684:122;;;8717:79;;:::i;:::-;8684:122;8832:6;8815:243;8849:6;8844:3;8841:15;8815:243;;;8924:3;8953:60;9009:3;8997:10;8953:60;:::i;:::-;8948:3;8941:73;9043:4;9038:3;9034:14;9027:21;;8891:167;8875:4;8870:3;8866:14;8859:21;;8815:243;;;8819:21;8410:654;;8285:779;;;;;:::o;9107:416::-;9201:5;9250:3;9243:4;9235:6;9231:17;9227:27;9217:122;;9258:79;;:::i;:::-;9217:122;9375:6;9362:20;9400:117;9513:3;9505:6;9498:4;9490:6;9486:17;9400:117;:::i;:::-;9391:126;;9207:316;9107:416;;;;:::o;9529:730::-;9645:6;9653;9702:2;9690:9;9681:7;9677:23;9673:32;9670:119;;;9708:79;;:::i;:::-;9670:119;9828:1;9853:53;9898:7;9889:6;9878:9;9874:22;9853:53;:::i;:::-;9843:63;;9799:117;9983:2;9972:9;9968:18;9955:32;10014:18;10006:6;10003:30;10000:117;;;10036:79;;:::i;:::-;10000:117;10141:101;10234:7;10225:6;10214:9;10210:22;10141:101;:::i;:::-;10131:111;;9926:326;9529:730;;;;;:::o;10265:911::-;10360:6;10368;10376;10384;10392;10441:3;10429:9;10420:7;10416:23;10412:33;10409:120;;;10448:79;;:::i;:::-;10409:120;10568:1;10593:53;10638:7;10629:6;10618:9;10614:22;10593:53;:::i;:::-;10583:63;;10539:117;10695:2;10721:53;10766:7;10757:6;10746:9;10742:22;10721:53;:::i;:::-;10711:63;;10666:118;10823:2;10849:53;10894:7;10885:6;10874:9;10870:22;10849:53;:::i;:::-;10839:63;;10794:118;10951:2;10977:53;11022:7;11013:6;11002:9;10998:22;10977:53;:::i;:::-;10967:63;;10922:118;11079:3;11106:53;11151:7;11142:6;11131:9;11127:22;11106:53;:::i;:::-;11096:63;;11050:119;10265:911;;;;;;;;:::o;11182:118::-;11269:24;11287:5;11269:24;:::i;:::-;11264:3;11257:37;11182:118;;:::o;11306:222::-;11399:4;11437:2;11426:9;11422:18;11414:26;;11450:71;11518:1;11507:9;11503:17;11494:6;11450:71;:::i;:::-;11306:222;;;;:::o;11534:474::-;11602:6;11610;11659:2;11647:9;11638:7;11634:23;11630:32;11627:119;;;11665:79;;:::i;:::-;11627:119;11785:1;11810:53;11855:7;11846:6;11835:9;11831:22;11810:53;:::i;:::-;11800:63;;11756:117;11912:2;11938:53;11983:7;11974:6;11963:9;11959:22;11938:53;:::i;:::-;11928:63;;11883:118;11534:474;;;;;:::o;12014:118::-;12101:24;12119:5;12101:24;:::i;:::-;12096:3;12089:37;12014:118;;:::o;12138:664::-;12343:4;12381:3;12370:9;12366:19;12358:27;;12395:71;12463:1;12452:9;12448:17;12439:6;12395:71;:::i;:::-;12476:72;12544:2;12533:9;12529:18;12520:6;12476:72;:::i;:::-;12558;12626:2;12615:9;12611:18;12602:6;12558:72;:::i;:::-;12640;12708:2;12697:9;12693:18;12684:6;12640:72;:::i;:::-;12722:73;12790:3;12779:9;12775:19;12766:6;12722:73;:::i;:::-;12138:664;;;;;;;;:::o;12808:118::-;12845:7;12885:34;12878:5;12874:46;12863:57;;12808:118;;;:::o;12932:122::-;13005:24;13023:5;13005:24;:::i;:::-;12998:5;12995:35;12985:63;;13044:1;13041;13034:12;12985:63;12932:122;:::o;13060:139::-;13106:5;13144:6;13131:20;13122:29;;13160:33;13187:5;13160:33;:::i;:::-;13060:139;;;;:::o;13205:474::-;13273:6;13281;13330:2;13318:9;13309:7;13305:23;13301:32;13298:119;;;13336:79;;:::i;:::-;13298:119;13456:1;13481:53;13526:7;13517:6;13506:9;13502:22;13481:53;:::i;:::-;13471:63;;13427:117;13583:2;13609:53;13654:7;13645:6;13634:9;13630:22;13609:53;:::i;:::-;13599:63;;13554:118;13205:474;;;;;:::o;13685:222::-;13778:4;13816:2;13805:9;13801:18;13793:26;;13829:71;13897:1;13886:9;13882:17;13873:6;13829:71;:::i;:::-;13685:222;;;;:::o;13913:117::-;14022:1;14019;14012:12;14036:307;14097:4;14187:18;14179:6;14176:30;14173:56;;;14209:18;;:::i;:::-;14173:56;14247:29;14269:6;14247:29;:::i;:::-;14239:37;;14331:4;14325;14321:15;14313:23;;14036:307;;;:::o;14349:146::-;14446:6;14441:3;14436;14423:30;14487:1;14478:6;14473:3;14469:16;14462:27;14349:146;;;:::o;14501:423::-;14578:5;14603:65;14619:48;14660:6;14619:48;:::i;:::-;14603:65;:::i;:::-;14594:74;;14691:6;14684:5;14677:21;14729:4;14722:5;14718:16;14767:3;14758:6;14753:3;14749:16;14746:25;14743:112;;;14774:79;;:::i;:::-;14743:112;14864:54;14911:6;14906:3;14901;14864:54;:::i;:::-;14584:340;14501:423;;;;;:::o;14943:338::-;14998:5;15047:3;15040:4;15032:6;15028:17;15024:27;15014:122;;15055:79;;:::i;:::-;15014:122;15172:6;15159:20;15197:78;15271:3;15263:6;15256:4;15248:6;15244:17;15197:78;:::i;:::-;15188:87;;15004:277;14943:338;;;;:::o;15287:652::-;15364:6;15372;15421:2;15409:9;15400:7;15396:23;15392:32;15389:119;;;15427:79;;:::i;:::-;15389:119;15547:1;15572:53;15617:7;15608:6;15597:9;15593:22;15572:53;:::i;:::-;15562:63;;15518:117;15702:2;15691:9;15687:18;15674:32;15733:18;15725:6;15722:30;15719:117;;;15755:79;;:::i;:::-;15719:117;15860:62;15914:7;15905:6;15894:9;15890:22;15860:62;:::i;:::-;15850:72;;15645:287;15287:652;;;;;:::o;15945:77::-;15982:7;16011:5;16000:16;;15945:77;;;:::o;16028:118::-;16115:24;16133:5;16115:24;:::i;:::-;16110:3;16103:37;16028:118;;:::o;16152:222::-;16245:4;16283:2;16272:9;16268:18;16260:26;;16296:71;16364:1;16353:9;16349:17;16340:6;16296:71;:::i;:::-;16152:222;;;;:::o;16380:99::-;16432:6;16466:5;16460:12;16450:22;;16380:99;;;:::o;16485:169::-;16569:11;16603:6;16598:3;16591:19;16643:4;16638:3;16634:14;16619:29;;16485:169;;;;:::o;16660:246::-;16741:1;16751:113;16765:6;16762:1;16759:13;16751:113;;;16850:1;16845:3;16841:11;16835:18;16831:1;16826:3;16822:11;16815:39;16787:2;16784:1;16780:10;16775:15;;16751:113;;;16898:1;16889:6;16884:3;16880:16;16873:27;16722:184;16660:246;;;:::o;16912:377::-;17000:3;17028:39;17061:5;17028:39;:::i;:::-;17083:71;17147:6;17142:3;17083:71;:::i;:::-;17076:78;;17163:65;17221:6;17216:3;17209:4;17202:5;17198:16;17163:65;:::i;:::-;17253:29;17275:6;17253:29;:::i;:::-;17248:3;17244:39;17237:46;;17004:285;16912:377;;;;:::o;17295:313::-;17408:4;17446:2;17435:9;17431:18;17423:26;;17495:9;17489:4;17485:20;17481:1;17470:9;17466:17;17459:47;17523:78;17596:4;17587:6;17523:78;:::i;:::-;17515:86;;17295:313;;;;:::o;17614:90::-;17648:7;17691:5;17684:13;17677:21;17666:32;;17614:90;;;:::o;17710:109::-;17791:21;17806:5;17791:21;:::i;:::-;17786:3;17779:34;17710:109;;:::o;17825:210::-;17912:4;17950:2;17939:9;17935:18;17927:26;;17963:65;18025:1;18014:9;18010:17;18001:6;17963:65;:::i;:::-;17825:210;;;;:::o;18041:89::-;18077:7;18117:6;18110:5;18106:18;18095:29;;18041:89;;;:::o;18136:115::-;18221:23;18238:5;18221:23;:::i;:::-;18216:3;18209:36;18136:115;;:::o;18257:218::-;18348:4;18386:2;18375:9;18371:18;18363:26;;18399:69;18465:1;18454:9;18450:17;18441:6;18399:69;:::i;:::-;18257:218;;;;:::o;18481:619::-;18558:6;18566;18574;18623:2;18611:9;18602:7;18598:23;18594:32;18591:119;;;18629:79;;:::i;:::-;18591:119;18749:1;18774:53;18819:7;18810:6;18799:9;18795:22;18774:53;:::i;:::-;18764:63;;18720:117;18876:2;18902:53;18947:7;18938:6;18927:9;18923:22;18902:53;:::i;:::-;18892:63;;18847:118;19004:2;19030:53;19075:7;19066:6;19055:9;19051:22;19030:53;:::i;:::-;19020:63;;18975:118;18481:619;;;;;:::o;19106:180::-;19154:77;19151:1;19144:88;19251:4;19248:1;19241:15;19275:4;19272:1;19265:15;19292:442;19441:4;19479:2;19468:9;19464:18;19456:26;;19492:71;19560:1;19549:9;19545:17;19536:6;19492:71;:::i;:::-;19573:72;19641:2;19630:9;19626:18;19617:6;19573:72;:::i;:::-;19655;19723:2;19712:9;19708:18;19699:6;19655:72;:::i;:::-;19292:442;;;;;;:::o;19740:170::-;19880:22;19876:1;19868:6;19864:14;19857:46;19740:170;:::o;19916:366::-;20058:3;20079:67;20143:2;20138:3;20079:67;:::i;:::-;20072:74;;20155:93;20244:3;20155:93;:::i;:::-;20273:2;20268:3;20264:12;20257:19;;19916:366;;;:::o;20288:419::-;20454:4;20492:2;20481:9;20477:18;20469:26;;20541:9;20535:4;20531:20;20527:1;20516:9;20512:17;20505:47;20569:131;20695:4;20569:131;:::i;:::-;20561:139;;20288:419;;;:::o;20713:180::-;20761:77;20758:1;20751:88;20858:4;20855:1;20848:15;20882:4;20879:1;20872:15;20899:191;20939:3;20958:20;20976:1;20958:20;:::i;:::-;20953:25;;20992:20;21010:1;20992:20;:::i;:::-;20987:25;;21035:1;21032;21028:9;21021:16;;21056:3;21053:1;21050:10;21047:36;;;21063:18;;:::i;:::-;21047:36;20899:191;;;;:::o;21096:167::-;21236:19;21232:1;21224:6;21220:14;21213:43;21096:167;:::o;21269:366::-;21411:3;21432:67;21496:2;21491:3;21432:67;:::i;:::-;21425:74;;21508:93;21597:3;21508:93;:::i;:::-;21626:2;21621:3;21617:12;21610:19;;21269:366;;;:::o;21641:419::-;21807:4;21845:2;21834:9;21830:18;21822:26;;21894:9;21888:4;21884:20;21880:1;21869:9;21865:17;21858:47;21922:131;22048:4;21922:131;:::i;:::-;21914:139;;21641:419;;;:::o;22066:85::-;22111:7;22140:5;22129:16;;22066:85;;;:::o;22157:101::-;22193:7;22233:18;22226:5;22222:30;22211:41;;22157:101;;;:::o;22264:60::-;22292:3;22313:5;22306:12;;22264:60;;;:::o;22330:156::-;22387:9;22420:60;22437:42;22446:32;22472:5;22446:32;:::i;:::-;22437:42;:::i;:::-;22420:60;:::i;:::-;22407:73;;22330:156;;;:::o;22492:145::-;22586:44;22624:5;22586:44;:::i;:::-;22581:3;22574:57;22492:145;;:::o;22643:236::-;22743:4;22781:2;22770:9;22766:18;22758:26;;22794:78;22869:1;22858:9;22854:17;22845:6;22794:78;:::i;:::-;22643:236;;;;:::o;22885:122::-;22958:24;22976:5;22958:24;:::i;:::-;22951:5;22948:35;22938:63;;22997:1;22994;22987:12;22938:63;22885:122;:::o;23013:143::-;23070:5;23101:6;23095:13;23086:22;;23117:33;23144:5;23117:33;:::i;:::-;23013:143;;;;:::o;23162:351::-;23232:6;23281:2;23269:9;23260:7;23256:23;23252:32;23249:119;;;23287:79;;:::i;:::-;23249:119;23407:1;23432:64;23488:7;23479:6;23468:9;23464:22;23432:64;:::i;:::-;23422:74;;23378:128;23162:351;;;;:::o;23519:332::-;23640:4;23678:2;23667:9;23663:18;23655:26;;23691:71;23759:1;23748:9;23744:17;23735:6;23691:71;:::i;:::-;23772:72;23840:2;23829:9;23825:18;23816:6;23772:72;:::i;:::-;23519:332;;;;;:::o;23857:442::-;24006:4;24044:2;24033:9;24029:18;24021:26;;24057:71;24125:1;24114:9;24110:17;24101:6;24057:71;:::i;:::-;24138:72;24206:2;24195:9;24191:18;24182:6;24138:72;:::i;:::-;24220;24288:2;24277:9;24273:18;24264:6;24220:72;:::i;:::-;23857:442;;;;;;:::o;24305:98::-;24356:6;24390:5;24384:12;24374:22;;24305:98;;;:::o;24409:147::-;24510:11;24547:3;24532:18;;24409:147;;;;:::o;24562:386::-;24666:3;24694:38;24726:5;24694:38;:::i;:::-;24748:88;24829:6;24824:3;24748:88;:::i;:::-;24741:95;;24845:65;24903:6;24898:3;24891:4;24884:5;24880:16;24845:65;:::i;:::-;24935:6;24930:3;24926:16;24919:23;;24670:278;24562:386;;;;:::o;24954:271::-;25084:3;25106:93;25195:3;25186:6;25106:93;:::i;:::-;25099:100;;25216:3;25209:10;;24954:271;;;;:::o;25231:114::-;;:::o;25351:398::-;25510:3;25531:83;25612:1;25607:3;25531:83;:::i;:::-;25524:90;;25623:93;25712:3;25623:93;:::i;:::-;25741:1;25736:3;25732:11;25725:18;;25351:398;;;:::o;25755:379::-;25939:3;25961:147;26104:3;25961:147;:::i;:::-;25954:154;;26125:3;26118:10;;25755:379;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "2991600",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "Cancells(address,uint128)": "3123",
              "Stakes(address,uint256)": "infinite",
              "UPGRADE_INTERFACE_VERSION()": "infinite",
              "__migrate_StakeCancelled(address,uint256,address,uint256,uint256)": "infinite",
              "__migrate_StakeClaimed(address,uint256,address,uint256,uint256)": "infinite",
              "__migrate_StakeCreated(address,uint256,address,uint256,uint256)": "infinite",
              "__migrate_stakes(address,(uint256,address,address,uint256,uint256)[])": "infinite",
              "cancel(address,uint128)": "infinite",
              "claim(address,uint128)": "infinite",
              "create(address,address,uint256)": "infinite",
              "exists(address,uint128)": "5327",
              "expiration(address,uint128)": "3178",
              "getAgent()": "2610",
              "getVerifier()": "2612",
              "initialize(address)": "infinite",
              "length(address)": "2961",
              "owner()": "2621",
              "proxiableUUID()": "infinite",
              "renounceOwnership()": "infinite",
              "setAgent(address)": "27003",
              "setLocking(uint256)": "infinite",
              "setVerifier(address)": "26978",
              "stakes(address)": "infinite",
              "status(address,uint128)": "7610",
              "transferOwnership(address)": "infinite",
              "upgradeToAndCall(address,bytes)": "infinite"
            },
            "internal": {
              "_authorizeUpgrade(address)": "infinite"
            }
          },
          "methodIdentifiers": {
            "Cancells(address,uint128)": "a7ff9d0f",
            "Stakes(address,uint256)": "35de3234",
            "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
            "__migrate_StakeCancelled(address,uint256,address,uint256,uint256)": "29898059",
            "__migrate_StakeClaimed(address,uint256,address,uint256,uint256)": "2e15ed84",
            "__migrate_StakeCreated(address,uint256,address,uint256,uint256)": "dc170e9e",
            "__migrate_stakes(address,(uint256,address,address,uint256,uint256)[])": "220dedf1",
            "cancel(address,uint128)": "881c5be6",
            "claim(address,uint128)": "c13f4af7",
            "create(address,address,uint256)": "ffe5725f",
            "exists(address,uint128)": "e02546b2",
            "expiration(address,uint128)": "396f54ba",
            "getAgent()": "f551eb19",
            "getVerifier()": "46657fe9",
            "initialize(address)": "c4d66de8",
            "length(address)": "2c566ae5",
            "owner()": "8da5cb5b",
            "proxiableUUID()": "52d1902d",
            "renounceOwnership()": "715018a6",
            "setAgent(address)": "bcf685ed",
            "setLocking(uint256)": "1d051e3d",
            "setVerifier(address)": "5437988d",
            "stakes(address)": "16934fc4",
            "status(address,uint128)": "e316b823",
            "transferOwnership(address)": "f2fde38b",
            "upgradeToAndCall(address,bytes)": "4f1ef286"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeAmountEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeCancelEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeCancelUnexpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakeEmpty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"StakeCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"StakeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"StakeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"Cancells\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"__migrate_StakeCancelled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"__migrate_StakeClaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"__migrate_StakeCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct DoitRingStaked.Stake[]\",\"name\":\"stakes_\",\"type\":\"tuple[]\"}],\"name\":\"__migrate_stakes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setLocking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct DoitRingStaked.Stake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"index\",\"type\":\"uint128\"}],\"name\":\"status\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DoitRingStaked.sol\":\"DoitRingStaked\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/DoitRingStaked.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\n\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\n\\r\\ncontract DoitRingStaked is VerifiableUpgradeable, ProxyForwardUpgradeable, BidirectionalTransfer, UUPSUpgradeable, OwnableUpgradeable {\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  uint256 locking;\\r\\n  mapping(address => Stake[]) public Stakes;\\r\\n  mapping(address => mapping(uint128 => uint256)) public Cancells;\\r\\n\\r\\n  error StakeEmpty();\\r\\n  error StakeAmountEmpty();\\r\\n  error StakeCancelEmpty();\\r\\n  error StakeCancelUnexpired();\\r\\n  \\r\\n  event StakeCreated(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeCancelled(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeClaimed(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  struct Stake {\\r\\n    uint index;\\r\\n    address staker;\\r\\n    address token;\\r\\n    uint amount;\\r\\n    uint timestamp;\\r\\n  }\\r\\n\\r\\n  function initialize(address _owner) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __UUPSUpgradeable_init();\\r\\n    locking = 30 * 86400;\\r\\n  }\\r\\n\\r\\n  function create(address sender, address token, uint amount) public proxy(sender) {\\r\\n    if (amount == 0)\\r\\n      revert StakeAmountEmpty();\\r\\n\\r\\n    uint index = Stakes[sender].length;\\r\\n\\r\\n    Stake memory stake = Stake(index, sender, token, amount, block.timestamp);\\r\\n    Stakes[sender].push(stake);\\r\\n\\r\\n    transfer(sender, address(this), token, amount);\\r\\n\\r\\n    emit StakeCreated(\\r\\n      sender,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function cancel(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n\\r\\n    Cancells[sender][index] = block.timestamp + locking;\\r\\n\\r\\n    emit StakeCancelled(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function claim(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n    if (Cancells[sender][index] == 0)\\r\\n      revert StakeCancelEmpty();\\r\\n    if (Cancells[sender][index] > block.timestamp)\\r\\n      revert StakeCancelUnexpired();\\r\\n\\r\\n    transfer(\\r\\n      address(this),\\r\\n      sender,\\r\\n      Stakes[sender][index].token,\\r\\n      Stakes[sender][index].amount\\r\\n    );\\r\\n\\r\\n   emit StakeClaimed(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount, \\r\\n      block.timestamp\\r\\n    );\\r\\n\\r\\n    delete Stakes[sender][index];\\r\\n    delete Cancells[sender][index];\\r\\n  }\\r\\n\\r\\n  function stakes(address owner) public view returns(Stake[] memory) {\\r\\n    return Stakes[owner];\\r\\n  }\\r\\n\\r\\n  function status(address owner, uint128 index) public view returns(uint16) {\\r\\n    if (Cancells[owner][index] != 0) {\\r\\n      if (Cancells[owner][index] > block.timestamp)\\r\\n        return 3;\\r\\n      else\\r\\n        return 2;\\r\\n    }\\r\\n    if (Stakes[owner][index].amount != 0)\\r\\n      return 1;\\r\\n    else\\r\\n      return 0;\\r\\n  }\\r\\n\\r\\n  function length(address owner) public view returns(uint256) {\\r\\n   return Stakes[owner].length;\\r\\n  }\\r\\n\\r\\n  function expiration(address owner, uint128 index) public view returns(uint256) {\\r\\n    return Cancells[owner][index];\\r\\n  }\\r\\n\\r\\n  function exists(address owner, uint128 index) public view returns(bool) {\\r\\n    return Stakes[owner][index].amount != 0;\\r\\n  }\\r\\n\\r\\n  function setLocking(uint256 duration) public onlyOwner() {\\r\\n    locking = duration;\\r\\n  }\\r\\n\\r\\n  function __migrate_stakes(address owner, Stake[] memory stakes_) public onlyOwner() {\\r\\n    delete Stakes[owner];\\r\\n    for (uint256 index = 0; index < stakes_.length; index++) {\\r\\n      Stakes[owner].push(stakes_[index]);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  function __migrate_StakeCreated(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCreated(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeCancelled(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCancelled(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeClaimed(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeClaimed(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n}\",\"keccak256\":\"0x7893b19a245455704d4cf6af7c2746d5b4b3852abd7ae2b9eca50622358bb1d3\",\"license\":\"MIT\"},\"contracts/utils/BidirectionalTransfer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\ncontract BidirectionalTransfer {\\r\\n  error TransferFailed();\\r\\n  error TransferUnauthorized();\\r\\n\\r\\n  receive() external payable {}\\r\\n\\r\\n  function erc20Transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    bytes memory data;\\r\\n    if (from == address(this)) {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transfer(address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, to, amount);\\r\\n    } else {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, from, to, amount);\\r\\n    }\\r\\n    (bool sent,) = token.call(data);\\r\\n    if (!sent)\\r\\n     revert TransferFailed();\\r\\n  }\\r\\n  \\r\\n  function etherTransfer(address from, address to, uint256 amount) internal {\\r\\n    if (from == address(this)) {\\r\\n      (bool sent, ) = to.call{ value: amount }(\\\"\\\");\\r\\n      if (!sent)\\r\\n        revert TransferFailed();\\r\\n    } else {\\r\\n      if (from != msg.sender)\\r\\n        revert TransferUnauthorized();\\r\\n      if (msg.value != amount)\\r\\n        revert TransferFailed();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    if (token != address(0))\\r\\n      erc20Transfer(from, to, token, amount);\\r\\n    else\\r\\n      etherTransfer(from, to, amount);\\r\\n  }\\r\\n}\",\"keccak256\":\"0x3ce3b2c15946da54989308eafb84916a192a2add66966732d52e757ba0d13c68\",\"license\":\"MIT\"},\"contracts/utils/ProxyForwardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract ProxyForwardUpgradeable is Initializable {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n\\r\\n  function __Proxyed_init(address initialAgent) internal onlyInitializing {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x66a1d950b88b9506ad6c17883de680adf90c259369c99e7b0860f85a6d00e703\",\"license\":\"MIT\"},\"contracts/utils/VerifiableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract VerifiableUpgradeable is Initializable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n\\r\\n  function __Verifie_init(address initialVerifier) internal onlyInitializing {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x95b6a582524c3ea922cf904d24a6bba25cd2fb8ed9ecf76157a7b7af86277e85\",\"license\":\"MIT\"}},\"version\":1}",
        "storageLayout": {
          "storage": [
            {
              "astId": 9236,
              "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
              "label": "verifier",
              "offset": 0,
              "slot": "0",
              "type": "t_address"
            },
            {
              "astId": 9060,
              "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
              "label": "agent",
              "offset": 0,
              "slot": "1",
              "type": "t_address"
            },
            {
              "astId": 7549,
              "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
              "label": "locking",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            },
            {
              "astId": 7555,
              "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
              "label": "Stakes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_struct(Stake)7616_storage)dyn_storage)"
            },
            {
              "astId": 7561,
              "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
              "label": "Cancells",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint128,t_uint256))"
            }
          ],
          "types": {
            "t_address": {
              "encoding": "inplace",
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Stake)7616_storage)dyn_storage": {
              "base": "t_struct(Stake)7616_storage",
              "encoding": "dynamic_array",
              "label": "struct DoitRingStaked.Stake[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Stake)7616_storage)dyn_storage)": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => struct DoitRingStaked.Stake[])",
              "numberOfBytes": "32",
              "value": "t_array(t_struct(Stake)7616_storage)dyn_storage"
            },
            "t_mapping(t_address,t_mapping(t_uint128,t_uint256))": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => mapping(uint128 => uint256))",
              "numberOfBytes": "32",
              "value": "t_mapping(t_uint128,t_uint256)"
            },
            "t_mapping(t_uint128,t_uint256)": {
              "encoding": "mapping",
              "key": "t_uint128",
              "label": "mapping(uint128 => uint256)",
              "numberOfBytes": "32",
              "value": "t_uint256"
            },
            "t_struct(Stake)7616_storage": {
              "encoding": "inplace",
              "label": "struct DoitRingStaked.Stake",
              "members": [
                {
                  "astId": 7607,
                  "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
                  "label": "index",
                  "offset": 0,
                  "slot": "0",
                  "type": "t_uint256"
                },
                {
                  "astId": 7609,
                  "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
                  "label": "staker",
                  "offset": 0,
                  "slot": "1",
                  "type": "t_address"
                },
                {
                  "astId": 7611,
                  "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
                  "label": "token",
                  "offset": 0,
                  "slot": "2",
                  "type": "t_address"
                },
                {
                  "astId": 7613,
                  "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
                  "label": "amount",
                  "offset": 0,
                  "slot": "3",
                  "type": "t_uint256"
                },
                {
                  "astId": 7615,
                  "contract": "contracts/DoitRingStaked.sol:DoitRingStaked",
                  "label": "timestamp",
                  "offset": 0,
                  "slot": "4",
                  "type": "t_uint256"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint128": {
              "encoding": "inplace",
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "encoding": "inplace",
              "label": "uint256",
              "numberOfBytes": "32"
            }
          }
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        },
        "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {ERC165Upgradeable} from \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport {IERC721Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\\n    struct ERC721Storage {\\n        // Token name\\n        string _name;\\n\\n        // Token symbol\\n        string _symbol;\\n\\n        mapping(uint256 tokenId => address) _owners;\\n\\n        mapping(address owner => uint256) _balances;\\n\\n        mapping(uint256 tokenId => address) _tokenApprovals;\\n\\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\\n\\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\\n        assembly {\\n            $.slot := ERC721StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC721_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return $._balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        unchecked {\\n            $._balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                $._balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                $._balances[to] += 1;\\n            }\\n        }\\n\\n        $._owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        $._tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        $._operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721Upgradeable} from \\\"../ERC721Upgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"@openzeppelin/contracts/interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorageUpgradeable is Initializable, IERC4906, ERC721Upgradeable {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage\\n    struct ERC721URIStorageStorage {\\n        // Optional mapping for token URIs\\n        mapping(uint256 tokenId => string) _tokenURIs;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721URIStorage\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721URIStorageStorageLocation = 0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900;\\n\\n    function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {\\n        assembly {\\n            $.slot := ERC721URIStorageStorageLocation\\n        }\\n    }\\n\\n    function __ERC721URIStorage_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC721URIStorage_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = $._tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        $._tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC4906.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/ERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Address.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/Math.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/SignedMath.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\"\n    },\n    \"contracts/DoitRingDevice.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\n\\r\\ncontract DoitRingDevice is ProxyForwardUpgradeable, VerifiableUpgradeable, BidirectionalTransfer, UUPSUpgradeable, OwnableUpgradeable {\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  struct DeviceMapping {\\r\\n    uint256 timestamp;\\r\\n    int256 height;\\r\\n    string sncode;\\r\\n  }\\r\\n\\r\\n  struct TokenMapping {\\r\\n    address token;\\r\\n    uint256 tokenId;\\r\\n  }\\r\\n\\r\\n  struct Reward {\\r\\n    address token;\\r\\n    uint256 amount;\\r\\n  }\\r\\n\\r\\n  mapping(address => string) private AddressMapDevice;\\r\\n  mapping(string => TokenMapping) private DeviceMapToken;\\r\\n  mapping(address => mapping(uint256 => DeviceMapping)) private TokenMapDevice;\\r\\n\\r\\n  mapping(string => bool) private ClaimIDsMapClaimed;\\r\\n\\r\\n  error DeviceRegistered();\\r\\n  error DeviceUnregistered();\\r\\n  error DeviceEmpty();\\r\\n  error ClaimInvalidClaimed();\\r\\n  error ERC721IncorrectOwner();\\r\\n\\r\\n  event Claimed(\\r\\n    address indexed token,\\r\\n    uint256 indexed tokenId,\\r\\n    string uid,\\r\\n    string sncode,\\r\\n    address to,\\r\\n    Reward[] rewards,\\r\\n    string memo,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  event Registered(\\r\\n    address indexed token,\\r\\n    uint256 indexed tokenId,\\r\\n    address indexed sender,\\r\\n    string sncode,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  event Binded(\\r\\n    address indexed owner,\\r\\n    string sncode,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n\\r\\n  function initialize(address _owner, address _verifier) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __Verifie_init(_verifier);\\r\\n    __UUPSUpgradeable_init();\\r\\n  }\\r\\n\\r\\n  function register(address sender, address token, uint256 tokenId, string memory sncode) public proxy(sender) {\\r\\n    if (IERC721(token).ownerOf(tokenId) != sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n    if (bytes(sncode).length == 0)\\r\\n      revert DeviceEmpty();\\r\\n    if (DeviceMapToken[sncode].token != address(0))\\r\\n      revert DeviceRegistered();\\r\\n\\r\\n    TokenMapDevice[token][tokenId] = DeviceMapping(block.timestamp, int(block.number), sncode);\\r\\n    DeviceMapToken[sncode] = TokenMapping(token, tokenId);\\r\\n    \\r\\n    emit Registered(\\r\\n      token,\\r\\n      tokenId,\\r\\n      sender,\\r\\n      sncode, \\r\\n      int(block.number), \\r\\n      block.timestamp\\r\\n    );\\r\\n\\r\\n    AddressMapDevice[sender] = sncode;\\r\\n\\r\\n    emit Binded(sender, sncode, int(block.number), block.timestamp);\\r\\n  }\\r\\n\\r\\n  function rebind(address sender, string memory sncode) public proxy(sender) {\\r\\n    if (bytes(sncode).length == 0)\\r\\n      revert DeviceEmpty();\\r\\n    if (DeviceMapToken[sncode].token == address(0))\\r\\n      revert DeviceUnregistered();\\r\\n    if (IERC721(DeviceMapToken[sncode].token)\\r\\n       .ownerOf(DeviceMapToken[sncode].tokenId) != msg.sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n\\r\\n    AddressMapDevice[msg.sender] = sncode;\\r\\n\\r\\n    emit Binded(msg.sender, sncode, int(block.number), block.timestamp);\\r\\n  }\\r\\n\\r\\n  function claim(\\r\\n    address sender,\\r\\n    string memory uid,\\r\\n    string memory sncode,\\r\\n    Reward[] memory rewards,\\r\\n    bytes memory signature, \\r\\n    string memory memo\\r\\n  ) public proxy(sender) {\\r\\n    TokenMapping memory tmapping = DeviceMapToken[sncode];\\r\\n    if (tmapping.token == address(0))\\r\\n      revert DeviceUnregistered();\\r\\n    if (IERC721(tmapping.token).ownerOf(tmapping.tokenId) != sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n    if (ClaimIDsMapClaimed[uid])\\r\\n      revert ClaimInvalidClaimed();\\r\\n\\r\\n    bytes32 rewardsHash = keccak256(abi.encode(rewards));\\r\\n    verify(abi.encodePacked(uid, sender, sncode, rewardsHash), signature);\\r\\n\\r\\n    ClaimIDsMapClaimed[uid] = true;\\r\\n\\r\\n    for (uint256 i = 0; i < rewards.length; i++) {\\r\\n      if (rewards[i].amount > 0)\\r\\n        transfer(\\r\\n          address(this),\\r\\n          sender,\\r\\n          rewards[i].token, \\r\\n          rewards[i].amount\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    emit Claimed(\\r\\n      tmapping.token,\\r\\n      tmapping.tokenId, \\r\\n      uid,\\r\\n      sncode,\\r\\n      sender, \\r\\n      rewards,\\r\\n      memo,\\r\\n      int(block.number),\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function getTokenInAddress(address user) public view returns (TokenMapping memory) {\\r\\n    return DeviceMapToken[AddressMapDevice[user]];\\r\\n  }\\r\\n\\r\\n  function getTokenInDevice(string memory sncode) public view returns (TokenMapping memory) {\\r\\n    return DeviceMapToken[sncode];\\r\\n  }\\r\\n\\r\\n  function getDeviceInToken(address token, uint256 tokenId) public view returns (DeviceMapping memory) {\\r\\n    return TokenMapDevice[token][tokenId];\\r\\n  }\\r\\n\\r\\n  function getDeviceInAddress(address user)  public view returns (string memory) {\\r\\n    return AddressMapDevice[user];\\r\\n  }\\r\\n  \\r\\n  function existsBinded(address token, uint256 tokenId) public view returns (bool) {\\r\\n    return bytes(getDeviceInToken(token, tokenId).sncode).length != 0;\\r\\n  }\\r\\n\\r\\n  function withdraw(address token, uint256 amount) public onlyOwner() {\\r\\n    transfer(address(this), msg.sender, token, amount);\\r\\n  }\\r\\n\\r\\n  function __migrate_Claimed(\\r\\n    address token, uint256 tokenId, string memory uid, string memory sncode,\\r\\n    address to, Reward[] memory rewards, string memory memo,\\r\\n    int256 blockHeight, uint256 timestamp\\r\\n  ) public onlyOwner {\\r\\n    ClaimIDsMapClaimed [uid] = true;\\r\\n    emit Claimed(\\r\\n      token,\\r\\n      tokenId,\\r\\n      uid,\\r\\n      sncode,\\r\\n      to,\\r\\n      rewards,\\r\\n      memo,\\r\\n      blockHeight,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_Registered(\\r\\n    address token, uint256 tokenId, address sender,\\r\\n    string memory sncode, int256 blockHeight, uint256 timestamp\\r\\n  ) public onlyOwner {\\r\\n    TokenMapDevice[token][tokenId] = DeviceMapping(timestamp, blockHeight, sncode);\\r\\n    DeviceMapToken[sncode] = TokenMapping(token, tokenId);\\r\\n    AddressMapDevice[sender] = sncode;\\r\\n    emit Registered(\\r\\n      token,\\r\\n      tokenId,\\r\\n      sender,\\r\\n      sncode,\\r\\n      blockHeight,\\r\\n      timestamp\\r\\n    );\\r\\n    emit Binded(sender, sncode, blockHeight, timestamp);\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/DoitRingFriend.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\\\";\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\n\\r\\ncontract DoitRingFriend is VerifiableUpgradeable, ProxyForwardUpgradeable, ERC721URIStorageUpgradeable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  uint256 private _tokenIds;\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  mapping(address => uint256) public userToGroup;\\r\\n\\r\\n  event GroupCreated(\\r\\n    address indexed creator,\\r\\n    uint256 group,\\r\\n    string tokenURI,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupJoined(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupLeaved(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  error UserAlreadyInGroup();\\r\\n  error UserNotInGroup();\\r\\n\\r\\n  function initialize(address _owner, address _verifier) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __Verifie_init(_verifier);\\r\\n    __UUPSUpgradeable_init();\\r\\n    _tokenIds = 1;\\r\\n  }\\r\\n\\r\\n  function create(address signer, string memory tokenURI, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, tokenURI), signature);\\r\\n\\r\\n    uint256 groupId = mint(signer, tokenURI);\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupCreated(signer, groupId, tokenURI, block.timestamp);\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function join(address signer, uint256 groupId, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, groupId), signature);\\r\\n    if (userToGroup[signer] != 0) {\\r\\n      revert UserAlreadyInGroup();\\r\\n    }\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function leave(address signer) public proxy(signer) {\\r\\n    if (userToGroup[signer] == 0) {\\r\\n      revert UserNotInGroup();\\r\\n    }\\r\\n\\r\\n    uint256 groupId = userToGroup[signer];\\r\\n    delete userToGroup[signer];\\r\\n    emit GroupLeaved(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function group(address user) public view returns(uint256) {\\r\\n    return userToGroup[user];\\r\\n  }\\r\\n\\r\\n  function mint(address user, string memory tokenURI) internal returns (uint256) {\\r\\n    uint256 newItemId = _tokenIds;\\r\\n    _safeMint(user, newItemId);\\r\\n    _setTokenURI(newItemId, tokenURI);\\r\\n    _tokenIds++;\\r\\n    return newItemId;\\r\\n  }\\r\\n  \\r\\n  function _baseURI() internal pure override returns (string memory) {\\r\\n    return \\\"https://gateway.pinata.cloud/ipfs/\\\";\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/DoitRingStaked.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\n\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\n\\r\\ncontract DoitRingStaked is VerifiableUpgradeable, ProxyForwardUpgradeable, BidirectionalTransfer, UUPSUpgradeable, OwnableUpgradeable {\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  uint256 locking;\\r\\n  mapping(address => Stake[]) public Stakes;\\r\\n  mapping(address => mapping(uint128 => uint256)) public Cancells;\\r\\n\\r\\n  error StakeEmpty();\\r\\n  error StakeAmountEmpty();\\r\\n  error StakeCancelEmpty();\\r\\n  error StakeCancelUnexpired();\\r\\n  \\r\\n  event StakeCreated(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeCancelled(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeClaimed(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  struct Stake {\\r\\n    uint index;\\r\\n    address staker;\\r\\n    address token;\\r\\n    uint amount;\\r\\n    uint timestamp;\\r\\n  }\\r\\n\\r\\n  function initialize(address _owner) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __UUPSUpgradeable_init();\\r\\n    locking = 30 * 86400;\\r\\n  }\\r\\n\\r\\n  function create(address sender, address token, uint amount) public proxy(sender) {\\r\\n    if (amount == 0)\\r\\n      revert StakeAmountEmpty();\\r\\n\\r\\n    uint index = Stakes[sender].length;\\r\\n\\r\\n    Stake memory stake = Stake(index, sender, token, amount, block.timestamp);\\r\\n    Stakes[sender].push(stake);\\r\\n\\r\\n    transfer(sender, address(this), token, amount);\\r\\n\\r\\n    emit StakeCreated(\\r\\n      sender,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function cancel(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n\\r\\n    Cancells[sender][index] = block.timestamp + locking;\\r\\n\\r\\n    emit StakeCancelled(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function claim(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n    if (Cancells[sender][index] == 0)\\r\\n      revert StakeCancelEmpty();\\r\\n    if (Cancells[sender][index] > block.timestamp)\\r\\n      revert StakeCancelUnexpired();\\r\\n\\r\\n    transfer(\\r\\n      address(this),\\r\\n      sender,\\r\\n      Stakes[sender][index].token,\\r\\n      Stakes[sender][index].amount\\r\\n    );\\r\\n\\r\\n   emit StakeClaimed(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount, \\r\\n      block.timestamp\\r\\n    );\\r\\n\\r\\n    delete Stakes[sender][index];\\r\\n    delete Cancells[sender][index];\\r\\n  }\\r\\n\\r\\n  function stakes(address owner) public view returns(Stake[] memory) {\\r\\n    return Stakes[owner];\\r\\n  }\\r\\n\\r\\n  function status(address owner, uint128 index) public view returns(uint16) {\\r\\n    if (Cancells[owner][index] != 0) {\\r\\n      if (Cancells[owner][index] > block.timestamp)\\r\\n        return 3;\\r\\n      else\\r\\n        return 2;\\r\\n    }\\r\\n    if (Stakes[owner][index].amount != 0)\\r\\n      return 1;\\r\\n    else\\r\\n      return 0;\\r\\n  }\\r\\n\\r\\n  function length(address owner) public view returns(uint256) {\\r\\n   return Stakes[owner].length;\\r\\n  }\\r\\n\\r\\n  function expiration(address owner, uint128 index) public view returns(uint256) {\\r\\n    return Cancells[owner][index];\\r\\n  }\\r\\n\\r\\n  function exists(address owner, uint128 index) public view returns(bool) {\\r\\n    return Stakes[owner][index].amount != 0;\\r\\n  }\\r\\n\\r\\n  function setLocking(uint256 duration) public onlyOwner() {\\r\\n    locking = duration;\\r\\n  }\\r\\n\\r\\n  function __migrate_stakes(address owner, Stake[] memory stakes_) public onlyOwner() {\\r\\n    delete Stakes[owner];\\r\\n    for (uint256 index = 0; index < stakes_.length; index++) {\\r\\n      Stakes[owner].push(stakes_[index]);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  function __migrate_StakeCreated(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCreated(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeCancelled(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCancelled(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeClaimed(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeClaimed(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/erc20/Health.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../utils/ProxyForward.sol\\\";\\r\\n\\r\\ncontract ERC20WithAgent is ERC20, ProxyForward, Ownable {\\r\\n    constructor(\\r\\n        address owner,\\r\\n        string memory name,\\r\\n        string memory symbol\\r\\n    ) ERC20(name, symbol) Ownable(owner) ProxyForward(owner) {\\r\\n        _mint(owner, 40000000 * 10 ** 18);\\r\\n    }\\r\\n\\r\\n    function mint(address account, uint256 amount) public onlyOwner {\\r\\n        _mint(account, amount);\\r\\n    }\\r\\n\\r\\n    function proxy_approve(\\r\\n        address signer,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) public proxy(signer) {\\r\\n        _approve(signer, spender, value);\\r\\n    }\\r\\n}\\r\\n\"\n    },\n    \"contracts/erc20/USDT.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract USDT is ERC20, Ownable {\\r\\n  constructor(address _owner) ERC20(\\\"USDT\\\", \\\"USDT\\\") Ownable(msg.sender) {\\r\\n    _mint(_owner, 40000000 * 10 ** 18);\\r\\n  }\\r\\n\\r\\n  function mint(address account,  uint256 amount) public onlyOwner {\\r\\n    _mint(account, amount);\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/erc721/DoitRingNFT.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../utils/ProxyForward.sol\\\";\\r\\n\\r\\ncontract DoitRingNFT is ERC721, ProxyForward, Ownable {\\r\\n  constructor(address _owner) ERC721(\\\"DoitRingNFT\\\", \\\"DoitRingNFT\\\") Ownable(_owner) ProxyForward(_owner) {\\r\\n    _tokenIdCounter = 1;\\r\\n    totalSupply = 1;\\r\\n  }\\r\\n\\r\\n  uint256 private _tokenIdCounter;\\r\\n  uint128 public totalSupply;\\r\\n\\r\\n  function mint(address signer) public proxy(signer) {\\r\\n    uint256 tokenId = _tokenIdCounter;\\r\\n    _safeMint(signer, tokenId);\\r\\n    _tokenIdCounter += 1;\\r\\n    totalSupply += 1;\\r\\n  }\\r\\n\\r\\n  function __migrate_mint(address signer, uint256 tokenId) public onlyOwner {\\r\\n    _safeMint(signer, tokenId);\\r\\n    _tokenIdCounter += 1;\\r\\n    totalSupply += 1;\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/interfaces/IStake.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\ninterface IStake {\\r\\n\\r\\n  event StakeCreated(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeCancelled(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeClaimed(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  struct Stake {\\r\\n    uint index;\\r\\n    address staker;\\r\\n    address token;\\r\\n    uint amount;\\r\\n    uint timestamp;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/Savings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\n\\r\\ncontract Savings is Initializable, BidirectionalTransfer, ProxyForwardUpgradeable, UUPSUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable  {\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n\\r\\n  event Deposited(\\r\\n    address indexed sender,\\r\\n    address indexed receiver,\\r\\n    address token,\\r\\n    uint256 amount,\\r\\n    string memo\\r\\n  );\\r\\n\\r\\n  event Withdrawn(\\r\\n    address indexed receiver,\\r\\n    address token,\\r\\n    uint256 amount\\r\\n  );\\r\\n\\r\\n  mapping(address => mapping(address => uint256)) Treasury; \\r\\n\\r\\n  function initialize(address _owner) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __UUPSUpgradeable_init();\\r\\n  }\\r\\n\\r\\n  function balanceOf(address owner, address token) public view returns(uint256) {\\r\\n    return Treasury[owner][token];\\r\\n  }\\r\\n\\r\\n  function deposit(address owner, address token, uint256 amount, string memory memo) external payable {\\r\\n    Treasury[owner][token] += amount;\\r\\n    transfer(msg.sender, address(this), token, amount);\\r\\n    emit Deposited(msg.sender, owner, token, amount, memo);\\r\\n  }\\r\\n\\r\\n  function withdraw(address owner, address token) external payable proxy(owner) {\\r\\n    transfer(address(this), owner, token, Treasury[owner][token]);\\r\\n    emit Withdrawn(owner, token, Treasury[owner][token]);\\r\\n    delete Treasury[owner][token];\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/Storage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\ncontract Storage is Initializable {\\r\\n  mapping(string => mapping(string => string)) private data;\\r\\n\\r\\n  event StorageUpdated (\\r\\n    address indexed sender,\\r\\n    string indexed storeIndexed,\\r\\n    string indexed keyIndexed,\\r\\n    string store,\\r\\n    string key,\\r\\n    string value\\r\\n  );\\r\\n\\r\\n  function initialize() public initializer {}\\r\\n\\r\\n  function setStorage(string memory store, string[][] memory pairs) public {\\r\\n    for (uint256 i = 0; i < pairs.length; i++)\\r\\n      setItem(store, pairs[i][0], pairs[i][1]);\\r\\n  }\\r\\n\\r\\n  function getStorage(\\r\\n    string memory store, string[] memory keys\\r\\n  ) public view returns (string[] memory, string[] memory) {\\r\\n    uint256 length = size(store, keys);\\r\\n\\r\\n    string[] memory _keys = new string[](length);\\r\\n    string[] memory values = new string[](length);\\r\\n\\r\\n    for (uint256 i = 0; i < keys.length; i++) {\\r\\n      if (bytes(data[store][keys[i]]).length == 0)\\r\\n        continue;\\r\\n      values[i] = data[store][keys[i]];\\r\\n      _keys[i] = keys[i];\\r\\n    }\\r\\n    \\r\\n    return (_keys, values);\\r\\n  }\\r\\n\\r\\n  function setItem(\\r\\n    string memory store,\\r\\n    string memory key,\\r\\n    string memory value\\r\\n  ) public {\\r\\n    data[store][key] = value;\\r\\n    emit StorageUpdated(\\r\\n      msg.sender,\\r\\n      store,\\r\\n      key,\\r\\n      store,\\r\\n      key,\\r\\n      value\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function getItem(\\r\\n    string memory store,\\r\\n    string memory key\\r\\n  ) public view returns (string memory) {\\r\\n    if (bytes(data[store][key]).length == 0)\\r\\n     return '';\\r\\n    return data[store][key];\\r\\n  }\\r\\n\\r\\n  function size(string memory store, string[] memory keys) public view returns (uint256) {\\r\\n    uint256 value = 0;\\r\\n    for (uint256 i = 0; i < keys.length; i++) {\\r\\n      if (bytes(data[store][keys[i]]).length == 0)\\r\\n        continue;\\r\\n      value++;\\r\\n    }\\r\\n    return value;\\r\\n  }\\r\\n\\r\\n  function has(string memory store, string memory key) public view returns (bool) {\\r\\n    return bytes(data[store][key]).length != 0;\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/utils/BidirectionalTransfer.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\ncontract BidirectionalTransfer {\\r\\n  error TransferFailed();\\r\\n  error TransferUnauthorized();\\r\\n\\r\\n  receive() external payable {}\\r\\n\\r\\n  function erc20Transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    bytes memory data;\\r\\n    if (from == address(this)) {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transfer(address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, to, amount);\\r\\n    } else {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, from, to, amount);\\r\\n    }\\r\\n    (bool sent,) = token.call(data);\\r\\n    if (!sent)\\r\\n     revert TransferFailed();\\r\\n  }\\r\\n  \\r\\n  function etherTransfer(address from, address to, uint256 amount) internal {\\r\\n    if (from == address(this)) {\\r\\n      (bool sent, ) = to.call{ value: amount }(\\\"\\\");\\r\\n      if (!sent)\\r\\n        revert TransferFailed();\\r\\n    } else {\\r\\n      if (from != msg.sender)\\r\\n        revert TransferUnauthorized();\\r\\n      if (msg.value != amount)\\r\\n        revert TransferFailed();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    if (token != address(0))\\r\\n      erc20Transfer(from, to, token, amount);\\r\\n    else\\r\\n      etherTransfer(from, to, amount);\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/ProxyForward.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n\\r\\nabstract contract ProxyForward {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  constructor(address initialAgent) {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/ProxyForwardUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract ProxyForwardUpgradeable is Initializable {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n\\r\\n  function __Proxyed_init(address initialAgent) internal onlyInitializing {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/Verifiable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nabstract contract Verifiable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  constructor(address initialVerifier) {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/VerifiableUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract VerifiableUpgradeable is Initializable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n\\r\\n  function __Verifie_init(address initialVerifier) internal onlyInitializing {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n}\"\n    }\n  },\n  \"settings\": {\n    \"evmVersion\": \"paris\",\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"storageLayout\",\n          \"devdoc\",\n          \"userdoc\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
        "solcInputHash": "7e579c2a968d07aea0f2802d42f7a480"
      }
    }
  ]
}
