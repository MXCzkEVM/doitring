{
  "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
  "impl": "0x919f0e18E7a1bCf4BB46913268d834256090B621",
  "kind": "uups",
  "args": [
    "0x919f0e18E7a1bCf4BB46913268d834256090B621",
    "0x485cc9550000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a0000000000000000000000008808d84e7c7d0221ffa4474a2bc56d3ea0555e26"
  ],
  "initialize": [
    "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
    "0x8808D84e7c7d0221fFa4474a2Bc56d3eA0555e26"
  ],
  "receipt": {
    "to": null,
    "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
    "contractAddress": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
    "transactionIndex": 2,
    "gasUsed": {
      "type": "BigNumber",
      "hex": "0x03d0ed"
    },
    "logsBloom": "0x00000000000000000000000000000000401000000000000000800000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000001000000000000000000000000000000000000022000000000000000000800000000000000000000000000000000400000000000000000000800000000000000000000010080000040000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000004000000000000000020000000000000000000000008000004000000000000000000000000000000000000",
    "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08",
    "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 1190782,
        "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
        "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
        "topics": [
          "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
          "0x000000000000000000000000919f0e18e7a1bcf4bb46913268d834256090b621"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 1190782,
        "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
        "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 1190782,
        "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
        "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
        "topics": [
          "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 5,
        "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
      }
    ],
    "blockNumber": 1190782,
    "confirmations": 1,
    "cumulativeGasUsed": {
      "type": "BigNumber",
      "hex": "0x06f69c"
    },
    "effectiveGasPrice": {
      "type": "BigNumber",
      "hex": "0x746ad98751"
    },
    "status": 1,
    "type": 2,
    "byzantium": true
  },
  "history": [
    {
      "impl": "0x919f0e18E7a1bCf4BB46913268d834256090B621",
      "receipts": {
        "impl": {
          "to": null,
          "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
          "contractAddress": "0x919f0e18E7a1bCf4BB46913268d834256090B621",
          "transactionIndex": 2,
          "gasUsed": {
            "type": "BigNumber",
            "hex": "0x3afb42"
          },
          "logsBloom": "0x
          "blockHash": "0x4ac80cb27d9b4cd5a0303f72ecfb8a4962751f65ebc53a85b3a38d08c7a18db6",
          "transactionHash": "0xad7a6efaa1c00ba5a9ec3fa796ab0155517d01239e70a3d992933276fee5351d",
          "logs": [
            {
              "transactionIndex": 2,
              "blockNumber": 1190781,
              "transactionHash": "0xad7a6efaa1c00ba5a9ec3fa796ab0155517d01239e70a3d992933276fee5351d",
              "address": "0x919f0e18E7a1bCf4BB46913268d834256090B621",
              "topics": [
                "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
              ],
              "data": "0x000000000000000000000000000000000000000000000000ffffffffffffffff",
              "logIndex": 3,
              "blockHash": "0x4ac80cb27d9b4cd5a0303f72ecfb8a4962751f65ebc53a85b3a38d08c7a18db6"
            }
          ],
          "blockNumber": 1190781,
          "confirmations": 1,
          "cumulativeGasUsed": {
            "type": "BigNumber",
            "hex": "0x3e20f1"
          },
          "effectiveGasPrice": {
            "type": "BigNumber",
            "hex": "0x746ad98751"
          },
          "status": 1,
          "type": 2,
          "byzantium": true
        },
        "init": {
          "to": null,
          "from": "0x0795D90c6d60F7c77041862E9aE5059B4d5e0d7A",
          "contractAddress": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
          "transactionIndex": 2,
          "gasUsed": {
            "type": "BigNumber",
            "hex": "0x03d0ed"
          },
          "logsBloom": "0x00000000000000000000000000000000401000000000000000800000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000001000000000000000000000000000000000000022000000000000000000800000000000000000000000000000000400000000000000000000800000000000000000000010080000040000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000004000000000000000020000000000000000000000008000004000000000000000000000000000000000000",
          "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08",
          "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
          "logs": [
            {
              "transactionIndex": 2,
              "blockNumber": 1190782,
              "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
              "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
              "topics": [
                "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                "0x000000000000000000000000919f0e18e7a1bcf4bb46913268d834256090b621"
              ],
              "data": "0x",
              "logIndex": 3,
              "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
            },
            {
              "transactionIndex": 2,
              "blockNumber": 1190782,
              "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
              "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
              "topics": [
                "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "0x0000000000000000000000000000000000000000000000000000000000000000",
                "0x0000000000000000000000000795d90c6d60f7c77041862e9ae5059b4d5e0d7a"
              ],
              "data": "0x",
              "logIndex": 4,
              "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
            },
            {
              "transactionIndex": 2,
              "blockNumber": 1190782,
              "transactionHash": "0x0b9d8a3d5548853dbb53b475a94ebfda36dd47c39246d237801c6991979fcf93",
              "address": "0xcE82E8e250326F452c7caa70d36a8A0a934968DB",
              "topics": [
                "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"
              ],
              "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
              "logIndex": 5,
              "blockHash": "0xc5fbd11961c1cc81e0eec682b69a2fa70f9247f674a0a1d8fe4cd0dc80ac6e08"
            }
          ],
          "blockNumber": 1190782,
          "confirmations": 1,
          "cumulativeGasUsed": {
            "type": "BigNumber",
            "hex": "0x06f69c"
          },
          "effectiveGasPrice": {
            "type": "BigNumber",
            "hex": "0x746ad98751"
          },
          "status": 1,
          "type": 2,
          "byzantium": true
        }
      },
      "artifact": {
        "_format": "hh-sol-artifact-1",
        "contractName": "DoitRingFriend",
        "sourceName": "contracts/DoitRingFriend.sol",
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "ERC1967InvalidImplementation",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "ERC1967NonPayable",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "ERC721IncorrectOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ERC721InsufficientApproval",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "approver",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidApprover",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidOperator",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidReceiver",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              }
            ],
            "name": "ERC721InvalidSender",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ERC721NonexistentToken",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidInitialization",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidSignature",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "NotInitializing",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "UUPSUnauthorizedCallContext",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "slot",
                "type": "bytes32"
              }
            ],
            "name": "UUPSUnsupportedProxiableUUID",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "UserAlreadyInGroup",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "UserNotInGroup",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "approved",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "ApprovalForAll",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "_fromTokenId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "_toTokenId",
                "type": "uint256"
              }
            ],
            "name": "BatchMetadataUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "creator",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "tokenURI",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "GroupCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "user",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "GroupJoined",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "user",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "group",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "name": "GroupLeaved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint64",
                "name": "version",
                "type": "uint64"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "MetadataUpdate",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "tokenURI",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ],
            "name": "create",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getAgent",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "getApproved",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getVerifier",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "user",
                "type": "address"
              }
            ],
            "name": "group",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_verifier",
                "type": "address"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              }
            ],
            "name": "isApprovedForAll",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "groupId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ],
            "name": "join",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              }
            ],
            "name": "leave",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "ownerOf",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newAgent",
                "type": "address"
              }
            ],
            "name": "setAgent",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "operator",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "approved",
                "type": "bool"
              }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newVerifier",
                "type": "address"
              }
            ],
            "name": "setVerifier",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceId",
                "type": "bytes4"
              }
            ],
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newImplementation",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "userToGroup",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "bytecode": "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b6080516144b0620001f960003960008181611e0701528181611e5c015261201701526144b06000f3fe6080604052600436106101c25760003560e01c8063715018a6116100f7578063b88d4fde11610095578063e985e9c511610064578063e985e9c51461062d578063f2fde38b1461066a578063f3b9029614610693578063f551eb19146106d0576101c2565b8063b88d4fde14610575578063bcf685ed1461059e578063bedf77a6146105c7578063c87b56dd146105f0576101c2565b806395d89b41116100d157806395d89b41146104cd578063a22cb465146104f8578063a610e36a14610521578063ad3cb1cc1461054a576101c2565b8063715018a61461044e5780637b5cf44f146104655780638da5cb5b146104a2576101c2565b806346657fe91161016457806352d1902d1161013e57806352d1902d146103805780635437988d146103ab5780636352211e146103d457806370a0823114610411576101c2565b806346657fe914610310578063485cc9551461033b5780634f1ef28614610364576101c2565b8063095ea7b3116101a0578063095ea7b31461026c57806323b872dd146102955780632e1e07c7146102be57806342842e0e146102e7576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190613346565b6106fb565b6040516101fb919061338e565b60405180910390f35b34801561021057600080fd5b5061021961075c565b6040516102269190613439565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190613491565b6107fd565b60405161026391906134ff565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190613546565b610819565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190613586565b61082f565b005b3480156102ca57600080fd5b506102e560048036038101906102e091906137af565b610931565b005b3480156102f357600080fd5b5061030e60048036038101906103099190613586565b610b19565b005b34801561031c57600080fd5b50610325610b39565b60405161033291906134ff565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d919061383a565b610b62565b005b61037e6004803603810190610379919061387a565b610d14565b005b34801561038c57600080fd5b50610395610d33565b6040516103a291906138ef565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd919061390a565b610d66565b005b3480156103e057600080fd5b506103fb60048036038101906103f69190613491565b610e37565b60405161040891906134ff565b60405180910390f35b34801561041d57600080fd5b506104386004803603810190610433919061390a565b610e49565b6040516104459190613946565b60405180910390f35b34801561045a57600080fd5b50610463610f12565b005b34801561047157600080fd5b5061048c6004803603810190610487919061390a565b610f26565b6040516104999190613946565b60405180910390f35b3480156104ae57600080fd5b506104b7610f6f565b6040516104c491906134ff565b60405180910390f35b3480156104d957600080fd5b506104e2610fa7565b6040516104ef9190613439565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061398d565b611048565b005b34801561052d57600080fd5b50610548600480360381019061054391906139cd565b61105e565b005b34801561055657600080fd5b5061055f61125e565b60405161056c9190613439565b60405180910390f35b34801561058157600080fd5b5061059c60048036038101906105979190613a3c565b611297565b005b3480156105aa57600080fd5b506105c560048036038101906105c0919061390a565b6112b4565b005b3480156105d357600080fd5b506105ee60048036038101906105e9919061390a565b611388565b005b3480156105fc57600080fd5b5061061760048036038101906106129190613491565b61159f565b6040516106249190613439565b60405180910390f35b34801561063957600080fd5b50610654600480360381019061064f919061383a565b6116c3565b604051610661919061338e565b60405180910390f35b34801561067657600080fd5b50610691600480360381019061068c919061390a565b611765565b005b34801561069f57600080fd5b506106ba60048036038101906106b5919061390a565b6117eb565b6040516106c79190613946565b60405180910390f35b3480156106dc57600080fd5b506106e5611803565b6040516106f291906134ff565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075557506107548261182d565b5b9050919050565b6060600061076861190f565b905080600001805461077990613aee565b80601f01602080910402602001604051908101604052809291908181526020018280546107a590613aee565b80156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505091505090565b600061080882611937565b50610812826119bf565b9050919050565b61082b8282610826611a0a565b611a12565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a15760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161089891906134ff565b60405180910390fd5b60006108b583836108b0611a0a565b611a24565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461092b578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161092293929190613b1f565b60405180910390fd5b50505050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156109bc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156109f3576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1e8484604051602001610a09929190613bda565b60405160208183030381529060405283611c51565b6000610a2a8585611cea565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f73f8954b6aca1b315e4645b31cd927c4f6e91f7072f93664c4a300de3ed54374828642604051610aba93929190613c02565b60405180910390a28473ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848242604051610b0a929190613c40565b60405180910390a25050505050565b610b3483838360405180602001604052806000815250611297565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b6c611d28565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610bba5750825b9050600060018367ffffffffffffffff16148015610bef575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610bfd575080155b15610c34576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c845760018560000160086101000a81548160ff0219169083151502179055505b610c8d87611d50565b610c9687611d64565b610c9f86611db0565b610ca7611dfb565b60016002819055508315610d0b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d029190613cc2565b60405180910390a15b50505050505050565b610d1c611e05565b610d2582611eeb565b610d2f8282611ef6565b5050565b6000610d3d612015565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90613d29565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610e4282611937565b9050919050565b600080610e5461190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec85760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ebf91906134ff565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610f1a61209c565b610f246000612123565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610f7a6121fa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610fb361190f565b9050806001018054610fc490613aee565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff090613aee565b801561103d5780601f106110125761010080835404028352916020019161103d565b820191906000526020600020905b81548152906001019060200180831161102057829003601f168201915b505050505091505090565b61105a611053611a0a565b8383612222565b5050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110e95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611120576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114b8484604051602001611136929190613d6a565b60405160208183030381529060405283611c51565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111c4576040517f649cdf9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848442604051611250929190613c40565b60405180910390a250505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6112a284848461082f565b6112ae848484846123a0565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613de2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b803373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156114135750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561144a576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036114c3576040517f2a32605900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558273ffffffffffffffffffffffffffffffffffffffff167f769bacf6500d62dc7db4f651a1585f741ed419b5575ae0ae894ff03d3769f1188242604051611592929190613c40565b60405180910390a2505050565b606060006115ab612557565b90506115b683611937565b50600081600001600085815260200190815260200160002080546115d990613aee565b80601f016020809104026020016040519081016040528092919081815260200182805461160590613aee565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b50505050509050600061166361257f565b90506000815103611679578193505050506116be565b6000825111156116af578082604051602001611696929190613e02565b60405160208183030381529060405293505050506116be565b6116b88561259f565b93505050505b919050565b6000806116ce61190f565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b61176d61209c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117df5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d691906134ff565b60405180910390fd5b6117e881612123565b50565b60036020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118f857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611908575061190782612608565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b60008061194383612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b657826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ad9190613946565b60405180910390fd5b80915050919050565b6000806119ca61190f565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611a1f83838360016126bd565b505050565b600080611a2f61190f565b90506000611a3c85612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a7e57611a7d818587612891565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b1157611ac06000866000806126bd565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611b965760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c99838051906020012083612955565b73ffffffffffffffffffffffffffffffffffffffff1614611ce6576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806002549050611cfc8482612a3e565b611d068184612a5c565b60026000815480929190611d1990613e55565b91905055508091505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d58612ac7565b611d6181612b07565b50565b611d6c612ac7565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611db8612ac7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611e03612ac7565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611eb257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e99612b8d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611ee9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ef361209c565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f5e57506040513d601f19601f82011682018060405250810190611f5b9190613ec9565b60015b611f9f57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611f9691906134ff565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461200657806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611ffd91906138ef565b60405180910390fd5b6120108383612be4565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461209a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6120a4611a0a565b73ffffffffffffffffffffffffffffffffffffffff166120c2610f6f565b73ffffffffffffffffffffffffffffffffffffffff1614612121576120e5611a0a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161211891906134ff565b60405180910390fd5b565b600061212d6121fa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061222c61190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229f57826040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161229691906134ff565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051612392919061338e565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612551578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026123e4611a0a565b8685856040518563ffffffff1660e01b81526004016124069493929190613f4b565b6020604051808303816000875af192505050801561244257506040513d601f19601f8201168201806040525081019061243f9190613fac565b60015b6124c6573d8060008114612472576040519150601f19603f3d011682016040523d82523d6000602084013e612477565b606091505b5060008151036124be57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124b591906134ff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461254f57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161254691906134ff565b60405180910390fd5b505b50505050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180606001604052806022815260200161445960229139905090565b60606125aa82611937565b5060006125b561257f565b905060008151116125d55760405180602001604052806000815250612600565b806125df84612c57565b6040516020016125f0929190613e02565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061267d61190f565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006126c761190f565b905081806127025750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561283657600061271285611937565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561277d57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015612790575061278e81856116c3565b155b156127d257836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016127c991906134ff565b60405180910390fd5b821561283457848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61289c838383612d25565b61295057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361291157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016129089190613946565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612947929190613fd9565b60405180910390fd5b505050565b6000604182511461299b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129929061404e565b60405180910390fd5b6000836040516020016129ae91906140db565b60405160208183030381529060405280519060200120905060008060006020860151925060408601519150606086015160001a905060018482858560405160008152602001604052604051612a06949392919061411d565b6020604051602081039080840390855afa158015612a28573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b612a58828260405180602001604052806000815250612de6565b5050565b6000612a66612557565b9050818160000160008581526020019081526020016000209081612a8a9190614304565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051612aba9190613946565b60405180910390a1505050565b612acf612e02565b612b05576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612b0f612ac7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b815760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b7891906134ff565b60405180910390fd5b612b8a81612123565b50565b6000612bbb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612bed82612e2c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612c4a57612c448282612ef9565b50612c53565b612c52612f7d565b5b5050565b606060006001612c6684612fba565b01905060008167ffffffffffffffff811115612c8557612c846135e3565b5b6040519080825280601f01601f191660200182016040528015612cb75781602001600182028036833780820191505090505b509050600082602001820190505b600115612d1a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612d0e57612d0d6143d6565b5b04945060008503612cc5575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612ddd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d9e5750612d9d84846116c3565b5b80612ddc57508273ffffffffffffffffffffffffffffffffffffffff16612dc4836119bf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b612df0838361310d565b612dfd60008484846123a0565b505050565b6000612e0c611d28565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612e8857806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612e7f91906134ff565b60405180910390fd5b80612eb57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612f239190614441565b600060405180830381855af49150503d8060008114612f5e576040519150601f19603f3d011682016040523d82523d6000602084013e612f63565b606091505b5091509150612f73858383613206565b9250505092915050565b6000341115612fb8576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613018577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161300e5761300d6143d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613055576d04ee2d6d415b85acef8100000000838161304b5761304a6143d6565b5b0492506020810190505b662386f26fc10000831061308457662386f26fc10000838161307a576130796143d6565b5b0492506010810190505b6305f5e10083106130ad576305f5e10083816130a3576130a26143d6565b5b0492506008810190505b61271083106130d25761271083816130c8576130c76143d6565b5b0492506004810190505b606483106130f557606483816130eb576130ea6143d6565b5b0492506002810190505b600a8310613104576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361317f5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161317691906134ff565b60405180910390fd5b600061318d83836000611a24565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146132015760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016131f891906134ff565b60405180910390fd5b505050565b60608261321b5761321682613295565b61328d565b60008251148015613243575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561328557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161327c91906134ff565b60405180910390fd5b81905061328e565b5b9392505050565b6000815111156132a85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613323816132ee565b811461332e57600080fd5b50565b6000813590506133408161331a565b92915050565b60006020828403121561335c5761335b6132e4565b5b600061336a84828501613331565b91505092915050565b60008115159050919050565b61338881613373565b82525050565b60006020820190506133a3600083018461337f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156133e35780820151818401526020810190506133c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061340b826133a9565b61341581856133b4565b93506134258185602086016133c5565b61342e816133ef565b840191505092915050565b600060208201905081810360008301526134538184613400565b905092915050565b6000819050919050565b61346e8161345b565b811461347957600080fd5b50565b60008135905061348b81613465565b92915050565b6000602082840312156134a7576134a66132e4565b5b60006134b58482850161347c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134e9826134be565b9050919050565b6134f9816134de565b82525050565b600060208201905061351460008301846134f0565b92915050565b613523816134de565b811461352e57600080fd5b50565b6000813590506135408161351a565b92915050565b6000806040838503121561355d5761355c6132e4565b5b600061356b85828601613531565b925050602061357c8582860161347c565b9150509250929050565b60008060006060848603121561359f5761359e6132e4565b5b60006135ad86828701613531565b93505060206135be86828701613531565b92505060406135cf8682870161347c565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61361b826133ef565b810181811067ffffffffffffffff8211171561363a576136396135e3565b5b80604052505050565b600061364d6132da565b90506136598282613612565b919050565b600067ffffffffffffffff821115613679576136786135e3565b5b613682826133ef565b9050602081019050919050565b82818337600083830152505050565b60006136b16136ac8461365e565b613643565b9050828152602081018484840111156136cd576136cc6135de565b5b6136d884828561368f565b509392505050565b600082601f8301126136f5576136f46135d9565b5b813561370584826020860161369e565b91505092915050565b600067ffffffffffffffff821115613729576137286135e3565b5b613732826133ef565b9050602081019050919050565b600061375261374d8461370e565b613643565b90508281526020810184848401111561376e5761376d6135de565b5b61377984828561368f565b509392505050565b600082601f830112613796576137956135d9565b5b81356137a684826020860161373f565b91505092915050565b6000806000606084860312156137c8576137c76132e4565b5b60006137d686828701613531565b935050602084013567ffffffffffffffff8111156137f7576137f66132e9565b5b613803868287016136e0565b925050604084013567ffffffffffffffff811115613824576138236132e9565b5b61383086828701613781565b9150509250925092565b60008060408385031215613851576138506132e4565b5b600061385f85828601613531565b925050602061387085828601613531565b9150509250929050565b60008060408385031215613891576138906132e4565b5b600061389f85828601613531565b925050602083013567ffffffffffffffff8111156138c0576138bf6132e9565b5b6138cc85828601613781565b9150509250929050565b6000819050919050565b6138e9816138d6565b82525050565b600060208201905061390460008301846138e0565b92915050565b6000602082840312156139205761391f6132e4565b5b600061392e84828501613531565b91505092915050565b6139408161345b565b82525050565b600060208201905061395b6000830184613937565b92915050565b61396a81613373565b811461397557600080fd5b50565b60008135905061398781613961565b92915050565b600080604083850312156139a4576139a36132e4565b5b60006139b285828601613531565b92505060206139c385828601613978565b9150509250929050565b6000806000606084860312156139e6576139e56132e4565b5b60006139f486828701613531565b9350506020613a058682870161347c565b925050604084013567ffffffffffffffff811115613a2657613a256132e9565b5b613a3286828701613781565b9150509250925092565b60008060008060808587031215613a5657613a556132e4565b5b6000613a6487828801613531565b9450506020613a7587828801613531565b9350506040613a868782880161347c565b925050606085013567ffffffffffffffff811115613aa757613aa66132e9565b5b613ab387828801613781565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0657607f821691505b602082108103613b1957613b18613abf565b5b50919050565b6000606082019050613b3460008301866134f0565b613b416020830185613937565b613b4e60408301846134f0565b949350505050565b60008160601b9050919050565b6000613b6e82613b56565b9050919050565b6000613b8082613b63565b9050919050565b613b98613b93826134de565b613b75565b82525050565b600081905092915050565b6000613bb4826133a9565b613bbe8185613b9e565b9350613bce8185602086016133c5565b80840191505092915050565b6000613be68285613b87565b601482019150613bf68284613ba9565b91508190509392505050565b6000606082019050613c176000830186613937565b8181036020830152613c298185613400565b9050613c386040830184613937565b949350505050565b6000604082019050613c556000830185613937565b613c626020830184613937565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613cac613ca7613ca284613c69565b613c87565b613c73565b9050919050565b613cbc81613c91565b82525050565b6000602082019050613cd76000830184613cb3565b92915050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b6000613d136014836133b4565b9150613d1e82613cdd565b602082019050919050565b60006020820190508181036000830152613d4281613d06565b9050919050565b6000819050919050565b613d64613d5f8261345b565b613d49565b82525050565b6000613d768285613b87565b601482019150613d868284613d53565b6020820191508190509392505050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b6000613dcc6011836133b4565b9150613dd782613d96565b602082019050919050565b60006020820190508181036000830152613dfb81613dbf565b9050919050565b6000613e0e8285613ba9565b9150613e1a8284613ba9565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e608261345b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9257613e91613e26565b5b600182019050919050565b613ea6816138d6565b8114613eb157600080fd5b50565b600081519050613ec381613e9d565b92915050565b600060208284031215613edf57613ede6132e4565b5b6000613eed84828501613eb4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613f1d82613ef6565b613f278185613f01565b9350613f378185602086016133c5565b613f40816133ef565b840191505092915050565b6000608082019050613f6060008301876134f0565b613f6d60208301866134f0565b613f7a6040830185613937565b8181036060830152613f8c8184613f12565b905095945050505050565b600081519050613fa68161331a565b92915050565b600060208284031215613fc257613fc16132e4565b5b6000613fd084828501613f97565b91505092915050565b6000604082019050613fee60008301856134f0565b613ffb6020830184613937565b9392505050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b60006140386018836133b4565b915061404382614002565b602082019050919050565b600060208201905081810360008301526140678161402b565b9050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006140a4601c83613b9e565b91506140af8261406e565b601c82019050919050565b6000819050919050565b6140d56140d0826138d6565b6140ba565b82525050565b60006140e682614097565b91506140f282846140c4565b60208201915081905092915050565b600060ff82169050919050565b61411781614101565b82525050565b600060808201905061413260008301876138e0565b61413f602083018661410e565b61414c60408301856138e0565b61415960608301846138e0565b95945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614187565b6141ce8683614187565b95508019841693508086168417925050509392505050565b60006142016141fc6141f78461345b565b613c87565b61345b565b9050919050565b6000819050919050565b61421b836141e6565b61422f61422782614208565b848454614194565b825550505050565b600090565b614244614237565b61424f818484614212565b505050565b5b818110156142735761426860008261423c565b600181019050614255565b5050565b601f8211156142b85761428981614162565b61429284614177565b810160208510156142a1578190505b6142b56142ad85614177565b830182614254565b50505b505050565b600082821c905092915050565b60006142db600019846008026142bd565b1980831691505092915050565b60006142f483836142ca565b9150826002028217905092915050565b61430d826133a9565b67ffffffffffffffff811115614326576143256135e3565b5b6143308254613aee565b61433b828285614277565b600060209050601f83116001811461436e576000841561435c578287015190505b61436685826142e8565b8655506143ce565b601f19841661437c86614162565b60005b828110156143a45784890151825560018201915060208501945060208101905061437f565b868310156143c157848901516143bd601f8916826142ca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081905092915050565b600061441b82613ef6565b6144258185614405565b93506144358185602086016133c5565b80840191505092915050565b600061444d8284614410565b91508190509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa2646970667358221220fd43bb4e2839a9c58cbe9b6db670ae4c54ce9b73cb0b1803917761224fb205eb64736f6c63430008180033",
        "deployedBytecode": "0x6080604052600436106101c25760003560e01c8063715018a6116100f7578063b88d4fde11610095578063e985e9c511610064578063e985e9c51461062d578063f2fde38b1461066a578063f3b9029614610693578063f551eb19146106d0576101c2565b8063b88d4fde14610575578063bcf685ed1461059e578063bedf77a6146105c7578063c87b56dd146105f0576101c2565b806395d89b41116100d157806395d89b41146104cd578063a22cb465146104f8578063a610e36a14610521578063ad3cb1cc1461054a576101c2565b8063715018a61461044e5780637b5cf44f146104655780638da5cb5b146104a2576101c2565b806346657fe91161016457806352d1902d1161013e57806352d1902d146103805780635437988d146103ab5780636352211e146103d457806370a0823114610411576101c2565b806346657fe914610310578063485cc9551461033b5780634f1ef28614610364576101c2565b8063095ea7b3116101a0578063095ea7b31461026c57806323b872dd146102955780632e1e07c7146102be57806342842e0e146102e7576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190613346565b6106fb565b6040516101fb919061338e565b60405180910390f35b34801561021057600080fd5b5061021961075c565b6040516102269190613439565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190613491565b6107fd565b60405161026391906134ff565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190613546565b610819565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190613586565b61082f565b005b3480156102ca57600080fd5b506102e560048036038101906102e091906137af565b610931565b005b3480156102f357600080fd5b5061030e60048036038101906103099190613586565b610b19565b005b34801561031c57600080fd5b50610325610b39565b60405161033291906134ff565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d919061383a565b610b62565b005b61037e6004803603810190610379919061387a565b610d14565b005b34801561038c57600080fd5b50610395610d33565b6040516103a291906138ef565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd919061390a565b610d66565b005b3480156103e057600080fd5b506103fb60048036038101906103f69190613491565b610e37565b60405161040891906134ff565b60405180910390f35b34801561041d57600080fd5b506104386004803603810190610433919061390a565b610e49565b6040516104459190613946565b60405180910390f35b34801561045a57600080fd5b50610463610f12565b005b34801561047157600080fd5b5061048c6004803603810190610487919061390a565b610f26565b6040516104999190613946565b60405180910390f35b3480156104ae57600080fd5b506104b7610f6f565b6040516104c491906134ff565b60405180910390f35b3480156104d957600080fd5b506104e2610fa7565b6040516104ef9190613439565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061398d565b611048565b005b34801561052d57600080fd5b50610548600480360381019061054391906139cd565b61105e565b005b34801561055657600080fd5b5061055f61125e565b60405161056c9190613439565b60405180910390f35b34801561058157600080fd5b5061059c60048036038101906105979190613a3c565b611297565b005b3480156105aa57600080fd5b506105c560048036038101906105c0919061390a565b6112b4565b005b3480156105d357600080fd5b506105ee60048036038101906105e9919061390a565b611388565b005b3480156105fc57600080fd5b5061061760048036038101906106129190613491565b61159f565b6040516106249190613439565b60405180910390f35b34801561063957600080fd5b50610654600480360381019061064f919061383a565b6116c3565b604051610661919061338e565b60405180910390f35b34801561067657600080fd5b50610691600480360381019061068c919061390a565b611765565b005b34801561069f57600080fd5b506106ba60048036038101906106b5919061390a565b6117eb565b6040516106c79190613946565b60405180910390f35b3480156106dc57600080fd5b506106e5611803565b6040516106f291906134ff565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075557506107548261182d565b5b9050919050565b6060600061076861190f565b905080600001805461077990613aee565b80601f01602080910402602001604051908101604052809291908181526020018280546107a590613aee565b80156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505091505090565b600061080882611937565b50610812826119bf565b9050919050565b61082b8282610826611a0a565b611a12565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a15760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161089891906134ff565b60405180910390fd5b60006108b583836108b0611a0a565b611a24565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461092b578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161092293929190613b1f565b60405180910390fd5b50505050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156109bc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156109f3576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1e8484604051602001610a09929190613bda565b60405160208183030381529060405283611c51565b6000610a2a8585611cea565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f73f8954b6aca1b315e4645b31cd927c4f6e91f7072f93664c4a300de3ed54374828642604051610aba93929190613c02565b60405180910390a28473ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848242604051610b0a929190613c40565b60405180910390a25050505050565b610b3483838360405180602001604052806000815250611297565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b6c611d28565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610bba5750825b9050600060018367ffffffffffffffff16148015610bef575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610bfd575080155b15610c34576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c845760018560000160086101000a81548160ff0219169083151502179055505b610c8d87611d50565b610c9687611d64565b610c9f86611db0565b610ca7611dfb565b60016002819055508315610d0b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d029190613cc2565b60405180910390a15b50505050505050565b610d1c611e05565b610d2582611eeb565b610d2f8282611ef6565b5050565b6000610d3d612015565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90613d29565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610e4282611937565b9050919050565b600080610e5461190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec85760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ebf91906134ff565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610f1a61209c565b610f246000612123565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610f7a6121fa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610fb361190f565b9050806001018054610fc490613aee565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff090613aee565b801561103d5780601f106110125761010080835404028352916020019161103d565b820191906000526020600020905b81548152906001019060200180831161102057829003601f168201915b505050505091505090565b61105a611053611a0a565b8383612222565b5050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110e95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611120576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114b8484604051602001611136929190613d6a565b60405160208183030381529060405283611c51565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111c4576040517f649cdf9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848442604051611250929190613c40565b60405180910390a250505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6112a284848461082f565b6112ae848484846123a0565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613de2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b803373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156114135750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561144a576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036114c3576040517f2a32605900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558273ffffffffffffffffffffffffffffffffffffffff167f769bacf6500d62dc7db4f651a1585f741ed419b5575ae0ae894ff03d3769f1188242604051611592929190613c40565b60405180910390a2505050565b606060006115ab612557565b90506115b683611937565b50600081600001600085815260200190815260200160002080546115d990613aee565b80601f016020809104026020016040519081016040528092919081815260200182805461160590613aee565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b50505050509050600061166361257f565b90506000815103611679578193505050506116be565b6000825111156116af578082604051602001611696929190613e02565b60405160208183030381529060405293505050506116be565b6116b88561259f565b93505050505b919050565b6000806116ce61190f565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b61176d61209c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117df5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d691906134ff565b60405180910390fd5b6117e881612123565b50565b60036020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118f857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611908575061190782612608565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b60008061194383612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b657826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ad9190613946565b60405180910390fd5b80915050919050565b6000806119ca61190f565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611a1f83838360016126bd565b505050565b600080611a2f61190f565b90506000611a3c85612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a7e57611a7d818587612891565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b1157611ac06000866000806126bd565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611b965760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c99838051906020012083612955565b73ffffffffffffffffffffffffffffffffffffffff1614611ce6576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806002549050611cfc8482612a3e565b611d068184612a5c565b60026000815480929190611d1990613e55565b91905055508091505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d58612ac7565b611d6181612b07565b50565b611d6c612ac7565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611db8612ac7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611e03612ac7565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611eb257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e99612b8d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611ee9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ef361209c565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f5e57506040513d601f19601f82011682018060405250810190611f5b9190613ec9565b60015b611f9f57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611f9691906134ff565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461200657806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611ffd91906138ef565b60405180910390fd5b6120108383612be4565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461209a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6120a4611a0a565b73ffffffffffffffffffffffffffffffffffffffff166120c2610f6f565b73ffffffffffffffffffffffffffffffffffffffff1614612121576120e5611a0a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161211891906134ff565b60405180910390fd5b565b600061212d6121fa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061222c61190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229f57826040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161229691906134ff565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051612392919061338e565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612551578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026123e4611a0a565b8685856040518563ffffffff1660e01b81526004016124069493929190613f4b565b6020604051808303816000875af192505050801561244257506040513d601f19601f8201168201806040525081019061243f9190613fac565b60015b6124c6573d8060008114612472576040519150601f19603f3d011682016040523d82523d6000602084013e612477565b606091505b5060008151036124be57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124b591906134ff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461254f57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161254691906134ff565b60405180910390fd5b505b50505050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180606001604052806022815260200161445960229139905090565b60606125aa82611937565b5060006125b561257f565b905060008151116125d55760405180602001604052806000815250612600565b806125df84612c57565b6040516020016125f0929190613e02565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061267d61190f565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006126c761190f565b905081806127025750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561283657600061271285611937565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561277d57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015612790575061278e81856116c3565b155b156127d257836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016127c991906134ff565b60405180910390fd5b821561283457848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61289c838383612d25565b61295057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361291157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016129089190613946565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612947929190613fd9565b60405180910390fd5b505050565b6000604182511461299b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129929061404e565b60405180910390fd5b6000836040516020016129ae91906140db565b60405160208183030381529060405280519060200120905060008060006020860151925060408601519150606086015160001a905060018482858560405160008152602001604052604051612a06949392919061411d565b6020604051602081039080840390855afa158015612a28573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b612a58828260405180602001604052806000815250612de6565b5050565b6000612a66612557565b9050818160000160008581526020019081526020016000209081612a8a9190614304565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051612aba9190613946565b60405180910390a1505050565b612acf612e02565b612b05576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612b0f612ac7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b815760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b7891906134ff565b60405180910390fd5b612b8a81612123565b50565b6000612bbb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612bed82612e2c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612c4a57612c448282612ef9565b50612c53565b612c52612f7d565b5b5050565b606060006001612c6684612fba565b01905060008167ffffffffffffffff811115612c8557612c846135e3565b5b6040519080825280601f01601f191660200182016040528015612cb75781602001600182028036833780820191505090505b509050600082602001820190505b600115612d1a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612d0e57612d0d6143d6565b5b04945060008503612cc5575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612ddd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d9e5750612d9d84846116c3565b5b80612ddc57508273ffffffffffffffffffffffffffffffffffffffff16612dc4836119bf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b612df0838361310d565b612dfd60008484846123a0565b505050565b6000612e0c611d28565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612e8857806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612e7f91906134ff565b60405180910390fd5b80612eb57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612f239190614441565b600060405180830381855af49150503d8060008114612f5e576040519150601f19603f3d011682016040523d82523d6000602084013e612f63565b606091505b5091509150612f73858383613206565b9250505092915050565b6000341115612fb8576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613018577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161300e5761300d6143d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613055576d04ee2d6d415b85acef8100000000838161304b5761304a6143d6565b5b0492506020810190505b662386f26fc10000831061308457662386f26fc10000838161307a576130796143d6565b5b0492506010810190505b6305f5e10083106130ad576305f5e10083816130a3576130a26143d6565b5b0492506008810190505b61271083106130d25761271083816130c8576130c76143d6565b5b0492506004810190505b606483106130f557606483816130eb576130ea6143d6565b5b0492506002810190505b600a8310613104576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361317f5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161317691906134ff565b60405180910390fd5b600061318d83836000611a24565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146132015760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016131f891906134ff565b60405180910390fd5b505050565b60608261321b5761321682613295565b61328d565b60008251148015613243575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561328557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161327c91906134ff565b60405180910390fd5b81905061328e565b5b9392505050565b6000815111156132a85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613323816132ee565b811461332e57600080fd5b50565b6000813590506133408161331a565b92915050565b60006020828403121561335c5761335b6132e4565b5b600061336a84828501613331565b91505092915050565b60008115159050919050565b61338881613373565b82525050565b60006020820190506133a3600083018461337f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156133e35780820151818401526020810190506133c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061340b826133a9565b61341581856133b4565b93506134258185602086016133c5565b61342e816133ef565b840191505092915050565b600060208201905081810360008301526134538184613400565b905092915050565b6000819050919050565b61346e8161345b565b811461347957600080fd5b50565b60008135905061348b81613465565b92915050565b6000602082840312156134a7576134a66132e4565b5b60006134b58482850161347c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134e9826134be565b9050919050565b6134f9816134de565b82525050565b600060208201905061351460008301846134f0565b92915050565b613523816134de565b811461352e57600080fd5b50565b6000813590506135408161351a565b92915050565b6000806040838503121561355d5761355c6132e4565b5b600061356b85828601613531565b925050602061357c8582860161347c565b9150509250929050565b60008060006060848603121561359f5761359e6132e4565b5b60006135ad86828701613531565b93505060206135be86828701613531565b92505060406135cf8682870161347c565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61361b826133ef565b810181811067ffffffffffffffff8211171561363a576136396135e3565b5b80604052505050565b600061364d6132da565b90506136598282613612565b919050565b600067ffffffffffffffff821115613679576136786135e3565b5b613682826133ef565b9050602081019050919050565b82818337600083830152505050565b60006136b16136ac8461365e565b613643565b9050828152602081018484840111156136cd576136cc6135de565b5b6136d884828561368f565b509392505050565b600082601f8301126136f5576136f46135d9565b5b813561370584826020860161369e565b91505092915050565b600067ffffffffffffffff821115613729576137286135e3565b5b613732826133ef565b9050602081019050919050565b600061375261374d8461370e565b613643565b90508281526020810184848401111561376e5761376d6135de565b5b61377984828561368f565b509392505050565b600082601f830112613796576137956135d9565b5b81356137a684826020860161373f565b91505092915050565b6000806000606084860312156137c8576137c76132e4565b5b60006137d686828701613531565b935050602084013567ffffffffffffffff8111156137f7576137f66132e9565b5b613803868287016136e0565b925050604084013567ffffffffffffffff811115613824576138236132e9565b5b61383086828701613781565b9150509250925092565b60008060408385031215613851576138506132e4565b5b600061385f85828601613531565b925050602061387085828601613531565b9150509250929050565b60008060408385031215613891576138906132e4565b5b600061389f85828601613531565b925050602083013567ffffffffffffffff8111156138c0576138bf6132e9565b5b6138cc85828601613781565b9150509250929050565b6000819050919050565b6138e9816138d6565b82525050565b600060208201905061390460008301846138e0565b92915050565b6000602082840312156139205761391f6132e4565b5b600061392e84828501613531565b91505092915050565b6139408161345b565b82525050565b600060208201905061395b6000830184613937565b92915050565b61396a81613373565b811461397557600080fd5b50565b60008135905061398781613961565b92915050565b600080604083850312156139a4576139a36132e4565b5b60006139b285828601613531565b92505060206139c385828601613978565b9150509250929050565b6000806000606084860312156139e6576139e56132e4565b5b60006139f486828701613531565b9350506020613a058682870161347c565b925050604084013567ffffffffffffffff811115613a2657613a256132e9565b5b613a3286828701613781565b9150509250925092565b60008060008060808587031215613a5657613a556132e4565b5b6000613a6487828801613531565b9450506020613a7587828801613531565b9350506040613a868782880161347c565b925050606085013567ffffffffffffffff811115613aa757613aa66132e9565b5b613ab387828801613781565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0657607f821691505b602082108103613b1957613b18613abf565b5b50919050565b6000606082019050613b3460008301866134f0565b613b416020830185613937565b613b4e60408301846134f0565b949350505050565b60008160601b9050919050565b6000613b6e82613b56565b9050919050565b6000613b8082613b63565b9050919050565b613b98613b93826134de565b613b75565b82525050565b600081905092915050565b6000613bb4826133a9565b613bbe8185613b9e565b9350613bce8185602086016133c5565b80840191505092915050565b6000613be68285613b87565b601482019150613bf68284613ba9565b91508190509392505050565b6000606082019050613c176000830186613937565b8181036020830152613c298185613400565b9050613c386040830184613937565b949350505050565b6000604082019050613c556000830185613937565b613c626020830184613937565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613cac613ca7613ca284613c69565b613c87565b613c73565b9050919050565b613cbc81613c91565b82525050565b6000602082019050613cd76000830184613cb3565b92915050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b6000613d136014836133b4565b9150613d1e82613cdd565b602082019050919050565b60006020820190508181036000830152613d4281613d06565b9050919050565b6000819050919050565b613d64613d5f8261345b565b613d49565b82525050565b6000613d768285613b87565b601482019150613d868284613d53565b6020820191508190509392505050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b6000613dcc6011836133b4565b9150613dd782613d96565b602082019050919050565b60006020820190508181036000830152613dfb81613dbf565b9050919050565b6000613e0e8285613ba9565b9150613e1a8284613ba9565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e608261345b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9257613e91613e26565b5b600182019050919050565b613ea6816138d6565b8114613eb157600080fd5b50565b600081519050613ec381613e9d565b92915050565b600060208284031215613edf57613ede6132e4565b5b6000613eed84828501613eb4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613f1d82613ef6565b613f278185613f01565b9350613f378185602086016133c5565b613f40816133ef565b840191505092915050565b6000608082019050613f6060008301876134f0565b613f6d60208301866134f0565b613f7a6040830185613937565b8181036060830152613f8c8184613f12565b905095945050505050565b600081519050613fa68161331a565b92915050565b600060208284031215613fc257613fc16132e4565b5b6000613fd084828501613f97565b91505092915050565b6000604082019050613fee60008301856134f0565b613ffb6020830184613937565b9392505050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b60006140386018836133b4565b915061404382614002565b602082019050919050565b600060208201905081810360008301526140678161402b565b9050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006140a4601c83613b9e565b91506140af8261406e565b601c82019050919050565b6000819050919050565b6140d56140d0826138d6565b6140ba565b82525050565b60006140e682614097565b91506140f282846140c4565b60208201915081905092915050565b600060ff82169050919050565b61411781614101565b82525050565b600060808201905061413260008301876138e0565b61413f602083018661410e565b61414c60408301856138e0565b61415960608301846138e0565b95945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614187565b6141ce8683614187565b95508019841693508086168417925050509392505050565b60006142016141fc6141f78461345b565b613c87565b61345b565b9050919050565b6000819050919050565b61421b836141e6565b61422f61422782614208565b848454614194565b825550505050565b600090565b614244614237565b61424f818484614212565b505050565b5b818110156142735761426860008261423c565b600181019050614255565b5050565b601f8211156142b85761428981614162565b61429284614177565b810160208510156142a1578190505b6142b56142ad85614177565b830182614254565b50505b505050565b600082821c905092915050565b60006142db600019846008026142bd565b1980831691505092915050565b60006142f483836142ca565b9150826002028217905092915050565b61430d826133a9565b67ffffffffffffffff811115614326576143256135e3565b5b6143308254613aee565b61433b828285614277565b600060209050601f83116001811461436e576000841561435c578287015190505b61436685826142e8565b8655506143ce565b601f19841661437c86614162565b60005b828110156143a45784890151825560018201915060208501945060208101905061437f565b868310156143c157848901516143bd601f8916826142ca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081905092915050565b600061441b82613ef6565b6144258185614405565b93506144358185602086016133c5565b80840191505092915050565b600061444d8284614410565b91508190509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa2646970667358221220fd43bb4e2839a9c58cbe9b6db670ae4c54ce9b73cb0b1803917761224fb205eb64736f6c63430008180033",
        "linkReferences": {},
        "deployedLinkReferences": {},
        "devdoc": {
          "errors": {
            "AddressEmptyCode(address)": [
              {
                "details": "There's no code at `target` (it is not a contract)."
              }
            ],
            "ERC1967InvalidImplementation(address)": [
              {
                "details": "The `implementation` of the proxy is invalid."
              }
            ],
            "ERC1967NonPayable()": [
              {
                "details": "An upgrade function sees `msg.value > 0` that may be lost."
              }
            ],
            "ERC721IncorrectOwner(address,uint256,address)": [
              {
                "details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
                "params": {
                  "owner": "Address of the current owner of a token.",
                  "sender": "Address whose tokens are being transferred.",
                  "tokenId": "Identifier number of a token."
                }
              }
            ],
            "ERC721InsufficientApproval(address,uint256)": [
              {
                "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
                "params": {
                  "operator": "Address that may be allowed to operate on tokens without being their owner.",
                  "tokenId": "Identifier number of a token."
                }
              }
            ],
            "ERC721InvalidApprover(address)": [
              {
                "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                "params": {
                  "approver": "Address initiating an approval operation."
                }
              }
            ],
            "ERC721InvalidOperator(address)": [
              {
                "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
                "params": {
                  "operator": "Address that may be allowed to operate on tokens without being their owner."
                }
              }
            ],
            "ERC721InvalidOwner(address)": [
              {
                "details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
                "params": {
                  "owner": "Address of the current owner of a token."
                }
              }
            ],
            "ERC721InvalidReceiver(address)": [
              {
                "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                "params": {
                  "receiver": "Address to which tokens are being transferred."
                }
              }
            ],
            "ERC721InvalidSender(address)": [
              {
                "details": "Indicates a failure with the token `sender`. Used in transfers.",
                "params": {
                  "sender": "Address whose tokens are being transferred."
                }
              }
            ],
            "ERC721NonexistentToken(uint256)": [
              {
                "details": "Indicates a `tokenId` whose `owner` is the zero address.",
                "params": {
                  "tokenId": "Identifier number of a token."
                }
              }
            ],
            "FailedInnerCall()": [
              {
                "details": "A call to an address target failed. The target may have reverted."
              }
            ],
            "InvalidInitialization()": [
              {
                "details": "The contract is already initialized."
              }
            ],
            "NotInitializing()": [
              {
                "details": "The contract is not initializing."
              }
            ],
            "OwnableInvalidOwner(address)": [
              {
                "details": "The owner is not a valid owner account. (eg. `address(0)`)"
              }
            ],
            "OwnableUnauthorizedAccount(address)": [
              {
                "details": "The caller account is not authorized to perform an operation."
              }
            ],
            "UUPSUnauthorizedCallContext()": [
              {
                "details": "The call is from an unauthorized context."
              }
            ],
            "UUPSUnsupportedProxiableUUID(bytes32)": [
              {
                "details": "The storage `slot` is unsupported as a UUID."
              }
            ]
          },
          "events": {
            "Approval(address,address,uint256)": {
              "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "ApprovalForAll(address,address,bool)": {
              "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "BatchMetadataUpdate(uint256,uint256)": {
              "details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
            },
            "Initialized(uint64)": {
              "details": "Triggered when the contract has been initialized or reinitialized."
            },
            "MetadataUpdate(uint256)": {
              "details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
            },
            "Transfer(address,address,uint256)": {
              "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "Upgraded(address)": {
              "details": "Emitted when the implementation is upgraded."
            }
          },
          "kind": "dev",
          "methods": {
            "approve(address,uint256)": {
              "details": "See {IERC721-approve}."
            },
            "balanceOf(address)": {
              "details": "See {IERC721-balanceOf}."
            },
            "constructor": {
              "custom:oz-upgrades-unsafe-allow": "constructor"
            },
            "getApproved(uint256)": {
              "details": "See {IERC721-getApproved}."
            },
            "isApprovedForAll(address,address)": {
              "details": "See {IERC721-isApprovedForAll}."
            },
            "name()": {
              "details": "See {IERC721Metadata-name}."
            },
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "ownerOf(uint256)": {
              "details": "See {IERC721-ownerOf}."
            },
            "proxiableUUID()": {
              "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
            },
            "safeTransferFrom(address,address,uint256)": {
              "details": "See {IERC721-safeTransferFrom}."
            },
            "safeTransferFrom(address,address,uint256,bytes)": {
              "details": "See {IERC721-safeTransferFrom}."
            },
            "setApprovalForAll(address,bool)": {
              "details": "See {IERC721-setApprovalForAll}."
            },
            "supportsInterface(bytes4)": {
              "details": "See {IERC165-supportsInterface}"
            },
            "symbol()": {
              "details": "See {IERC721Metadata-symbol}."
            },
            "tokenURI(uint256)": {
              "details": "See {IERC721Metadata-tokenURI}."
            },
            "transferFrom(address,address,uint256)": {
              "details": "See {IERC721-transferFrom}."
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            },
            "upgradeToAndCall(address,bytes)": {
              "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
              "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
            }
          },
          "version": 1
        },
        "evm": {
          "bytecode": {
            "functionDebugData": {
              "@_7258": {
                "entryPoint": null,
                "id": 7258,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_disableInitializers_416": {
                "entryPoint": 91,
                "id": 416,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_getInitializableStorage_447": {
                "entryPoint": 357,
                "id": 447,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "abi_encode_t_uint64_to_t_uint64_fromStack": {
                "entryPoint": 417,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
                "entryPoint": 434,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "cleanup_t_uint64": {
                "entryPoint": 397,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              }
            },
            "generatedSources": [
              {
                "ast": {
                  "nativeSrc": "0:456:46",
                  "nodeType": "YulBlock",
                  "src": "0:456:46",
                  "statements": [
                    {
                      "body": {
                        "nativeSrc": "51:57:46",
                        "nodeType": "YulBlock",
                        "src": "51:57:46",
                        "statements": [
                          {
                            "nativeSrc": "61:41:46",
                            "nodeType": "YulAssignment",
                            "src": "61:41:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "76:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "76:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "83:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "83:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "72:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "72:3:46"
                              },
                              "nativeSrc": "72:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "72:30:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "61:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "61:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint64",
                      "nativeSrc": "7:101:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "33:5:46",
                          "nodeType": "YulTypedName",
                          "src": "33:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "43:7:46",
                          "nodeType": "YulTypedName",
                          "src": "43:7:46",
                          "type": ""
                        }
                      ],
                      "src": "7:101:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "177:52:46",
                        "nodeType": "YulBlock",
                        "src": "177:52:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "194:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "216:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "216:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint64",
                                    "nativeSrc": "199:16:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "199:16:46"
                                  },
                                  "nativeSrc": "199:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "199:23:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "187:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "187:6:46"
                              },
                              "nativeSrc": "187:36:46",
                              "nodeType": "YulFunctionCall",
                              "src": "187:36:46"
                            },
                            "nativeSrc": "187:36:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "187:36:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                      "nativeSrc": "114:115:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "165:5:46",
                          "nodeType": "YulTypedName",
                          "src": "165:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "172:3:46",
                          "nodeType": "YulTypedName",
                          "src": "172:3:46",
                          "type": ""
                        }
                      ],
                      "src": "114:115:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "331:122:46",
                        "nodeType": "YulBlock",
                        "src": "331:122:46",
                        "statements": [
                          {
                            "nativeSrc": "341:26:46",
                            "nodeType": "YulAssignment",
                            "src": "341:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "353:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "364:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "364:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "349:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "349:3:46"
                              },
                              "nativeSrc": "349:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "349:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "341:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "341:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "419:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "419:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "432:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "432:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "443:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "443:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "428:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "428:3:46"
                                  },
                                  "nativeSrc": "428:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "428:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                                "nativeSrc": "377:41:46",
                                "nodeType": "YulIdentifier",
                                "src": "377:41:46"
                              },
                              "nativeSrc": "377:69:46",
                              "nodeType": "YulFunctionCall",
                              "src": "377:69:46"
                            },
                            "nativeSrc": "377:69:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "377:69:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
                      "nativeSrc": "235:218:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "303:9:46",
                          "nodeType": "YulTypedName",
                          "src": "303:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "315:6:46",
                          "nodeType": "YulTypedName",
                          "src": "315:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "326:4:46",
                          "nodeType": "YulTypedName",
                          "src": "326:4:46",
                          "type": ""
                        }
                      ],
                      "src": "235:218:46"
                    }
                  ]
                },
                "contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                "id": 46,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "linkReferences": {},
            "object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50620000556200005b60201b60201c565b620001cf565b60006200006d6200016560201b60201c565b90508060000160089054906101000a900460ff1615620000b9576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001625767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001599190620001b2565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b620001ac816200018d565b82525050565b6000602082019050620001c96000830184620001a1565b92915050565b6080516144b0620001f960003960008181611e0701528181611e5c015261201701526144b06000f3fe6080604052600436106101c25760003560e01c8063715018a6116100f7578063b88d4fde11610095578063e985e9c511610064578063e985e9c51461062d578063f2fde38b1461066a578063f3b9029614610693578063f551eb19146106d0576101c2565b8063b88d4fde14610575578063bcf685ed1461059e578063bedf77a6146105c7578063c87b56dd146105f0576101c2565b806395d89b41116100d157806395d89b41146104cd578063a22cb465146104f8578063a610e36a14610521578063ad3cb1cc1461054a576101c2565b8063715018a61461044e5780637b5cf44f146104655780638da5cb5b146104a2576101c2565b806346657fe91161016457806352d1902d1161013e57806352d1902d146103805780635437988d146103ab5780636352211e146103d457806370a0823114610411576101c2565b806346657fe914610310578063485cc9551461033b5780634f1ef28614610364576101c2565b8063095ea7b3116101a0578063095ea7b31461026c57806323b872dd146102955780632e1e07c7146102be57806342842e0e146102e7576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190613346565b6106fb565b6040516101fb919061338e565b60405180910390f35b34801561021057600080fd5b5061021961075c565b6040516102269190613439565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190613491565b6107fd565b60405161026391906134ff565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190613546565b610819565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190613586565b61082f565b005b3480156102ca57600080fd5b506102e560048036038101906102e091906137af565b610931565b005b3480156102f357600080fd5b5061030e60048036038101906103099190613586565b610b19565b005b34801561031c57600080fd5b50610325610b39565b60405161033291906134ff565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d919061383a565b610b62565b005b61037e6004803603810190610379919061387a565b610d14565b005b34801561038c57600080fd5b50610395610d33565b6040516103a291906138ef565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd919061390a565b610d66565b005b3480156103e057600080fd5b506103fb60048036038101906103f69190613491565b610e37565b60405161040891906134ff565b60405180910390f35b34801561041d57600080fd5b506104386004803603810190610433919061390a565b610e49565b6040516104459190613946565b60405180910390f35b34801561045a57600080fd5b50610463610f12565b005b34801561047157600080fd5b5061048c6004803603810190610487919061390a565b610f26565b6040516104999190613946565b60405180910390f35b3480156104ae57600080fd5b506104b7610f6f565b6040516104c491906134ff565b60405180910390f35b3480156104d957600080fd5b506104e2610fa7565b6040516104ef9190613439565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061398d565b611048565b005b34801561052d57600080fd5b50610548600480360381019061054391906139cd565b61105e565b005b34801561055657600080fd5b5061055f61125e565b60405161056c9190613439565b60405180910390f35b34801561058157600080fd5b5061059c60048036038101906105979190613a3c565b611297565b005b3480156105aa57600080fd5b506105c560048036038101906105c0919061390a565b6112b4565b005b3480156105d357600080fd5b506105ee60048036038101906105e9919061390a565b611388565b005b3480156105fc57600080fd5b5061061760048036038101906106129190613491565b61159f565b6040516106249190613439565b60405180910390f35b34801561063957600080fd5b50610654600480360381019061064f919061383a565b6116c3565b604051610661919061338e565b60405180910390f35b34801561067657600080fd5b50610691600480360381019061068c919061390a565b611765565b005b34801561069f57600080fd5b506106ba60048036038101906106b5919061390a565b6117eb565b6040516106c79190613946565b60405180910390f35b3480156106dc57600080fd5b506106e5611803565b6040516106f291906134ff565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075557506107548261182d565b5b9050919050565b6060600061076861190f565b905080600001805461077990613aee565b80601f01602080910402602001604051908101604052809291908181526020018280546107a590613aee565b80156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505091505090565b600061080882611937565b50610812826119bf565b9050919050565b61082b8282610826611a0a565b611a12565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a15760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161089891906134ff565b60405180910390fd5b60006108b583836108b0611a0a565b611a24565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461092b578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161092293929190613b1f565b60405180910390fd5b50505050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156109bc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156109f3576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1e8484604051602001610a09929190613bda565b60405160208183030381529060405283611c51565b6000610a2a8585611cea565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f73f8954b6aca1b315e4645b31cd927c4f6e91f7072f93664c4a300de3ed54374828642604051610aba93929190613c02565b60405180910390a28473ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848242604051610b0a929190613c40565b60405180910390a25050505050565b610b3483838360405180602001604052806000815250611297565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b6c611d28565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610bba5750825b9050600060018367ffffffffffffffff16148015610bef575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610bfd575080155b15610c34576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c845760018560000160086101000a81548160ff0219169083151502179055505b610c8d87611d50565b610c9687611d64565b610c9f86611db0565b610ca7611dfb565b60016002819055508315610d0b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d029190613cc2565b60405180910390a15b50505050505050565b610d1c611e05565b610d2582611eeb565b610d2f8282611ef6565b5050565b6000610d3d612015565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90613d29565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610e4282611937565b9050919050565b600080610e5461190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec85760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ebf91906134ff565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610f1a61209c565b610f246000612123565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610f7a6121fa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610fb361190f565b9050806001018054610fc490613aee565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff090613aee565b801561103d5780601f106110125761010080835404028352916020019161103d565b820191906000526020600020905b81548152906001019060200180831161102057829003601f168201915b505050505091505090565b61105a611053611a0a565b8383612222565b5050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110e95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611120576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114b8484604051602001611136929190613d6a565b60405160208183030381529060405283611c51565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111c4576040517f649cdf9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848442604051611250929190613c40565b60405180910390a250505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6112a284848461082f565b6112ae848484846123a0565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613de2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b803373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156114135750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561144a576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036114c3576040517f2a32605900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558273ffffffffffffffffffffffffffffffffffffffff167f769bacf6500d62dc7db4f651a1585f741ed419b5575ae0ae894ff03d3769f1188242604051611592929190613c40565b60405180910390a2505050565b606060006115ab612557565b90506115b683611937565b50600081600001600085815260200190815260200160002080546115d990613aee565b80601f016020809104026020016040519081016040528092919081815260200182805461160590613aee565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b50505050509050600061166361257f565b90506000815103611679578193505050506116be565b6000825111156116af578082604051602001611696929190613e02565b60405160208183030381529060405293505050506116be565b6116b88561259f565b93505050505b919050565b6000806116ce61190f565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b61176d61209c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117df5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d691906134ff565b60405180910390fd5b6117e881612123565b50565b60036020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118f857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611908575061190782612608565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b60008061194383612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b657826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ad9190613946565b60405180910390fd5b80915050919050565b6000806119ca61190f565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611a1f83838360016126bd565b505050565b600080611a2f61190f565b90506000611a3c85612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a7e57611a7d818587612891565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b1157611ac06000866000806126bd565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611b965760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c99838051906020012083612955565b73ffffffffffffffffffffffffffffffffffffffff1614611ce6576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806002549050611cfc8482612a3e565b611d068184612a5c565b60026000815480929190611d1990613e55565b91905055508091505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d58612ac7565b611d6181612b07565b50565b611d6c612ac7565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611db8612ac7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611e03612ac7565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611eb257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e99612b8d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611ee9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ef361209c565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f5e57506040513d601f19601f82011682018060405250810190611f5b9190613ec9565b60015b611f9f57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611f9691906134ff565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461200657806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611ffd91906138ef565b60405180910390fd5b6120108383612be4565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461209a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6120a4611a0a565b73ffffffffffffffffffffffffffffffffffffffff166120c2610f6f565b73ffffffffffffffffffffffffffffffffffffffff1614612121576120e5611a0a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161211891906134ff565b60405180910390fd5b565b600061212d6121fa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061222c61190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229f57826040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161229691906134ff565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051612392919061338e565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612551578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026123e4611a0a565b8685856040518563ffffffff1660e01b81526004016124069493929190613f4b565b6020604051808303816000875af192505050801561244257506040513d601f19601f8201168201806040525081019061243f9190613fac565b60015b6124c6573d8060008114612472576040519150601f19603f3d011682016040523d82523d6000602084013e612477565b606091505b5060008151036124be57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124b591906134ff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461254f57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161254691906134ff565b60405180910390fd5b505b50505050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180606001604052806022815260200161445960229139905090565b60606125aa82611937565b5060006125b561257f565b905060008151116125d55760405180602001604052806000815250612600565b806125df84612c57565b6040516020016125f0929190613e02565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061267d61190f565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006126c761190f565b905081806127025750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561283657600061271285611937565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561277d57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015612790575061278e81856116c3565b155b156127d257836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016127c991906134ff565b60405180910390fd5b821561283457848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61289c838383612d25565b61295057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361291157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016129089190613946565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612947929190613fd9565b60405180910390fd5b505050565b6000604182511461299b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129929061404e565b60405180910390fd5b6000836040516020016129ae91906140db565b60405160208183030381529060405280519060200120905060008060006020860151925060408601519150606086015160001a905060018482858560405160008152602001604052604051612a06949392919061411d565b6020604051602081039080840390855afa158015612a28573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b612a58828260405180602001604052806000815250612de6565b5050565b6000612a66612557565b9050818160000160008581526020019081526020016000209081612a8a9190614304565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051612aba9190613946565b60405180910390a1505050565b612acf612e02565b612b05576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612b0f612ac7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b815760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b7891906134ff565b60405180910390fd5b612b8a81612123565b50565b6000612bbb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612bed82612e2c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612c4a57612c448282612ef9565b50612c53565b612c52612f7d565b5b5050565b606060006001612c6684612fba565b01905060008167ffffffffffffffff811115612c8557612c846135e3565b5b6040519080825280601f01601f191660200182016040528015612cb75781602001600182028036833780820191505090505b509050600082602001820190505b600115612d1a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612d0e57612d0d6143d6565b5b04945060008503612cc5575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612ddd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d9e5750612d9d84846116c3565b5b80612ddc57508273ffffffffffffffffffffffffffffffffffffffff16612dc4836119bf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b612df0838361310d565b612dfd60008484846123a0565b505050565b6000612e0c611d28565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612e8857806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612e7f91906134ff565b60405180910390fd5b80612eb57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612f239190614441565b600060405180830381855af49150503d8060008114612f5e576040519150601f19603f3d011682016040523d82523d6000602084013e612f63565b606091505b5091509150612f73858383613206565b9250505092915050565b6000341115612fb8576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613018577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161300e5761300d6143d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613055576d04ee2d6d415b85acef8100000000838161304b5761304a6143d6565b5b0492506020810190505b662386f26fc10000831061308457662386f26fc10000838161307a576130796143d6565b5b0492506010810190505b6305f5e10083106130ad576305f5e10083816130a3576130a26143d6565b5b0492506008810190505b61271083106130d25761271083816130c8576130c76143d6565b5b0492506004810190505b606483106130f557606483816130eb576130ea6143d6565b5b0492506002810190505b600a8310613104576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361317f5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161317691906134ff565b60405180910390fd5b600061318d83836000611a24565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146132015760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016131f891906134ff565b60405180910390fd5b505050565b60608261321b5761321682613295565b61328d565b60008251148015613243575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561328557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161327c91906134ff565b60405180910390fd5b81905061328e565b5b9392505050565b6000815111156132a85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613323816132ee565b811461332e57600080fd5b50565b6000813590506133408161331a565b92915050565b60006020828403121561335c5761335b6132e4565b5b600061336a84828501613331565b91505092915050565b60008115159050919050565b61338881613373565b82525050565b60006020820190506133a3600083018461337f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156133e35780820151818401526020810190506133c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061340b826133a9565b61341581856133b4565b93506134258185602086016133c5565b61342e816133ef565b840191505092915050565b600060208201905081810360008301526134538184613400565b905092915050565b6000819050919050565b61346e8161345b565b811461347957600080fd5b50565b60008135905061348b81613465565b92915050565b6000602082840312156134a7576134a66132e4565b5b60006134b58482850161347c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134e9826134be565b9050919050565b6134f9816134de565b82525050565b600060208201905061351460008301846134f0565b92915050565b613523816134de565b811461352e57600080fd5b50565b6000813590506135408161351a565b92915050565b6000806040838503121561355d5761355c6132e4565b5b600061356b85828601613531565b925050602061357c8582860161347c565b9150509250929050565b60008060006060848603121561359f5761359e6132e4565b5b60006135ad86828701613531565b93505060206135be86828701613531565b92505060406135cf8682870161347c565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61361b826133ef565b810181811067ffffffffffffffff8211171561363a576136396135e3565b5b80604052505050565b600061364d6132da565b90506136598282613612565b919050565b600067ffffffffffffffff821115613679576136786135e3565b5b613682826133ef565b9050602081019050919050565b82818337600083830152505050565b60006136b16136ac8461365e565b613643565b9050828152602081018484840111156136cd576136cc6135de565b5b6136d884828561368f565b509392505050565b600082601f8301126136f5576136f46135d9565b5b813561370584826020860161369e565b91505092915050565b600067ffffffffffffffff821115613729576137286135e3565b5b613732826133ef565b9050602081019050919050565b600061375261374d8461370e565b613643565b90508281526020810184848401111561376e5761376d6135de565b5b61377984828561368f565b509392505050565b600082601f830112613796576137956135d9565b5b81356137a684826020860161373f565b91505092915050565b6000806000606084860312156137c8576137c76132e4565b5b60006137d686828701613531565b935050602084013567ffffffffffffffff8111156137f7576137f66132e9565b5b613803868287016136e0565b925050604084013567ffffffffffffffff811115613824576138236132e9565b5b61383086828701613781565b9150509250925092565b60008060408385031215613851576138506132e4565b5b600061385f85828601613531565b925050602061387085828601613531565b9150509250929050565b60008060408385031215613891576138906132e4565b5b600061389f85828601613531565b925050602083013567ffffffffffffffff8111156138c0576138bf6132e9565b5b6138cc85828601613781565b9150509250929050565b6000819050919050565b6138e9816138d6565b82525050565b600060208201905061390460008301846138e0565b92915050565b6000602082840312156139205761391f6132e4565b5b600061392e84828501613531565b91505092915050565b6139408161345b565b82525050565b600060208201905061395b6000830184613937565b92915050565b61396a81613373565b811461397557600080fd5b50565b60008135905061398781613961565b92915050565b600080604083850312156139a4576139a36132e4565b5b60006139b285828601613531565b92505060206139c385828601613978565b9150509250929050565b6000806000606084860312156139e6576139e56132e4565b5b60006139f486828701613531565b9350506020613a058682870161347c565b925050604084013567ffffffffffffffff811115613a2657613a256132e9565b5b613a3286828701613781565b9150509250925092565b60008060008060808587031215613a5657613a556132e4565b5b6000613a6487828801613531565b9450506020613a7587828801613531565b9350506040613a868782880161347c565b925050606085013567ffffffffffffffff811115613aa757613aa66132e9565b5b613ab387828801613781565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0657607f821691505b602082108103613b1957613b18613abf565b5b50919050565b6000606082019050613b3460008301866134f0565b613b416020830185613937565b613b4e60408301846134f0565b949350505050565b60008160601b9050919050565b6000613b6e82613b56565b9050919050565b6000613b8082613b63565b9050919050565b613b98613b93826134de565b613b75565b82525050565b600081905092915050565b6000613bb4826133a9565b613bbe8185613b9e565b9350613bce8185602086016133c5565b80840191505092915050565b6000613be68285613b87565b601482019150613bf68284613ba9565b91508190509392505050565b6000606082019050613c176000830186613937565b8181036020830152613c298185613400565b9050613c386040830184613937565b949350505050565b6000604082019050613c556000830185613937565b613c626020830184613937565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613cac613ca7613ca284613c69565b613c87565b613c73565b9050919050565b613cbc81613c91565b82525050565b6000602082019050613cd76000830184613cb3565b92915050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b6000613d136014836133b4565b9150613d1e82613cdd565b602082019050919050565b60006020820190508181036000830152613d4281613d06565b9050919050565b6000819050919050565b613d64613d5f8261345b565b613d49565b82525050565b6000613d768285613b87565b601482019150613d868284613d53565b6020820191508190509392505050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b6000613dcc6011836133b4565b9150613dd782613d96565b602082019050919050565b60006020820190508181036000830152613dfb81613dbf565b9050919050565b6000613e0e8285613ba9565b9150613e1a8284613ba9565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e608261345b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9257613e91613e26565b5b600182019050919050565b613ea6816138d6565b8114613eb157600080fd5b50565b600081519050613ec381613e9d565b92915050565b600060208284031215613edf57613ede6132e4565b5b6000613eed84828501613eb4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613f1d82613ef6565b613f278185613f01565b9350613f378185602086016133c5565b613f40816133ef565b840191505092915050565b6000608082019050613f6060008301876134f0565b613f6d60208301866134f0565b613f7a6040830185613937565b8181036060830152613f8c8184613f12565b905095945050505050565b600081519050613fa68161331a565b92915050565b600060208284031215613fc257613fc16132e4565b5b6000613fd084828501613f97565b91505092915050565b6000604082019050613fee60008301856134f0565b613ffb6020830184613937565b9392505050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b60006140386018836133b4565b915061404382614002565b602082019050919050565b600060208201905081810360008301526140678161402b565b9050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006140a4601c83613b9e565b91506140af8261406e565b601c82019050919050565b6000819050919050565b6140d56140d0826138d6565b6140ba565b82525050565b60006140e682614097565b91506140f282846140c4565b60208201915081905092915050565b600060ff82169050919050565b61411781614101565b82525050565b600060808201905061413260008301876138e0565b61413f602083018661410e565b61414c60408301856138e0565b61415960608301846138e0565b95945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614187565b6141ce8683614187565b95508019841693508086168417925050509392505050565b60006142016141fc6141f78461345b565b613c87565b61345b565b9050919050565b6000819050919050565b61421b836141e6565b61422f61422782614208565b848454614194565b825550505050565b600090565b614244614237565b61424f818484614212565b505050565b5b818110156142735761426860008261423c565b600181019050614255565b5050565b601f8211156142b85761428981614162565b61429284614177565b810160208510156142a1578190505b6142b56142ad85614177565b830182614254565b50505b505050565b600082821c905092915050565b60006142db600019846008026142bd565b1980831691505092915050565b60006142f483836142ca565b9150826002028217905092915050565b61430d826133a9565b67ffffffffffffffff811115614326576143256135e3565b5b6143308254613aee565b61433b828285614277565b600060209050601f83116001811461436e576000841561435c578287015190505b61436685826142e8565b8655506143ce565b601f19841661437c86614162565b60005b828110156143a45784890151825560018201915060208501945060208101905061437f565b868310156143c157848901516143bd601f8916826142ca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081905092915050565b600061441b82613ef6565b6144258185614405565b93506144358185602086016133c5565b80840191505092915050565b600061444d8284614410565b91508190509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa2646970667358221220fd43bb4e2839a9c58cbe9b6db670ae4c54ce9b73cb0b1803917761224fb205eb64736f6c63430008180033",
            "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x55 PUSH3 0x5B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1CF JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6D PUSH3 0x165 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x162 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AC DUP2 PUSH3 0x18D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x44B0 PUSH3 0x1F9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1E07 ADD MSTORE DUP2 DUP2 PUSH2 0x1E5C ADD MSTORE PUSH2 0x2017 ADD MSTORE PUSH2 0x44B0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF3B90296 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xF551EB19 EQ PUSH2 0x6D0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xBEDF77A6 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA610E36A EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x54A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x7B5CF44F EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x46657FE9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5437988D EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x411 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x46657FE9 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x364 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x2E1E07C7 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E7 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x3346 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x383A JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x387A JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x38EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xD66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH2 0xF12 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x398D JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x39CD JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x3A3C JUMP JUMPDEST PUSH2 0x1297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x383A JUMP JUMPDEST PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x1765 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E5 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x755 JUMPI POP PUSH2 0x754 DUP3 PUSH2 0x182D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x768 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x779 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A5 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0x1937 JUMP JUMPDEST POP PUSH2 0x812 DUP3 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP3 DUP3 PUSH2 0x826 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B5 DUP4 DUP4 PUSH2 0x8B0 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x92B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA09 SWAP3 SWAP2 SWAP1 PUSH2 0x3BDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP6 DUP6 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73F8954B6ACA1B315E4645B31CD927C4F6E91F7072F93664C4A300DE3ED54374 DUP3 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xABA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC2733C56830B63400657697F24FC9E91D631C3C8A02B7C0D7331F0C7546EFB84 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB0A SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB34 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1297 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6C PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBBA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBEF JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC84 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC8D DUP8 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0xC96 DUP8 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xC9F DUP7 PUSH2 0x1DB0 JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x3CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xD25 DUP3 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0xD2F DUP3 DUP3 PUSH2 0x1EF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3D PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE42 DUP3 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE54 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1A PUSH2 0x209C JUMP JUMPDEST PUSH2 0xF24 PUSH1 0x0 PUSH2 0x2123 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF7A PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFB3 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFC4 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFF0 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x103D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1012 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x103D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1020 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x105A PUSH2 0x1053 PUSH2 0x1A0A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2222 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x114B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1136 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x649CDF9700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC2733C56830B63400657697F24FC9E91D631C3C8A02B7C0D7331F0C7546EFB84 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x12A2 DUP5 DUP5 DUP5 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x12AE DUP5 DUP5 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1413 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2A32605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x769BACF6500D62DC7DB4F651A1585F741ED419B5575AE0AE894FF03D3769F118 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15AB PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP PUSH2 0x15B6 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x15D9 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1605 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1652 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1627 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1635 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1663 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1679 JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x16AF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1696 SWAP3 SWAP2 SWAP1 PUSH2 0x3E02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16B8 DUP6 PUSH2 0x259F JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16CE PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176D PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E8 DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1908 JUMPI POP PUSH2 0x1907 DUP3 PUSH2 0x2608 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1943 DUP4 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AD SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19CA PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x26BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A2F PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A3C DUP6 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7E JUMPI PUSH2 0x1A7D DUP2 DUP6 DUP8 PUSH2 0x2891 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B11 JUMPI PUSH2 0x1AC0 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B96 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C99 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x2955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH2 0x1CFC DUP5 DUP3 PUSH2 0x2A3E JUMP JUMPDEST PUSH2 0x1D06 DUP2 DUP5 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D19 SWAP1 PUSH2 0x3E55 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D58 PUSH2 0x2AC7 JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x2B07 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0x2AC7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1DB8 PUSH2 0x2AC7 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E03 PUSH2 0x2AC7 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EB2 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E99 PUSH2 0x2B8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EF3 PUSH2 0x209C JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5B SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F9F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x2006 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFD SWAP2 SWAP1 PUSH2 0x38EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2010 DUP4 DUP4 PUSH2 0x2BE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x209A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20A4 PUSH2 0x1A0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C2 PUSH2 0xF6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2121 JUMPI PUSH2 0x20E5 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212D PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222C PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x229F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2392 SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2551 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x23E4 PUSH2 0x1A0A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2406 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2442 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243F SWAP2 SWAP1 PUSH2 0x3FAC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x24C6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2472 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x24BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B5 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x254F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2546 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4459 PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x25AA DUP3 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x25B5 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x25D5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2600 JUMP JUMPDEST DUP1 PUSH2 0x25DF DUP5 PUSH2 0x2C57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25F0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x267D PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C7 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x2702 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2836 JUMPI PUSH1 0x0 PUSH2 0x2712 DUP6 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x277D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2790 JUMPI POP PUSH2 0x278E DUP2 DUP6 PUSH2 0x16C3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x27D2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x2834 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289C DUP4 DUP4 DUP4 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2950 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2911 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2947 SWAP3 SWAP2 SWAP1 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x41 DUP3 MLOAD EQ PUSH2 0x299B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2992 SWAP1 PUSH2 0x404E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29AE SWAP2 SWAP1 PUSH2 0x40DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x1 DUP5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2A06 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x411D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A58 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2DE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A66 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2A8A SWAP2 SWAP1 PUSH2 0x4304 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2ABA SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x2ACF PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0x2B05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2B0F PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B81 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B78 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B8A DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2BED DUP3 PUSH2 0x2E2C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2C4A JUMPI PUSH2 0x2C44 DUP3 DUP3 PUSH2 0x2EF9 JUMP JUMPDEST POP PUSH2 0x2C53 JUMP JUMPDEST PUSH2 0x2C52 PUSH2 0x2F7D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2C66 DUP5 PUSH2 0x2FBA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CB7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2D1A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2CC5 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2DDD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D9E JUMPI POP PUSH2 0x2D9D DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2DDC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DC4 DUP4 PUSH2 0x19BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2DF0 DUP4 DUP4 PUSH2 0x310D JUMP JUMPDEST PUSH2 0x2DFD PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0C PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2E88 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E7F SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2EB5 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2F23 SWAP2 SWAP1 PUSH2 0x4441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F5E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F73 DUP6 DUP4 DUP4 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2FB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3018 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x300E JUMPI PUSH2 0x300D PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3055 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3084 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x307A JUMPI PUSH2 0x3079 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x30AD JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x30D2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x30C8 JUMPI PUSH2 0x30C7 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x30F5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x30EB JUMPI PUSH2 0x30EA PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3104 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x317F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3176 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x318D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3201 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F8 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x321B JUMPI PUSH2 0x3216 DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH2 0x328D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3243 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3285 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327C SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x328E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x32A8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3323 DUP2 PUSH2 0x32EE JUMP JUMPDEST DUP2 EQ PUSH2 0x332E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3340 DUP2 PUSH2 0x331A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x335C JUMPI PUSH2 0x335B PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x336A DUP5 DUP3 DUP6 ADD PUSH2 0x3331 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3388 DUP2 PUSH2 0x3373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x337F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33C8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340B DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x3415 DUP2 DUP6 PUSH2 0x33B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3425 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x342E DUP2 PUSH2 0x33EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3453 DUP2 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346E DUP2 PUSH2 0x345B JUMP JUMPDEST DUP2 EQ PUSH2 0x3479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x348B DUP2 PUSH2 0x3465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A7 JUMPI PUSH2 0x34A6 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34B5 DUP5 DUP3 DUP6 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E9 DUP3 PUSH2 0x34BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34F9 DUP2 PUSH2 0x34DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3523 DUP2 PUSH2 0x34DE JUMP JUMPDEST DUP2 EQ PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3540 DUP2 PUSH2 0x351A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355D JUMPI PUSH2 0x355C PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x356B DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x357C DUP6 DUP3 DUP7 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x359F JUMPI PUSH2 0x359E PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35AD DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35BE DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35CF DUP7 DUP3 DUP8 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x361B DUP3 PUSH2 0x33EF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x363A JUMPI PUSH2 0x3639 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364D PUSH2 0x32DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3659 DUP3 DUP3 PUSH2 0x3612 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3679 JUMPI PUSH2 0x3678 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3682 DUP3 PUSH2 0x33EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B1 PUSH2 0x36AC DUP5 PUSH2 0x365E JUMP JUMPDEST PUSH2 0x3643 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36CD JUMPI PUSH2 0x36CC PUSH2 0x35DE JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP5 DUP3 DUP6 PUSH2 0x368F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36F5 JUMPI PUSH2 0x36F4 PUSH2 0x35D9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3705 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x369E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3729 JUMPI PUSH2 0x3728 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3732 DUP3 PUSH2 0x33EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3752 PUSH2 0x374D DUP5 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x3643 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x376E JUMPI PUSH2 0x376D PUSH2 0x35DE JUMP JUMPDEST JUMPDEST PUSH2 0x3779 DUP5 DUP3 DUP6 PUSH2 0x368F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3796 JUMPI PUSH2 0x3795 PUSH2 0x35D9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x37A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x373F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37C8 JUMPI PUSH2 0x37C7 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37D6 DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3803 DUP7 DUP3 DUP8 ADD PUSH2 0x36E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3824 JUMPI PUSH2 0x3823 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3830 DUP7 DUP3 DUP8 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3851 JUMPI PUSH2 0x3850 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x385F DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3870 DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3891 JUMPI PUSH2 0x3890 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x389F DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38C0 JUMPI PUSH2 0x38BF PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x38CC DUP6 DUP3 DUP7 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E9 DUP2 PUSH2 0x38D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3904 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3920 JUMPI PUSH2 0x391F PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x392E DUP5 DUP3 DUP6 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3940 DUP2 PUSH2 0x345B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x395B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x396A DUP2 PUSH2 0x3373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3987 DUP2 PUSH2 0x3961 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39A4 JUMPI PUSH2 0x39A3 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B2 DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39C3 DUP6 DUP3 DUP7 ADD PUSH2 0x3978 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39E6 JUMPI PUSH2 0x39E5 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39F4 DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A05 DUP7 DUP3 DUP8 ADD PUSH2 0x347C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A26 JUMPI PUSH2 0x3A25 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3A32 DUP7 DUP3 DUP8 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A56 JUMPI PUSH2 0x3A55 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A64 DUP8 DUP3 DUP9 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A75 DUP8 DUP3 DUP9 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A86 DUP8 DUP3 DUP9 ADD PUSH2 0x347C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AA7 JUMPI PUSH2 0x3AA6 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3AB3 DUP8 DUP3 DUP9 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B06 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B19 JUMPI PUSH2 0x3B18 PUSH2 0x3ABF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B34 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3B41 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0x3B4E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x34F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6E DUP3 PUSH2 0x3B56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B80 DUP3 PUSH2 0x3B63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B98 PUSH2 0x3B93 DUP3 PUSH2 0x34DE JUMP JUMPDEST PUSH2 0x3B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x3BBE DUP2 DUP6 PUSH2 0x3B9E JUMP JUMPDEST SWAP4 POP PUSH2 0x3BCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE6 DUP3 DUP6 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3BF6 DUP3 DUP5 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C17 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3937 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C29 DUP2 DUP6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C38 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0x3C62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAC PUSH2 0x3CA7 PUSH2 0x3CA2 DUP5 PUSH2 0x3C69 JUMP JUMPDEST PUSH2 0x3C87 JUMP JUMPDEST PUSH2 0x3C73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CBC DUP2 PUSH2 0x3C91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74205665726966696572204163636F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D13 PUSH1 0x14 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D1E DUP3 PUSH2 0x3CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D42 DUP2 PUSH2 0x3D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D64 PUSH2 0x3D5F DUP3 PUSH2 0x345B JUMP JUMPDEST PUSH2 0x3D49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D76 DUP3 DUP6 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3D86 DUP3 DUP5 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74204167656E74204163636F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DCC PUSH1 0x11 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD7 DUP3 PUSH2 0x3D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DFB DUP2 PUSH2 0x3DBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0E DUP3 DUP6 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1A DUP3 DUP5 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E60 DUP3 PUSH2 0x345B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3E92 JUMPI PUSH2 0x3E91 PUSH2 0x3E26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA6 DUP2 PUSH2 0x38D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EC3 DUP2 PUSH2 0x3E9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EDF JUMPI PUSH2 0x3EDE PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EED DUP5 DUP3 DUP6 ADD PUSH2 0x3EB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1D DUP3 PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x3F27 DUP2 DUP6 PUSH2 0x3F01 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x3F40 DUP2 PUSH2 0x33EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F60 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3F6D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3F7A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3F8C DUP2 DUP5 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FA6 DUP2 PUSH2 0x331A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FC2 JUMPI PUSH2 0x3FC1 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FD0 DUP5 DUP3 DUP6 ADD PUSH2 0x3F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FEE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3FFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4038 PUSH1 0x18 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4043 DUP3 PUSH2 0x4002 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4067 DUP2 PUSH2 0x402B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A4 PUSH1 0x1C DUP4 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP PUSH2 0x40AF DUP3 PUSH2 0x406E JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40D5 PUSH2 0x40D0 DUP3 PUSH2 0x38D6 JUMP JUMPDEST PUSH2 0x40BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E6 DUP3 PUSH2 0x4097 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F2 DUP3 DUP5 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4117 DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4132 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x413F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x410E JUMP JUMPDEST PUSH2 0x414C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x4159 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x38E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x41C4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4187 JUMP JUMPDEST PUSH2 0x41CE DUP7 DUP4 PUSH2 0x4187 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4201 PUSH2 0x41FC PUSH2 0x41F7 DUP5 PUSH2 0x345B JUMP JUMPDEST PUSH2 0x3C87 JUMP JUMPDEST PUSH2 0x345B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x421B DUP4 PUSH2 0x41E6 JUMP JUMPDEST PUSH2 0x422F PUSH2 0x4227 DUP3 PUSH2 0x4208 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4194 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4244 PUSH2 0x4237 JUMP JUMPDEST PUSH2 0x424F DUP2 DUP5 DUP5 PUSH2 0x4212 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4273 JUMPI PUSH2 0x4268 PUSH1 0x0 DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4255 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42B8 JUMPI PUSH2 0x4289 DUP2 PUSH2 0x4162 JUMP JUMPDEST PUSH2 0x4292 DUP5 PUSH2 0x4177 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x42A1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AD DUP6 PUSH2 0x4177 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4254 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x42BD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F4 DUP4 DUP4 PUSH2 0x42CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x430D DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4326 JUMPI PUSH2 0x4325 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x4330 DUP3 SLOAD PUSH2 0x3AEE JUMP JUMPDEST PUSH2 0x433B DUP3 DUP3 DUP6 PUSH2 0x4277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x436E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x435C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4366 DUP6 DUP3 PUSH2 0x42E8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x43CE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x437C DUP7 PUSH2 0x4162 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43A4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x437F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x43C1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x43BD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441B DUP3 PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x4425 DUP2 DUP6 PUSH2 0x4405 JUMP JUMPDEST SWAP4 POP PUSH2 0x4435 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444D DUP3 DUP5 PUSH2 0x4410 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2FA2646970667358221220FD43BB4E2839A9C58C 0xBE SWAP12 PUSH14 0xB670AE4C54CE9B73CB0B18039177 PUSH2 0x224F 0xB2 SDIV 0xEB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
            "sourceMap": "494:2477:33:-:0;;;1171:4:2;1128:48;;;;;;;;;723:41:33;;;;;;;;;;739:22;:20;;;:22;;:::i;:::-;494:2477;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:46:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;494:2477:33:-;;;;;;;;;;;;;;;;;;;;;;;"
          },
          "deployedBytecode": {
            "functionDebugData": {
              "@UPGRADE_INTERFACE_VERSION_472": {
                "entryPoint": 4702,
                "id": 472,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@__Ownable_init_54": {
                "entryPoint": 7504,
                "id": 54,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__Ownable_init_unchained_81": {
                "entryPoint": 11015,
                "id": 81,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__Proxyed_init_9119": {
                "entryPoint": 7524,
                "id": 9119,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@__UUPSUpgradeable_init_502": {
                "entryPoint": 7675,
                "id": 502,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@__Verifie_init_9342": {
                "entryPoint": 7600,
                "id": 9342,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_approve_1549": {
                "entryPoint": 6674,
                "id": 1549,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@_approve_1623": {
                "entryPoint": 9917,
                "id": 1623,
                "parameterSlots": 4,
                "returnSlots": 0
              },
              "@_authorizeUpgrade_7267": {
                "entryPoint": 7915,
                "id": 7267,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_baseURI_7512": {
                "entryPoint": 9599,
                "id": 7512,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_checkAuthorized_1177": {
                "entryPoint": 10385,
                "id": 1177,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@_checkInitializing_370": {
                "entryPoint": 10951,
                "id": 370,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkNonPayable_2776": {
                "entryPoint": 12157,
                "id": 2776,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkNotDelegated_578": {
                "entryPoint": 8213,
                "id": 578,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkOnERC721Received_1761": {
                "entryPoint": 9120,
                "id": 1761,
                "parameterSlots": 4,
                "returnSlots": 0
              },
              "@_checkOwner_122": {
                "entryPoint": 8348,
                "id": 122,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_checkProxy_562": {
                "entryPoint": 7685,
                "id": 562,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@_getApproved_1104": {
                "entryPoint": 6591,
                "id": 1104,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@_getERC721Storage_701": {
                "entryPoint": 6415,
                "id": 701,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_getERC721URIStorageStorage_1807": {
                "entryPoint": 9559,
                "id": 1807,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_getInitializableStorage_447": {
                "entryPoint": 7464,
                "id": 447,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_getOwnableStorage_25": {
                "entryPoint": 8698,
                "id": 25,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_isAuthorized_1140": {
                "entryPoint": 11557,
                "id": 1140,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "@_isInitializing_438": {
                "entryPoint": 11778,
                "id": 438,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_mint_1353": {
                "entryPoint": 12557,
                "id": 1353,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_msgSender_1960": {
                "entryPoint": 6666,
                "id": 1960,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@_ownerOf_1084": {
                "entryPoint": 9842,
                "id": 1084,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@_requireOwned_1697": {
                "entryPoint": 6455,
                "id": 1697,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@_revert_4956": {
                "entryPoint": 12949,
                "id": 4956,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_safeMint_1368": {
                "entryPoint": 10814,
                "id": 1368,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_safeMint_1394": {
                "entryPoint": 11750,
                "id": 1394,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@_setApprovalForAll_1668": {
                "entryPoint": 8738,
                "id": 1668,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@_setImplementation_2562": {
                "entryPoint": 11820,
                "id": 2562,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_setTokenURI_1931": {
                "entryPoint": 10844,
                "id": 1931,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@_transferOwnership_193": {
                "entryPoint": 8483,
                "id": 193,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@_update_1303": {
                "entryPoint": 6692,
                "id": 1303,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "@_upgradeToAndCallUUPS_629": {
                "entryPoint": 7926,
                "id": 629,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@approve_917": {
                "entryPoint": 2073,
                "id": 917,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@balanceOf_811": {
                "entryPoint": 3657,
                "id": 811,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@create_7380": {
                "entryPoint": 2353,
                "id": 7380,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@functionDelegateCall_4876": {
                "entryPoint": 12025,
                "id": 4876,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@getAddressSlot_5019": {
                "entryPoint": 11810,
                "id": 5019,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@getAgent_9089": {
                "entryPoint": 6147,
                "id": 9089,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@getApproved_934": {
                "entryPoint": 2045,
                "id": 934,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@getImplementation_2535": {
                "entryPoint": 11149,
                "id": 2535,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@getVerifier_9312": {
                "entryPoint": 2873,
                "id": 9312,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@group_7474": {
                "entryPoint": 3878,
                "id": 7474,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@initialize_7330": {
                "entryPoint": 2914,
                "id": 7330,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@isApprovedForAll_974": {
                "entryPoint": 5827,
                "id": 974,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@join_7425": {
                "entryPoint": 4190,
                "id": 7425,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@leave_7462": {
                "entryPoint": 5000,
                "id": 7462,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@log10_6262": {
                "entryPoint": 12218,
                "id": 6262,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@mint_7503": {
                "entryPoint": 7402,
                "id": 7503,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@name_840": {
                "entryPoint": 1884,
                "id": 840,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@ownerOf_824": {
                "entryPoint": 3639,
                "id": 824,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@owner_105": {
                "entryPoint": 3951,
                "id": 105,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@proxiableUUID_520": {
                "entryPoint": 3379,
                "id": 520,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@recover_9283": {
                "entryPoint": 10581,
                "id": 9283,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "@renounceOwnership_136": {
                "entryPoint": 3858,
                "id": 136,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@safeTransferFrom_1038": {
                "entryPoint": 2841,
                "id": 1038,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@safeTransferFrom_1064": {
                "entryPoint": 4759,
                "id": 1064,
                "parameterSlots": 4,
                "returnSlots": 0
              },
              "@setAgent_9107": {
                "entryPoint": 4788,
                "id": 9107,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@setApprovalForAll_950": {
                "entryPoint": 4168,
                "id": 950,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@setVerifier_9330": {
                "entryPoint": 3430,
                "id": 9330,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@supportsInterface_1840": {
                "entryPoint": 1787,
                "id": 1840,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@supportsInterface_2146": {
                "entryPoint": 9736,
                "id": 2146,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@supportsInterface_776": {
                "entryPoint": 6189,
                "id": 776,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@symbol_856": {
                "entryPoint": 4007,
                "id": 856,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "@toString_5165": {
                "entryPoint": 11351,
                "id": 5165,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@tokenURI_1904": {
                "entryPoint": 5535,
                "id": 1904,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@tokenURI_892": {
                "entryPoint": 9631,
                "id": 892,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "@transferFrom_1020": {
                "entryPoint": 2095,
                "id": 1020,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "@transferOwnership_164": {
                "entryPoint": 5989,
                "id": 164,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "@upgradeToAndCall_2596": {
                "entryPoint": 11236,
                "id": 2596,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@upgradeToAndCall_540": {
                "entryPoint": 3348,
                "id": 540,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "@userToGroup_7271": {
                "entryPoint": 6123,
                "id": 7271,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "@verifyCallResultFromTarget_4916": {
                "entryPoint": 12806,
                "id": 4916,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "@verify_9304": {
                "entryPoint": 7249,
                "id": 9304,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_decode_available_length_t_bytes_memory_ptr": {
                "entryPoint": 14143,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_decode_available_length_t_string_memory_ptr": {
                "entryPoint": 13982,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_decode_t_address": {
                "entryPoint": 13617,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bool": {
                "entryPoint": 14712,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes32_fromMemory": {
                "entryPoint": 16052,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes4": {
                "entryPoint": 13105,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes4_fromMemory": {
                "entryPoint": 16279,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_bytes_memory_ptr": {
                "entryPoint": 14209,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_string_memory_ptr": {
                "entryPoint": 14048,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_t_uint256": {
                "entryPoint": 13436,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_address": {
                "entryPoint": 14602,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_addresst_address": {
                "entryPoint": 14394,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_addresst_uint256": {
                "entryPoint": 13702,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 3
              },
              "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                "entryPoint": 14908,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 4
              },
              "abi_decode_tuple_t_addresst_bool": {
                "entryPoint": 14733,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
                "entryPoint": 14458,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr": {
                "entryPoint": 14255,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 3
              },
              "abi_decode_tuple_t_addresst_uint256": {
                "entryPoint": 13638,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 2
              },
              "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
                "entryPoint": 14797,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 3
              },
              "abi_decode_tuple_t_bytes32_fromMemory": {
                "entryPoint": 16073,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_bytes4": {
                "entryPoint": 13126,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_bytes4_fromMemory": {
                "entryPoint": 16300,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_decode_tuple_t_uint256": {
                "entryPoint": 13457,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_address_to_t_address_fromStack": {
                "entryPoint": 13552,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
                "entryPoint": 15239,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bool_to_t_bool_fromStack": {
                "entryPoint": 13183,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bytes32_to_t_bytes32_fromStack": {
                "entryPoint": 14560,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
                "entryPoint": 16580,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
                "entryPoint": 16146,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 17424,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
                "entryPoint": 15539,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 13312,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 15273,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 16535,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 15807,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 15622,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87_to_t_string_memory_ptr_fromStack": {
                "entryPoint": 16427,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_t_uint256_to_t_uint256_fromStack": {
                "entryPoint": 14647,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
                "entryPoint": 15699,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_t_uint8_to_t_uint8_fromStack": {
                "entryPoint": 16654,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 15322,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 15722,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 17473,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 15874,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                "entryPoint": 16603,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                "entryPoint": 13567,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                "entryPoint": 16203,
                "id": null,
                "parameterSlots": 5,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                "entryPoint": 16345,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
                "entryPoint": 15135,
                "id": null,
                "parameterSlots": 4,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                "entryPoint": 13198,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                "entryPoint": 14575,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
                "entryPoint": 16669,
                "id": null,
                "parameterSlots": 5,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
                "entryPoint": 15554,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 13369,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 15842,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 15657,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
                "entryPoint": 16462,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                "entryPoint": 14662,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
                "entryPoint": 15362,
                "id": null,
                "parameterSlots": 4,
                "returnSlots": 1
              },
              "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                "entryPoint": 15424,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "allocate_memory": {
                "entryPoint": 13891,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "allocate_unbounded": {
                "entryPoint": 13018,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 1
              },
              "array_allocation_size_t_bytes_memory_ptr": {
                "entryPoint": 14094,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_allocation_size_t_string_memory_ptr": {
                "entryPoint": 13918,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_dataslot_t_string_storage": {
                "entryPoint": 16738,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_bytes_memory_ptr": {
                "entryPoint": 16118,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_length_t_string_memory_ptr": {
                "entryPoint": 13225,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
                "entryPoint": 16129,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 17413,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                "entryPoint": 13236,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
                "entryPoint": 15262,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "clean_up_bytearray_end_slots_t_string_storage": {
                "entryPoint": 17015,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "cleanup_t_address": {
                "entryPoint": 13534,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_bool": {
                "entryPoint": 13171,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_bytes32": {
                "entryPoint": 14550,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_bytes4": {
                "entryPoint": 13038,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_rational_1_by_1": {
                "entryPoint": 15465,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint160": {
                "entryPoint": 13502,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint256": {
                "entryPoint": 13403,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint64": {
                "entryPoint": 15475,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "cleanup_t_uint8": {
                "entryPoint": 16641,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "clear_storage_range_t_bytes1": {
                "entryPoint": 16980,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "convert_t_rational_1_by_1_to_t_uint64": {
                "entryPoint": 15505,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "convert_t_uint256_to_t_uint256": {
                "entryPoint": 16870,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                "entryPoint": 17156,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "copy_calldata_to_memory_with_cleanup": {
                "entryPoint": 13967,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "copy_memory_to_memory_with_cleanup": {
                "entryPoint": 13253,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "divide_by_32_ceil": {
                "entryPoint": 16759,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "extract_byte_array_length": {
                "entryPoint": 15086,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "extract_used_part_and_set_length_of_short_byte_array": {
                "entryPoint": 17128,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "finalize_allocation": {
                "entryPoint": 13842,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "identity": {
                "entryPoint": 15495,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "increment_t_uint256": {
                "entryPoint": 15957,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "leftAlign_t_address": {
                "entryPoint": 15221,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "leftAlign_t_bytes32": {
                "entryPoint": 16570,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "leftAlign_t_uint160": {
                "entryPoint": 15203,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "leftAlign_t_uint256": {
                "entryPoint": 15689,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "mask_bytes_dynamic": {
                "entryPoint": 17098,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "panic_error_0x11": {
                "entryPoint": 15910,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x12": {
                "entryPoint": 17366,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x22": {
                "entryPoint": 15039,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "panic_error_0x41": {
                "entryPoint": 13795,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "prepare_store_t_uint256": {
                "entryPoint": 16904,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                "entryPoint": 13785,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                "entryPoint": 13790,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                "entryPoint": 13033,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                "entryPoint": 13028,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 0
              },
              "round_up_to_mul_of_32": {
                "entryPoint": 13295,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "shift_left_96": {
                "entryPoint": 15190,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 1
              },
              "shift_left_dynamic": {
                "entryPoint": 16775,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "shift_right_unsigned_dynamic": {
                "entryPoint": 17085,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 1
              },
              "storage_set_to_zero_t_uint256": {
                "entryPoint": 16956,
                "id": null,
                "parameterSlots": 2,
                "returnSlots": 0
              },
              "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73": {
                "entryPoint": 16494,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8": {
                "entryPoint": 15766,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7": {
                "entryPoint": 15581,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "store_literal_in_memory_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87": {
                "entryPoint": 16386,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "update_byte_slice_dynamic32": {
                "entryPoint": 16788,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 1
              },
              "update_storage_value_t_uint256_to_t_uint256": {
                "entryPoint": 16914,
                "id": null,
                "parameterSlots": 3,
                "returnSlots": 0
              },
              "validator_revert_t_address": {
                "entryPoint": 13594,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_bool": {
                "entryPoint": 14689,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_bytes32": {
                "entryPoint": 16029,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_bytes4": {
                "entryPoint": 13082,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "validator_revert_t_uint256": {
                "entryPoint": 13413,
                "id": null,
                "parameterSlots": 1,
                "returnSlots": 0
              },
              "zero_value_for_split_t_uint256": {
                "entryPoint": 16951,
                "id": null,
                "parameterSlots": 0,
                "returnSlots": 1
              }
            },
            "generatedSources": [
              {
                "ast": {
                  "nativeSrc": "0:33211:46",
                  "nodeType": "YulBlock",
                  "src": "0:33211:46",
                  "statements": [
                    {
                      "body": {
                        "nativeSrc": "47:35:46",
                        "nodeType": "YulBlock",
                        "src": "47:35:46",
                        "statements": [
                          {
                            "nativeSrc": "57:19:46",
                            "nodeType": "YulAssignment",
                            "src": "57:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "73:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "73:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "67:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "67:5:46"
                              },
                              "nativeSrc": "67:9:46",
                              "nodeType": "YulFunctionCall",
                              "src": "67:9:46"
                            },
                            "variableNames": [
                              {
                                "name": "memPtr",
                                "nativeSrc": "57:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "57:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "allocate_unbounded",
                      "nativeSrc": "7:75:46",
                      "nodeType": "YulFunctionDefinition",
                      "returnVariables": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "40:6:46",
                          "nodeType": "YulTypedName",
                          "src": "40:6:46",
                          "type": ""
                        }
                      ],
                      "src": "7:75:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "177:28:46",
                        "nodeType": "YulBlock",
                        "src": "177:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "194:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "194:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "197:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "197:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "187:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "187:6:46"
                              },
                              "nativeSrc": "187:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "187:12:46"
                            },
                            "nativeSrc": "187:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "187:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                      "nativeSrc": "88:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "88:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "300:28:46",
                        "nodeType": "YulBlock",
                        "src": "300:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "317:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "317:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "320:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "320:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "310:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "310:6:46"
                              },
                              "nativeSrc": "310:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "310:12:46"
                            },
                            "nativeSrc": "310:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "310:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                      "nativeSrc": "211:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "211:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "378:105:46",
                        "nodeType": "YulBlock",
                        "src": "378:105:46",
                        "statements": [
                          {
                            "nativeSrc": "388:89:46",
                            "nodeType": "YulAssignment",
                            "src": "388:89:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "403:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "403:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "410:66:46",
                                  "nodeType": "YulLiteral",
                                  "src": "410:66:46",
                                  "type": "",
                                  "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "399:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "399:3:46"
                              },
                              "nativeSrc": "399:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "399:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "388:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "388:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_bytes4",
                      "nativeSrc": "334:149:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "360:5:46",
                          "nodeType": "YulTypedName",
                          "src": "360:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "370:7:46",
                          "nodeType": "YulTypedName",
                          "src": "370:7:46",
                          "type": ""
                        }
                      ],
                      "src": "334:149:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "531:78:46",
                        "nodeType": "YulBlock",
                        "src": "531:78:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "587:16:46",
                              "nodeType": "YulBlock",
                              "src": "587:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "596:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "596:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "599:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "599:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "589:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "589:6:46"
                                    },
                                    "nativeSrc": "589:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "589:12:46"
                                  },
                                  "nativeSrc": "589:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "589:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "554:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "554:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "578:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "578:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_bytes4",
                                        "nativeSrc": "561:16:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "561:16:46"
                                      },
                                      "nativeSrc": "561:23:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "561:23:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "551:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "551:2:46"
                                  },
                                  "nativeSrc": "551:34:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "551:34:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "544:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "544:6:46"
                              },
                              "nativeSrc": "544:42:46",
                              "nodeType": "YulFunctionCall",
                              "src": "544:42:46"
                            },
                            "nativeSrc": "541:62:46",
                            "nodeType": "YulIf",
                            "src": "541:62:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_bytes4",
                      "nativeSrc": "489:120:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "524:5:46",
                          "nodeType": "YulTypedName",
                          "src": "524:5:46",
                          "type": ""
                        }
                      ],
                      "src": "489:120:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "666:86:46",
                        "nodeType": "YulBlock",
                        "src": "666:86:46",
                        "statements": [
                          {
                            "nativeSrc": "676:29:46",
                            "nodeType": "YulAssignment",
                            "src": "676:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "698:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "698:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "685:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "685:12:46"
                              },
                              "nativeSrc": "685:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "685:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "676:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "676:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "740:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "740:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_bytes4",
                                "nativeSrc": "714:25:46",
                                "nodeType": "YulIdentifier",
                                "src": "714:25:46"
                              },
                              "nativeSrc": "714:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "714:32:46"
                            },
                            "nativeSrc": "714:32:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "714:32:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes4",
                      "nativeSrc": "615:137:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "644:6:46",
                          "nodeType": "YulTypedName",
                          "src": "644:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "652:3:46",
                          "nodeType": "YulTypedName",
                          "src": "652:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "660:5:46",
                          "nodeType": "YulTypedName",
                          "src": "660:5:46",
                          "type": ""
                        }
                      ],
                      "src": "615:137:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "823:262:46",
                        "nodeType": "YulBlock",
                        "src": "823:262:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "869:83:46",
                              "nodeType": "YulBlock",
                              "src": "869:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "871:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "871:77:46"
                                    },
                                    "nativeSrc": "871:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "871:79:46"
                                  },
                                  "nativeSrc": "871:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "871:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "844:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "844:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "853:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "853:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "840:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "840:3:46"
                                  },
                                  "nativeSrc": "840:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "840:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "865:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "865:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "836:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "836:3:46"
                              },
                              "nativeSrc": "836:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "836:32:46"
                            },
                            "nativeSrc": "833:119:46",
                            "nodeType": "YulIf",
                            "src": "833:119:46"
                          },
                          {
                            "nativeSrc": "962:116:46",
                            "nodeType": "YulBlock",
                            "src": "962:116:46",
                            "statements": [
                              {
                                "nativeSrc": "977:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "977:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "991:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "991:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "981:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "981:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "1006:62:46",
                                "nodeType": "YulAssignment",
                                "src": "1006:62:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "1040:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1040:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "1051:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1051:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1036:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "1036:3:46"
                                      },
                                      "nativeSrc": "1036:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1036:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "1060:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1060:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes4",
                                    "nativeSrc": "1016:19:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1016:19:46"
                                  },
                                  "nativeSrc": "1016:52:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1016:52:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1006:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1006:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bytes4",
                      "nativeSrc": "758:327:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "793:9:46",
                          "nodeType": "YulTypedName",
                          "src": "793:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "804:7:46",
                          "nodeType": "YulTypedName",
                          "src": "804:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "816:6:46",
                          "nodeType": "YulTypedName",
                          "src": "816:6:46",
                          "type": ""
                        }
                      ],
                      "src": "758:327:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1133:48:46",
                        "nodeType": "YulBlock",
                        "src": "1133:48:46",
                        "statements": [
                          {
                            "nativeSrc": "1143:32:46",
                            "nodeType": "YulAssignment",
                            "src": "1143:32:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "1168:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1168:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nativeSrc": "1161:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1161:6:46"
                                  },
                                  "nativeSrc": "1161:13:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1161:13:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "1154:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1154:6:46"
                              },
                              "nativeSrc": "1154:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1154:21:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "1143:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "1143:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_bool",
                      "nativeSrc": "1091:90:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1115:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1115:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "1125:7:46",
                          "nodeType": "YulTypedName",
                          "src": "1125:7:46",
                          "type": ""
                        }
                      ],
                      "src": "1091:90:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1246:50:46",
                        "nodeType": "YulBlock",
                        "src": "1246:50:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1263:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1263:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "1283:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1283:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bool",
                                    "nativeSrc": "1268:14:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1268:14:46"
                                  },
                                  "nativeSrc": "1268:21:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1268:21:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "1256:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1256:6:46"
                              },
                              "nativeSrc": "1256:34:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1256:34:46"
                            },
                            "nativeSrc": "1256:34:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1256:34:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nativeSrc": "1187:109:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1234:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1234:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "1241:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1241:3:46",
                          "type": ""
                        }
                      ],
                      "src": "1187:109:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1394:118:46",
                        "nodeType": "YulBlock",
                        "src": "1394:118:46",
                        "statements": [
                          {
                            "nativeSrc": "1404:26:46",
                            "nodeType": "YulAssignment",
                            "src": "1404:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "1416:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "1427:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "1427:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "1412:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "1412:3:46"
                              },
                              "nativeSrc": "1412:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1412:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "1404:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "1404:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1478:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1478:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "1491:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1491:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1502:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "1502:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "1487:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "1487:3:46"
                                  },
                                  "nativeSrc": "1487:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1487:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                "nativeSrc": "1440:37:46",
                                "nodeType": "YulIdentifier",
                                "src": "1440:37:46"
                              },
                              "nativeSrc": "1440:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1440:65:46"
                            },
                            "nativeSrc": "1440:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1440:65:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                      "nativeSrc": "1302:210:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "1366:9:46",
                          "nodeType": "YulTypedName",
                          "src": "1366:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "1378:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1378:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "1389:4:46",
                          "nodeType": "YulTypedName",
                          "src": "1389:4:46",
                          "type": ""
                        }
                      ],
                      "src": "1302:210:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1577:40:46",
                        "nodeType": "YulBlock",
                        "src": "1577:40:46",
                        "statements": [
                          {
                            "nativeSrc": "1588:22:46",
                            "nodeType": "YulAssignment",
                            "src": "1588:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1604:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "1598:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "1598:5:46"
                              },
                              "nativeSrc": "1598:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1598:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "1588:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1588:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_string_memory_ptr",
                      "nativeSrc": "1518:99:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "1560:5:46",
                          "nodeType": "YulTypedName",
                          "src": "1560:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "1570:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1570:6:46",
                          "type": ""
                        }
                      ],
                      "src": "1518:99:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1719:73:46",
                        "nodeType": "YulBlock",
                        "src": "1719:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1736:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1736:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "1741:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1741:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "1729:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "1729:6:46"
                              },
                              "nativeSrc": "1729:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1729:19:46"
                            },
                            "nativeSrc": "1729:19:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "1729:19:46"
                          },
                          {
                            "nativeSrc": "1757:29:46",
                            "nodeType": "YulAssignment",
                            "src": "1757:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "1776:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1776:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "1781:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "1781:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "1772:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "1772:3:46"
                              },
                              "nativeSrc": "1772:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1772:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "1757:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "1757:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nativeSrc": "1623:169:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "1691:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1691:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "1696:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1696:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "1707:11:46",
                          "nodeType": "YulTypedName",
                          "src": "1707:11:46",
                          "type": ""
                        }
                      ],
                      "src": "1623:169:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "1860:184:46",
                        "nodeType": "YulBlock",
                        "src": "1860:184:46",
                        "statements": [
                          {
                            "nativeSrc": "1870:10:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "1870:10:46",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "1879:1:46",
                              "nodeType": "YulLiteral",
                              "src": "1879:1:46",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nativeSrc": "1874:1:46",
                                "nodeType": "YulTypedName",
                                "src": "1874:1:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "1939:63:46",
                              "nodeType": "YulBlock",
                              "src": "1939:63:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "dst",
                                            "nativeSrc": "1964:3:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "1964:3:46"
                                          },
                                          {
                                            "name": "i",
                                            "nativeSrc": "1969:1:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "1969:1:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "1960:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1960:3:46"
                                        },
                                        "nativeSrc": "1960:11:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1960:11:46"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nativeSrc": "1983:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "1983:3:46"
                                              },
                                              {
                                                "name": "i",
                                                "nativeSrc": "1988:1:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "1988:1:46"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1979:3:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "1979:3:46"
                                            },
                                            "nativeSrc": "1979:11:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1979:11:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nativeSrc": "1973:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "1973:5:46"
                                        },
                                        "nativeSrc": "1973:18:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1973:18:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nativeSrc": "1953:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1953:6:46"
                                    },
                                    "nativeSrc": "1953:39:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1953:39:46"
                                  },
                                  "nativeSrc": "1953:39:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1953:39:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nativeSrc": "1900:1:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1900:1:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "1903:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "1903:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nativeSrc": "1897:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "1897:2:46"
                              },
                              "nativeSrc": "1897:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "1897:13:46"
                            },
                            "nativeSrc": "1889:113:46",
                            "nodeType": "YulForLoop",
                            "post": {
                              "nativeSrc": "1911:19:46",
                              "nodeType": "YulBlock",
                              "src": "1911:19:46",
                              "statements": [
                                {
                                  "nativeSrc": "1913:15:46",
                                  "nodeType": "YulAssignment",
                                  "src": "1913:15:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "1922:1:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "1922:1:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1925:2:46",
                                        "nodeType": "YulLiteral",
                                        "src": "1925:2:46",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1918:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1918:3:46"
                                    },
                                    "nativeSrc": "1918:10:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1918:10:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "1913:1:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "1913:1:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nativeSrc": "1893:3:46",
                              "nodeType": "YulBlock",
                              "src": "1893:3:46",
                              "statements": []
                            },
                            "src": "1889:113:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nativeSrc": "2022:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2022:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "2027:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2027:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "2018:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2018:3:46"
                                  },
                                  "nativeSrc": "2018:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2018:16:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "2036:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "2036:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "2011:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "2011:6:46"
                              },
                              "nativeSrc": "2011:27:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2011:27:46"
                            },
                            "nativeSrc": "2011:27:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "2011:27:46"
                          }
                        ]
                      },
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nativeSrc": "1798:246:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "1842:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1842:3:46",
                          "type": ""
                        },
                        {
                          "name": "dst",
                          "nativeSrc": "1847:3:46",
                          "nodeType": "YulTypedName",
                          "src": "1847:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "1852:6:46",
                          "nodeType": "YulTypedName",
                          "src": "1852:6:46",
                          "type": ""
                        }
                      ],
                      "src": "1798:246:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2098:54:46",
                        "nodeType": "YulBlock",
                        "src": "2098:54:46",
                        "statements": [
                          {
                            "nativeSrc": "2108:38:46",
                            "nodeType": "YulAssignment",
                            "src": "2108:38:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "2126:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2126:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2133:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "2133:2:46",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "2122:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2122:3:46"
                                  },
                                  "nativeSrc": "2122:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2122:14:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2142:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "2142:2:46",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nativeSrc": "2138:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2138:3:46"
                                  },
                                  "nativeSrc": "2138:7:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2138:7:46"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "2118:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2118:3:46"
                              },
                              "nativeSrc": "2118:28:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2118:28:46"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nativeSrc": "2108:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "2108:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "round_up_to_mul_of_32",
                      "nativeSrc": "2050:102:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "2081:5:46",
                          "nodeType": "YulTypedName",
                          "src": "2081:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nativeSrc": "2091:6:46",
                          "nodeType": "YulTypedName",
                          "src": "2091:6:46",
                          "type": ""
                        }
                      ],
                      "src": "2050:102:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2250:285:46",
                        "nodeType": "YulBlock",
                        "src": "2250:285:46",
                        "statements": [
                          {
                            "nativeSrc": "2260:53:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "2260:53:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2307:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2307:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_string_memory_ptr",
                                "nativeSrc": "2274:32:46",
                                "nodeType": "YulIdentifier",
                                "src": "2274:32:46"
                              },
                              "nativeSrc": "2274:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2274:39:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "2264:6:46",
                                "nodeType": "YulTypedName",
                                "src": "2264:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "2322:78:46",
                            "nodeType": "YulAssignment",
                            "src": "2322:78:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2388:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2388:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "2393:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2393:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "2329:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "2329:58:46"
                              },
                              "nativeSrc": "2329:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2329:71:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "2322:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2322:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "2448:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2448:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2455:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "2455:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "2444:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2444:3:46"
                                  },
                                  "nativeSrc": "2444:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2444:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "2462:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2462:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "2467:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2467:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "2409:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "2409:34:46"
                              },
                              "nativeSrc": "2409:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2409:65:46"
                            },
                            "nativeSrc": "2409:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "2409:65:46"
                          },
                          {
                            "nativeSrc": "2483:46:46",
                            "nodeType": "YulAssignment",
                            "src": "2483:46:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "2494:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2494:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "2521:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2521:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "round_up_to_mul_of_32",
                                    "nativeSrc": "2499:21:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2499:21:46"
                                  },
                                  "nativeSrc": "2499:29:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2499:29:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "2490:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2490:3:46"
                              },
                              "nativeSrc": "2490:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2490:39:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "2483:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2483:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "2158:377:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "2231:5:46",
                          "nodeType": "YulTypedName",
                          "src": "2231:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "2238:3:46",
                          "nodeType": "YulTypedName",
                          "src": "2238:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "2246:3:46",
                          "nodeType": "YulTypedName",
                          "src": "2246:3:46",
                          "type": ""
                        }
                      ],
                      "src": "2158:377:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2659:195:46",
                        "nodeType": "YulBlock",
                        "src": "2659:195:46",
                        "statements": [
                          {
                            "nativeSrc": "2669:26:46",
                            "nodeType": "YulAssignment",
                            "src": "2669:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "2681:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2681:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "2692:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "2692:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "2677:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "2677:3:46"
                              },
                              "nativeSrc": "2677:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2677:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "2669:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "2669:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "2716:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2716:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2727:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "2727:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "2712:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2712:3:46"
                                  },
                                  "nativeSrc": "2712:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2712:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "2735:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2735:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "2741:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "2741:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "2731:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "2731:3:46"
                                  },
                                  "nativeSrc": "2731:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2731:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "2705:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "2705:6:46"
                              },
                              "nativeSrc": "2705:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2705:47:46"
                            },
                            "nativeSrc": "2705:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "2705:47:46"
                          },
                          {
                            "nativeSrc": "2761:86:46",
                            "nodeType": "YulAssignment",
                            "src": "2761:86:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2833:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2833:6:46"
                                },
                                {
                                  "name": "tail",
                                  "nativeSrc": "2842:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "2842:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "2769:63:46",
                                "nodeType": "YulIdentifier",
                                "src": "2769:63:46"
                              },
                              "nativeSrc": "2769:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2769:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "2761:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "2761:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "2541:313:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "2631:9:46",
                          "nodeType": "YulTypedName",
                          "src": "2631:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "2643:6:46",
                          "nodeType": "YulTypedName",
                          "src": "2643:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "2654:4:46",
                          "nodeType": "YulTypedName",
                          "src": "2654:4:46",
                          "type": ""
                        }
                      ],
                      "src": "2541:313:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2905:32:46",
                        "nodeType": "YulBlock",
                        "src": "2905:32:46",
                        "statements": [
                          {
                            "nativeSrc": "2915:16:46",
                            "nodeType": "YulAssignment",
                            "src": "2915:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "2926:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "2926:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "2915:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "2915:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint256",
                      "nativeSrc": "2860:77:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "2887:5:46",
                          "nodeType": "YulTypedName",
                          "src": "2887:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "2897:7:46",
                          "nodeType": "YulTypedName",
                          "src": "2897:7:46",
                          "type": ""
                        }
                      ],
                      "src": "2860:77:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "2986:79:46",
                        "nodeType": "YulBlock",
                        "src": "2986:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "3043:16:46",
                              "nodeType": "YulBlock",
                              "src": "3043:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3052:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "3052:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3055:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "3055:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "3045:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3045:6:46"
                                    },
                                    "nativeSrc": "3045:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3045:12:46"
                                  },
                                  "nativeSrc": "3045:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3045:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "3009:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3009:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "3034:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "3034:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nativeSrc": "3016:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "3016:17:46"
                                      },
                                      "nativeSrc": "3016:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3016:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "3006:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3006:2:46"
                                  },
                                  "nativeSrc": "3006:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3006:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "2999:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "2999:6:46"
                              },
                              "nativeSrc": "2999:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "2999:43:46"
                            },
                            "nativeSrc": "2996:63:46",
                            "nodeType": "YulIf",
                            "src": "2996:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_uint256",
                      "nativeSrc": "2943:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "2979:5:46",
                          "nodeType": "YulTypedName",
                          "src": "2979:5:46",
                          "type": ""
                        }
                      ],
                      "src": "2943:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3123:87:46",
                        "nodeType": "YulBlock",
                        "src": "3123:87:46",
                        "statements": [
                          {
                            "nativeSrc": "3133:29:46",
                            "nodeType": "YulAssignment",
                            "src": "3133:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "3155:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3155:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "3142:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "3142:12:46"
                              },
                              "nativeSrc": "3142:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3142:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "3133:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "3133:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3198:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3198:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_uint256",
                                "nativeSrc": "3171:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "3171:26:46"
                              },
                              "nativeSrc": "3171:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3171:33:46"
                            },
                            "nativeSrc": "3171:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "3171:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_uint256",
                      "nativeSrc": "3071:139:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "3101:6:46",
                          "nodeType": "YulTypedName",
                          "src": "3101:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "3109:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3109:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "3117:5:46",
                          "nodeType": "YulTypedName",
                          "src": "3117:5:46",
                          "type": ""
                        }
                      ],
                      "src": "3071:139:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3282:263:46",
                        "nodeType": "YulBlock",
                        "src": "3282:263:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "3328:83:46",
                              "nodeType": "YulBlock",
                              "src": "3328:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "3330:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3330:77:46"
                                    },
                                    "nativeSrc": "3330:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3330:79:46"
                                  },
                                  "nativeSrc": "3330:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3330:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "3303:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3303:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "3312:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3312:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "3299:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3299:3:46"
                                  },
                                  "nativeSrc": "3299:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3299:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3324:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "3324:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "3295:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "3295:3:46"
                              },
                              "nativeSrc": "3295:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3295:32:46"
                            },
                            "nativeSrc": "3292:119:46",
                            "nodeType": "YulIf",
                            "src": "3292:119:46"
                          },
                          {
                            "nativeSrc": "3421:117:46",
                            "nodeType": "YulBlock",
                            "src": "3421:117:46",
                            "statements": [
                              {
                                "nativeSrc": "3436:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "3436:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "3450:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "3450:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3440:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "3440:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "3465:63:46",
                                "nodeType": "YulAssignment",
                                "src": "3465:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "3500:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "3500:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "3511:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "3511:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "3496:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "3496:3:46"
                                      },
                                      "nativeSrc": "3496:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3496:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "3520:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3520:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "3475:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3475:20:46"
                                  },
                                  "nativeSrc": "3475:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3475:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "3465:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3465:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_uint256",
                      "nativeSrc": "3216:329:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "3252:9:46",
                          "nodeType": "YulTypedName",
                          "src": "3252:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "3263:7:46",
                          "nodeType": "YulTypedName",
                          "src": "3263:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "3275:6:46",
                          "nodeType": "YulTypedName",
                          "src": "3275:6:46",
                          "type": ""
                        }
                      ],
                      "src": "3216:329:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3596:81:46",
                        "nodeType": "YulBlock",
                        "src": "3596:81:46",
                        "statements": [
                          {
                            "nativeSrc": "3606:65:46",
                            "nodeType": "YulAssignment",
                            "src": "3606:65:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3621:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3621:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3628:42:46",
                                  "nodeType": "YulLiteral",
                                  "src": "3628:42:46",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "3617:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "3617:3:46"
                              },
                              "nativeSrc": "3617:54:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3617:54:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "3606:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "3606:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint160",
                      "nativeSrc": "3551:126:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "3578:5:46",
                          "nodeType": "YulTypedName",
                          "src": "3578:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "3588:7:46",
                          "nodeType": "YulTypedName",
                          "src": "3588:7:46",
                          "type": ""
                        }
                      ],
                      "src": "3551:126:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3728:51:46",
                        "nodeType": "YulBlock",
                        "src": "3728:51:46",
                        "statements": [
                          {
                            "nativeSrc": "3738:35:46",
                            "nodeType": "YulAssignment",
                            "src": "3738:35:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3767:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3767:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint160",
                                "nativeSrc": "3749:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "3749:17:46"
                              },
                              "nativeSrc": "3749:24:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3749:24:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "3738:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "3738:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_address",
                      "nativeSrc": "3683:96:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "3710:5:46",
                          "nodeType": "YulTypedName",
                          "src": "3710:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "3720:7:46",
                          "nodeType": "YulTypedName",
                          "src": "3720:7:46",
                          "type": ""
                        }
                      ],
                      "src": "3683:96:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "3850:53:46",
                        "nodeType": "YulBlock",
                        "src": "3850:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "3867:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "3867:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "3890:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "3890:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nativeSrc": "3872:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "3872:17:46"
                                  },
                                  "nativeSrc": "3872:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3872:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "3860:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "3860:6:46"
                              },
                              "nativeSrc": "3860:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "3860:37:46"
                            },
                            "nativeSrc": "3860:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "3860:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nativeSrc": "3785:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "3838:5:46",
                          "nodeType": "YulTypedName",
                          "src": "3838:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "3845:3:46",
                          "nodeType": "YulTypedName",
                          "src": "3845:3:46",
                          "type": ""
                        }
                      ],
                      "src": "3785:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4007:124:46",
                        "nodeType": "YulBlock",
                        "src": "4007:124:46",
                        "statements": [
                          {
                            "nativeSrc": "4017:26:46",
                            "nodeType": "YulAssignment",
                            "src": "4017:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "4029:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4029:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "4040:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "4040:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "4025:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "4025:3:46"
                              },
                              "nativeSrc": "4025:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4025:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "4017:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "4017:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4097:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4097:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "4110:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4110:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4121:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "4121:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "4106:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4106:3:46"
                                  },
                                  "nativeSrc": "4106:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4106:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "4053:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "4053:43:46"
                              },
                              "nativeSrc": "4053:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4053:71:46"
                            },
                            "nativeSrc": "4053:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "4053:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                      "nativeSrc": "3909:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "3979:9:46",
                          "nodeType": "YulTypedName",
                          "src": "3979:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "3991:6:46",
                          "nodeType": "YulTypedName",
                          "src": "3991:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "4002:4:46",
                          "nodeType": "YulTypedName",
                          "src": "4002:4:46",
                          "type": ""
                        }
                      ],
                      "src": "3909:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4180:79:46",
                        "nodeType": "YulBlock",
                        "src": "4180:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "4237:16:46",
                              "nodeType": "YulBlock",
                              "src": "4237:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4246:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "4246:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4249:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "4249:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "4239:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4239:6:46"
                                    },
                                    "nativeSrc": "4239:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4239:12:46"
                                  },
                                  "nativeSrc": "4239:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4239:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "4203:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4203:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "4228:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "4228:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_address",
                                        "nativeSrc": "4210:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4210:17:46"
                                      },
                                      "nativeSrc": "4210:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4210:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "4200:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4200:2:46"
                                  },
                                  "nativeSrc": "4200:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4200:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "4193:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "4193:6:46"
                              },
                              "nativeSrc": "4193:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4193:43:46"
                            },
                            "nativeSrc": "4190:63:46",
                            "nodeType": "YulIf",
                            "src": "4190:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_address",
                      "nativeSrc": "4137:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "4173:5:46",
                          "nodeType": "YulTypedName",
                          "src": "4173:5:46",
                          "type": ""
                        }
                      ],
                      "src": "4137:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4317:87:46",
                        "nodeType": "YulBlock",
                        "src": "4317:87:46",
                        "statements": [
                          {
                            "nativeSrc": "4327:29:46",
                            "nodeType": "YulAssignment",
                            "src": "4327:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "4349:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4349:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "4336:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "4336:12:46"
                              },
                              "nativeSrc": "4336:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4336:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "4327:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "4327:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "4392:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "4392:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_address",
                                "nativeSrc": "4365:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "4365:26:46"
                              },
                              "nativeSrc": "4365:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4365:33:46"
                            },
                            "nativeSrc": "4365:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "4365:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_address",
                      "nativeSrc": "4265:139:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "4295:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4295:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "4303:3:46",
                          "nodeType": "YulTypedName",
                          "src": "4303:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "4311:5:46",
                          "nodeType": "YulTypedName",
                          "src": "4311:5:46",
                          "type": ""
                        }
                      ],
                      "src": "4265:139:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4493:391:46",
                        "nodeType": "YulBlock",
                        "src": "4493:391:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "4539:83:46",
                              "nodeType": "YulBlock",
                              "src": "4539:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "4541:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4541:77:46"
                                    },
                                    "nativeSrc": "4541:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4541:79:46"
                                  },
                                  "nativeSrc": "4541:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4541:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "4514:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4514:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "4523:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4523:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "4510:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4510:3:46"
                                  },
                                  "nativeSrc": "4510:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4510:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "4535:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "4535:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "4506:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "4506:3:46"
                              },
                              "nativeSrc": "4506:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "4506:32:46"
                            },
                            "nativeSrc": "4503:119:46",
                            "nodeType": "YulIf",
                            "src": "4503:119:46"
                          },
                          {
                            "nativeSrc": "4632:117:46",
                            "nodeType": "YulBlock",
                            "src": "4632:117:46",
                            "statements": [
                              {
                                "nativeSrc": "4647:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "4647:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "4661:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "4661:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "4651:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "4651:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "4676:63:46",
                                "nodeType": "YulAssignment",
                                "src": "4676:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "4711:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "4711:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "4722:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "4722:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "4707:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4707:3:46"
                                      },
                                      "nativeSrc": "4707:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4707:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "4731:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4731:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "4686:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4686:20:46"
                                  },
                                  "nativeSrc": "4686:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4686:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "4676:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4676:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "4759:118:46",
                            "nodeType": "YulBlock",
                            "src": "4759:118:46",
                            "statements": [
                              {
                                "nativeSrc": "4774:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "4774:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "4788:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "4788:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "4778:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "4778:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "4804:63:46",
                                "nodeType": "YulAssignment",
                                "src": "4804:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "4839:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "4839:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "4850:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "4850:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "4835:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "4835:3:46"
                                      },
                                      "nativeSrc": "4835:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4835:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "4859:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "4859:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "4814:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4814:20:46"
                                  },
                                  "nativeSrc": "4814:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4814:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "4804:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "4804:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint256",
                      "nativeSrc": "4410:474:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "4455:9:46",
                          "nodeType": "YulTypedName",
                          "src": "4455:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "4466:7:46",
                          "nodeType": "YulTypedName",
                          "src": "4466:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "4478:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4478:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "4486:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4486:6:46",
                          "type": ""
                        }
                      ],
                      "src": "4410:474:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "4990:519:46",
                        "nodeType": "YulBlock",
                        "src": "4990:519:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "5036:83:46",
                              "nodeType": "YulBlock",
                              "src": "5036:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "5038:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5038:77:46"
                                    },
                                    "nativeSrc": "5038:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5038:79:46"
                                  },
                                  "nativeSrc": "5038:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5038:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5011:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5011:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "5020:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5020:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "5007:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5007:3:46"
                                  },
                                  "nativeSrc": "5007:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5007:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5032:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5032:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "5003:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "5003:3:46"
                              },
                              "nativeSrc": "5003:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5003:32:46"
                            },
                            "nativeSrc": "5000:119:46",
                            "nodeType": "YulIf",
                            "src": "5000:119:46"
                          },
                          {
                            "nativeSrc": "5129:117:46",
                            "nodeType": "YulBlock",
                            "src": "5129:117:46",
                            "statements": [
                              {
                                "nativeSrc": "5144:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "5144:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "5158:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5158:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "5148:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "5148:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "5173:63:46",
                                "nodeType": "YulAssignment",
                                "src": "5173:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "5208:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5208:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "5219:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5219:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "5204:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "5204:3:46"
                                      },
                                      "nativeSrc": "5204:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5204:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5228:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5228:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "5183:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5183:20:46"
                                  },
                                  "nativeSrc": "5183:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5183:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5173:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5173:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "5256:118:46",
                            "nodeType": "YulBlock",
                            "src": "5256:118:46",
                            "statements": [
                              {
                                "nativeSrc": "5271:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "5271:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "5285:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5285:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "5275:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "5275:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "5301:63:46",
                                "nodeType": "YulAssignment",
                                "src": "5301:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "5336:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5336:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "5347:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5347:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "5332:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "5332:3:46"
                                      },
                                      "nativeSrc": "5332:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5332:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5356:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5356:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "5311:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5311:20:46"
                                  },
                                  "nativeSrc": "5311:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5311:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5301:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5301:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "5384:118:46",
                            "nodeType": "YulBlock",
                            "src": "5384:118:46",
                            "statements": [
                              {
                                "nativeSrc": "5399:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "5399:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "5413:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5413:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "5403:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "5403:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "5429:63:46",
                                "nodeType": "YulAssignment",
                                "src": "5429:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "5464:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5464:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "5475:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "5475:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "5460:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "5460:3:46"
                                      },
                                      "nativeSrc": "5460:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5460:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "5484:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "5484:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "5439:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5439:20:46"
                                  },
                                  "nativeSrc": "5439:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5439:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5429:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "5429:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                      "nativeSrc": "4890:619:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "4944:9:46",
                          "nodeType": "YulTypedName",
                          "src": "4944:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "4955:7:46",
                          "nodeType": "YulTypedName",
                          "src": "4955:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "4967:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4967:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "4975:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4975:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "4983:6:46",
                          "nodeType": "YulTypedName",
                          "src": "4983:6:46",
                          "type": ""
                        }
                      ],
                      "src": "4890:619:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5604:28:46",
                        "nodeType": "YulBlock",
                        "src": "5604:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5621:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5621:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5624:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5624:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "5614:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5614:6:46"
                              },
                              "nativeSrc": "5614:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5614:12:46"
                            },
                            "nativeSrc": "5614:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5614:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                      "nativeSrc": "5515:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "5515:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5727:28:46",
                        "nodeType": "YulBlock",
                        "src": "5727:28:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5744:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5744:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5747:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5747:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "5737:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5737:6:46"
                              },
                              "nativeSrc": "5737:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5737:12:46"
                            },
                            "nativeSrc": "5737:12:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5737:12:46"
                          }
                        ]
                      },
                      "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                      "nativeSrc": "5638:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "5638:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5789:152:46",
                        "nodeType": "YulBlock",
                        "src": "5789:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5806:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5806:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5809:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5809:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "5799:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5799:6:46"
                              },
                              "nativeSrc": "5799:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5799:88:46"
                            },
                            "nativeSrc": "5799:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5799:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5903:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5903:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5906:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5906:4:46",
                                  "type": "",
                                  "value": "0x41"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "5896:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5896:6:46"
                              },
                              "nativeSrc": "5896:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5896:15:46"
                            },
                            "nativeSrc": "5896:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5896:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "5927:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5927:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "5930:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "5930:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "5920:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "5920:6:46"
                              },
                              "nativeSrc": "5920:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "5920:15:46"
                            },
                            "nativeSrc": "5920:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "5920:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x41",
                      "nativeSrc": "5761:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "5761:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "5990:238:46",
                        "nodeType": "YulBlock",
                        "src": "5990:238:46",
                        "statements": [
                          {
                            "nativeSrc": "6000:58:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "6000:58:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "6022:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6022:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "size",
                                      "nativeSrc": "6052:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6052:4:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "round_up_to_mul_of_32",
                                    "nativeSrc": "6030:21:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6030:21:46"
                                  },
                                  "nativeSrc": "6030:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6030:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "6018:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "6018:3:46"
                              },
                              "nativeSrc": "6018:40:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6018:40:46"
                            },
                            "variables": [
                              {
                                "name": "newFreePtr",
                                "nativeSrc": "6004:10:46",
                                "nodeType": "YulTypedName",
                                "src": "6004:10:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "6169:22:46",
                              "nodeType": "YulBlock",
                              "src": "6169:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "6171:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6171:16:46"
                                    },
                                    "nativeSrc": "6171:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6171:18:46"
                                  },
                                  "nativeSrc": "6171:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6171:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nativeSrc": "6112:10:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6112:10:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6124:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "6124:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "6109:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6109:2:46"
                                  },
                                  "nativeSrc": "6109:34:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6109:34:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "newFreePtr",
                                      "nativeSrc": "6148:10:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6148:10:46"
                                    },
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "6160:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6160:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "6145:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6145:2:46"
                                  },
                                  "nativeSrc": "6145:22:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6145:22:46"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nativeSrc": "6106:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "6106:2:46"
                              },
                              "nativeSrc": "6106:62:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6106:62:46"
                            },
                            "nativeSrc": "6103:88:46",
                            "nodeType": "YulIf",
                            "src": "6103:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "6207:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6207:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "6211:10:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6211:10:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "6200:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6200:6:46"
                              },
                              "nativeSrc": "6200:22:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6200:22:46"
                            },
                            "nativeSrc": "6200:22:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6200:22:46"
                          }
                        ]
                      },
                      "name": "finalize_allocation",
                      "nativeSrc": "5947:281:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "5976:6:46",
                          "nodeType": "YulTypedName",
                          "src": "5976:6:46",
                          "type": ""
                        },
                        {
                          "name": "size",
                          "nativeSrc": "5984:4:46",
                          "nodeType": "YulTypedName",
                          "src": "5984:4:46",
                          "type": ""
                        }
                      ],
                      "src": "5947:281:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6275:88:46",
                        "nodeType": "YulBlock",
                        "src": "6275:88:46",
                        "statements": [
                          {
                            "nativeSrc": "6285:30:46",
                            "nodeType": "YulAssignment",
                            "src": "6285:30:46",
                            "value": {
                              "arguments": [],
                              "functionName": {
                                "name": "allocate_unbounded",
                                "nativeSrc": "6295:18:46",
                                "nodeType": "YulIdentifier",
                                "src": "6295:18:46"
                              },
                              "nativeSrc": "6295:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6295:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "memPtr",
                                "nativeSrc": "6285:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6285:6:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "6344:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6344:6:46"
                                },
                                {
                                  "name": "size",
                                  "nativeSrc": "6352:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6352:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "finalize_allocation",
                                "nativeSrc": "6324:19:46",
                                "nodeType": "YulIdentifier",
                                "src": "6324:19:46"
                              },
                              "nativeSrc": "6324:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6324:33:46"
                            },
                            "nativeSrc": "6324:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6324:33:46"
                          }
                        ]
                      },
                      "name": "allocate_memory",
                      "nativeSrc": "6234:129:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "size",
                          "nativeSrc": "6259:4:46",
                          "nodeType": "YulTypedName",
                          "src": "6259:4:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "6268:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6268:6:46",
                          "type": ""
                        }
                      ],
                      "src": "6234:129:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6436:241:46",
                        "nodeType": "YulBlock",
                        "src": "6436:241:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "6541:22:46",
                              "nodeType": "YulBlock",
                              "src": "6541:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "6543:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6543:16:46"
                                    },
                                    "nativeSrc": "6543:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6543:18:46"
                                  },
                                  "nativeSrc": "6543:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6543:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "6513:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6513:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6521:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6521:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "6510:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "6510:2:46"
                              },
                              "nativeSrc": "6510:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6510:30:46"
                            },
                            "nativeSrc": "6507:56:46",
                            "nodeType": "YulIf",
                            "src": "6507:56:46"
                          },
                          {
                            "nativeSrc": "6573:37:46",
                            "nodeType": "YulAssignment",
                            "src": "6573:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "6603:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6603:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nativeSrc": "6581:21:46",
                                "nodeType": "YulIdentifier",
                                "src": "6581:21:46"
                              },
                              "nativeSrc": "6581:29:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6581:29:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "6573:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "6573:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "6647:23:46",
                            "nodeType": "YulAssignment",
                            "src": "6647:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "size",
                                  "nativeSrc": "6659:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6659:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6665:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6665:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "6655:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "6655:3:46"
                              },
                              "nativeSrc": "6655:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6655:15:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "6647:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "6647:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_allocation_size_t_string_memory_ptr",
                      "nativeSrc": "6369:308:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "length",
                          "nativeSrc": "6420:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6420:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "size",
                          "nativeSrc": "6431:4:46",
                          "nodeType": "YulTypedName",
                          "src": "6431:4:46",
                          "type": ""
                        }
                      ],
                      "src": "6369:308:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6747:82:46",
                        "nodeType": "YulBlock",
                        "src": "6747:82:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "6770:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6770:3:46"
                                },
                                {
                                  "name": "src",
                                  "nativeSrc": "6775:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6775:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "6780:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "6780:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldatacopy",
                                "nativeSrc": "6757:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "6757:12:46"
                              },
                              "nativeSrc": "6757:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6757:30:46"
                            },
                            "nativeSrc": "6757:30:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6757:30:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nativeSrc": "6807:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6807:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "6812:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6812:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "6803:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6803:3:46"
                                  },
                                  "nativeSrc": "6803:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6803:16:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "6821:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "6821:1:46",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "6796:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "6796:6:46"
                              },
                              "nativeSrc": "6796:27:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6796:27:46"
                            },
                            "nativeSrc": "6796:27:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "6796:27:46"
                          }
                        ]
                      },
                      "name": "copy_calldata_to_memory_with_cleanup",
                      "nativeSrc": "6683:146:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "6729:3:46",
                          "nodeType": "YulTypedName",
                          "src": "6729:3:46",
                          "type": ""
                        },
                        {
                          "name": "dst",
                          "nativeSrc": "6734:3:46",
                          "nodeType": "YulTypedName",
                          "src": "6734:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "6739:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6739:6:46",
                          "type": ""
                        }
                      ],
                      "src": "6683:146:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "6919:341:46",
                        "nodeType": "YulBlock",
                        "src": "6919:341:46",
                        "statements": [
                          {
                            "nativeSrc": "6929:75:46",
                            "nodeType": "YulAssignment",
                            "src": "6929:75:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "6996:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "6996:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_allocation_size_t_string_memory_ptr",
                                    "nativeSrc": "6954:41:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "6954:41:46"
                                  },
                                  "nativeSrc": "6954:49:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6954:49:46"
                                }
                              ],
                              "functionName": {
                                "name": "allocate_memory",
                                "nativeSrc": "6938:15:46",
                                "nodeType": "YulIdentifier",
                                "src": "6938:15:46"
                              },
                              "nativeSrc": "6938:66:46",
                              "nodeType": "YulFunctionCall",
                              "src": "6938:66:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "6929:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "6929:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "7020:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7020:5:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "7027:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7027:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "7013:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "7013:6:46"
                              },
                              "nativeSrc": "7013:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7013:21:46"
                            },
                            "nativeSrc": "7013:21:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "7013:21:46"
                          },
                          {
                            "nativeSrc": "7043:27:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "7043:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "7058:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7058:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7065:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7065:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "7054:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "7054:3:46"
                              },
                              "nativeSrc": "7054:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7054:16:46"
                            },
                            "variables": [
                              {
                                "name": "dst",
                                "nativeSrc": "7047:3:46",
                                "nodeType": "YulTypedName",
                                "src": "7047:3:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "7108:83:46",
                              "nodeType": "YulBlock",
                              "src": "7108:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                      "nativeSrc": "7110:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7110:77:46"
                                    },
                                    "nativeSrc": "7110:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7110:79:46"
                                  },
                                  "nativeSrc": "7110:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7110:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nativeSrc": "7089:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7089:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "7094:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7094:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "7085:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7085:3:46"
                                  },
                                  "nativeSrc": "7085:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7085:16:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "7103:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7103:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "7082:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "7082:2:46"
                              },
                              "nativeSrc": "7082:25:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7082:25:46"
                            },
                            "nativeSrc": "7079:112:46",
                            "nodeType": "YulIf",
                            "src": "7079:112:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nativeSrc": "7237:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7237:3:46"
                                },
                                {
                                  "name": "dst",
                                  "nativeSrc": "7242:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7242:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "7247:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7247:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_calldata_to_memory_with_cleanup",
                                "nativeSrc": "7200:36:46",
                                "nodeType": "YulIdentifier",
                                "src": "7200:36:46"
                              },
                              "nativeSrc": "7200:54:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7200:54:46"
                            },
                            "nativeSrc": "7200:54:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "7200:54:46"
                          }
                        ]
                      },
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nativeSrc": "6835:425:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "6892:3:46",
                          "nodeType": "YulTypedName",
                          "src": "6892:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "6897:6:46",
                          "nodeType": "YulTypedName",
                          "src": "6897:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "6905:3:46",
                          "nodeType": "YulTypedName",
                          "src": "6905:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "6913:5:46",
                          "nodeType": "YulTypedName",
                          "src": "6913:5:46",
                          "type": ""
                        }
                      ],
                      "src": "6835:425:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "7342:278:46",
                        "nodeType": "YulBlock",
                        "src": "7342:278:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "7391:83:46",
                              "nodeType": "YulBlock",
                              "src": "7391:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                      "nativeSrc": "7393:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7393:77:46"
                                    },
                                    "nativeSrc": "7393:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7393:79:46"
                                  },
                                  "nativeSrc": "7393:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7393:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nativeSrc": "7370:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "7370:6:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "7378:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "7378:4:46",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "7366:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "7366:3:46"
                                      },
                                      "nativeSrc": "7366:17:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7366:17:46"
                                    },
                                    {
                                      "name": "end",
                                      "nativeSrc": "7385:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7385:3:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nativeSrc": "7362:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7362:3:46"
                                  },
                                  "nativeSrc": "7362:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7362:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "7355:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "7355:6:46"
                              },
                              "nativeSrc": "7355:35:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7355:35:46"
                            },
                            "nativeSrc": "7352:122:46",
                            "nodeType": "YulIf",
                            "src": "7352:122:46"
                          },
                          {
                            "nativeSrc": "7483:34:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "7483:34:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "7510:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7510:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "7497:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "7497:12:46"
                              },
                              "nativeSrc": "7497:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7497:20:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "7487:6:46",
                                "nodeType": "YulTypedName",
                                "src": "7487:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7526:88:46",
                            "nodeType": "YulAssignment",
                            "src": "7526:88:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "7587:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7587:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "7595:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "7595:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "7583:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "7583:3:46"
                                  },
                                  "nativeSrc": "7583:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7583:17:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "7602:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7602:6:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "7610:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7610:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_available_length_t_string_memory_ptr",
                                "nativeSrc": "7535:47:46",
                                "nodeType": "YulIdentifier",
                                "src": "7535:47:46"
                              },
                              "nativeSrc": "7535:79:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7535:79:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "7526:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "7526:5:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_t_string_memory_ptr",
                      "nativeSrc": "7280:340:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "7320:6:46",
                          "nodeType": "YulTypedName",
                          "src": "7320:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "7328:3:46",
                          "nodeType": "YulTypedName",
                          "src": "7328:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "7336:5:46",
                          "nodeType": "YulTypedName",
                          "src": "7336:5:46",
                          "type": ""
                        }
                      ],
                      "src": "7280:340:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "7692:241:46",
                        "nodeType": "YulBlock",
                        "src": "7692:241:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "7797:22:46",
                              "nodeType": "YulBlock",
                              "src": "7797:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "7799:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "7799:16:46"
                                    },
                                    "nativeSrc": "7799:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7799:18:46"
                                  },
                                  "nativeSrc": "7799:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "7799:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "7769:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7769:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7777:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7777:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "7766:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "7766:2:46"
                              },
                              "nativeSrc": "7766:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7766:30:46"
                            },
                            "nativeSrc": "7763:56:46",
                            "nodeType": "YulIf",
                            "src": "7763:56:46"
                          },
                          {
                            "nativeSrc": "7829:37:46",
                            "nodeType": "YulAssignment",
                            "src": "7829:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nativeSrc": "7859:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7859:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nativeSrc": "7837:21:46",
                                "nodeType": "YulIdentifier",
                                "src": "7837:21:46"
                              },
                              "nativeSrc": "7837:29:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7837:29:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "7829:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "7829:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "7903:23:46",
                            "nodeType": "YulAssignment",
                            "src": "7903:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "size",
                                  "nativeSrc": "7915:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "7915:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "7921:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "7921:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "7911:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "7911:3:46"
                              },
                              "nativeSrc": "7911:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "7911:15:46"
                            },
                            "variableNames": [
                              {
                                "name": "size",
                                "nativeSrc": "7903:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "7903:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_allocation_size_t_bytes_memory_ptr",
                      "nativeSrc": "7626:307:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "length",
                          "nativeSrc": "7676:6:46",
                          "nodeType": "YulTypedName",
                          "src": "7676:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "size",
                          "nativeSrc": "7687:4:46",
                          "nodeType": "YulTypedName",
                          "src": "7687:4:46",
                          "type": ""
                        }
                      ],
                      "src": "7626:307:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "8022:340:46",
                        "nodeType": "YulBlock",
                        "src": "8022:340:46",
                        "statements": [
                          {
                            "nativeSrc": "8032:74:46",
                            "nodeType": "YulAssignment",
                            "src": "8032:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "8098:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8098:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_allocation_size_t_bytes_memory_ptr",
                                    "nativeSrc": "8057:40:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8057:40:46"
                                  },
                                  "nativeSrc": "8057:48:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8057:48:46"
                                }
                              ],
                              "functionName": {
                                "name": "allocate_memory",
                                "nativeSrc": "8041:15:46",
                                "nodeType": "YulIdentifier",
                                "src": "8041:15:46"
                              },
                              "nativeSrc": "8041:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8041:65:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "8032:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "8032:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "8122:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8122:5:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "8129:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8129:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "8115:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "8115:6:46"
                              },
                              "nativeSrc": "8115:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8115:21:46"
                            },
                            "nativeSrc": "8115:21:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "8115:21:46"
                          },
                          {
                            "nativeSrc": "8145:27:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "8145:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "array",
                                  "nativeSrc": "8160:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8160:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "8167:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "8167:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "8156:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "8156:3:46"
                              },
                              "nativeSrc": "8156:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8156:16:46"
                            },
                            "variables": [
                              {
                                "name": "dst",
                                "nativeSrc": "8149:3:46",
                                "nodeType": "YulTypedName",
                                "src": "8149:3:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "8210:83:46",
                              "nodeType": "YulBlock",
                              "src": "8210:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                      "nativeSrc": "8212:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8212:77:46"
                                    },
                                    "nativeSrc": "8212:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8212:79:46"
                                  },
                                  "nativeSrc": "8212:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8212:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nativeSrc": "8191:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8191:3:46"
                                    },
                                    {
                                      "name": "length",
                                      "nativeSrc": "8196:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8196:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "8187:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8187:3:46"
                                  },
                                  "nativeSrc": "8187:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8187:16:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "8205:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8205:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "8184:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "8184:2:46"
                              },
                              "nativeSrc": "8184:25:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8184:25:46"
                            },
                            "nativeSrc": "8181:112:46",
                            "nodeType": "YulIf",
                            "src": "8181:112:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nativeSrc": "8339:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8339:3:46"
                                },
                                {
                                  "name": "dst",
                                  "nativeSrc": "8344:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8344:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "8349:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8349:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_calldata_to_memory_with_cleanup",
                                "nativeSrc": "8302:36:46",
                                "nodeType": "YulIdentifier",
                                "src": "8302:36:46"
                              },
                              "nativeSrc": "8302:54:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8302:54:46"
                            },
                            "nativeSrc": "8302:54:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "8302:54:46"
                          }
                        ]
                      },
                      "name": "abi_decode_available_length_t_bytes_memory_ptr",
                      "nativeSrc": "7939:423:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "src",
                          "nativeSrc": "7995:3:46",
                          "nodeType": "YulTypedName",
                          "src": "7995:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "8000:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8000:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "8008:3:46",
                          "nodeType": "YulTypedName",
                          "src": "8008:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "8016:5:46",
                          "nodeType": "YulTypedName",
                          "src": "8016:5:46",
                          "type": ""
                        }
                      ],
                      "src": "7939:423:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "8442:277:46",
                        "nodeType": "YulBlock",
                        "src": "8442:277:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "8491:83:46",
                              "nodeType": "YulBlock",
                              "src": "8491:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                      "nativeSrc": "8493:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8493:77:46"
                                    },
                                    "nativeSrc": "8493:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8493:79:46"
                                  },
                                  "nativeSrc": "8493:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8493:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nativeSrc": "8470:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "8470:6:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "8478:4:46",
                                          "nodeType": "YulLiteral",
                                          "src": "8478:4:46",
                                          "type": "",
                                          "value": "0x1f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "8466:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "8466:3:46"
                                      },
                                      "nativeSrc": "8466:17:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8466:17:46"
                                    },
                                    {
                                      "name": "end",
                                      "nativeSrc": "8485:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8485:3:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "slt",
                                    "nativeSrc": "8462:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8462:3:46"
                                  },
                                  "nativeSrc": "8462:27:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8462:27:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "8455:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "8455:6:46"
                              },
                              "nativeSrc": "8455:35:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8455:35:46"
                            },
                            "nativeSrc": "8452:122:46",
                            "nodeType": "YulIf",
                            "src": "8452:122:46"
                          },
                          {
                            "nativeSrc": "8583:34:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "8583:34:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "8610:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8610:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "8597:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "8597:12:46"
                              },
                              "nativeSrc": "8597:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8597:20:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "8587:6:46",
                                "nodeType": "YulTypedName",
                                "src": "8587:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "8626:87:46",
                            "nodeType": "YulAssignment",
                            "src": "8626:87:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "8686:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8686:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "8694:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "8694:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "8682:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8682:3:46"
                                  },
                                  "nativeSrc": "8682:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8682:17:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "8701:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8701:6:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "8709:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "8709:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                "nativeSrc": "8635:46:46",
                                "nodeType": "YulIdentifier",
                                "src": "8635:46:46"
                              },
                              "nativeSrc": "8635:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8635:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "array",
                                "nativeSrc": "8626:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "8626:5:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes_memory_ptr",
                      "nativeSrc": "8381:338:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "8420:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8420:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "8428:3:46",
                          "nodeType": "YulTypedName",
                          "src": "8428:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "array",
                          "nativeSrc": "8436:5:46",
                          "nodeType": "YulTypedName",
                          "src": "8436:5:46",
                          "type": ""
                        }
                      ],
                      "src": "8381:338:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "8844:858:46",
                        "nodeType": "YulBlock",
                        "src": "8844:858:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "8890:83:46",
                              "nodeType": "YulBlock",
                              "src": "8890:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "8892:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8892:77:46"
                                    },
                                    "nativeSrc": "8892:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8892:79:46"
                                  },
                                  "nativeSrc": "8892:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8892:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "8865:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8865:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "8874:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "8874:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "8861:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "8861:3:46"
                                  },
                                  "nativeSrc": "8861:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "8861:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "8886:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "8886:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "8857:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "8857:3:46"
                              },
                              "nativeSrc": "8857:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "8857:32:46"
                            },
                            "nativeSrc": "8854:119:46",
                            "nodeType": "YulIf",
                            "src": "8854:119:46"
                          },
                          {
                            "nativeSrc": "8983:117:46",
                            "nodeType": "YulBlock",
                            "src": "8983:117:46",
                            "statements": [
                              {
                                "nativeSrc": "8998:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "8998:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "9012:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "9012:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9002:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9002:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "9027:63:46",
                                "nodeType": "YulAssignment",
                                "src": "9027:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9062:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9062:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "9073:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9073:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9058:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9058:3:46"
                                      },
                                      "nativeSrc": "9058:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9058:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9082:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9082:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "9037:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9037:20:46"
                                  },
                                  "nativeSrc": "9037:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9037:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "9027:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9027:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "9110:288:46",
                            "nodeType": "YulBlock",
                            "src": "9110:288:46",
                            "statements": [
                              {
                                "nativeSrc": "9125:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "9125:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9156:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9156:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9167:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "9167:2:46",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9152:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9152:3:46"
                                      },
                                      "nativeSrc": "9152:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9152:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "9139:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9139:12:46"
                                  },
                                  "nativeSrc": "9139:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9139:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9129:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9129:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "9218:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "9218:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "9220:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9220:77:46"
                                        },
                                        "nativeSrc": "9220:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "9220:79:46"
                                      },
                                      "nativeSrc": "9220:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "9220:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "9190:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9190:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "9198:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "9198:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "9187:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9187:2:46"
                                  },
                                  "nativeSrc": "9187:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9187:30:46"
                                },
                                "nativeSrc": "9184:117:46",
                                "nodeType": "YulIf",
                                "src": "9184:117:46"
                              },
                              {
                                "nativeSrc": "9315:73:46",
                                "nodeType": "YulAssignment",
                                "src": "9315:73:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9360:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9360:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "9371:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9371:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9356:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9356:3:46"
                                      },
                                      "nativeSrc": "9356:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9356:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9380:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9380:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_string_memory_ptr",
                                    "nativeSrc": "9325:30:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9325:30:46"
                                  },
                                  "nativeSrc": "9325:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9325:63:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "9315:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9315:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "9408:287:46",
                            "nodeType": "YulBlock",
                            "src": "9408:287:46",
                            "statements": [
                              {
                                "nativeSrc": "9423:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "9423:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9454:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9454:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9465:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "9465:2:46",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9450:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9450:3:46"
                                      },
                                      "nativeSrc": "9450:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9450:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "9437:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9437:12:46"
                                  },
                                  "nativeSrc": "9437:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9437:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9427:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9427:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "9516:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "9516:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "9518:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9518:77:46"
                                        },
                                        "nativeSrc": "9518:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "9518:79:46"
                                      },
                                      "nativeSrc": "9518:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "9518:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "9488:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9488:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "9496:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "9496:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "9485:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9485:2:46"
                                  },
                                  "nativeSrc": "9485:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9485:30:46"
                                },
                                "nativeSrc": "9482:117:46",
                                "nodeType": "YulIf",
                                "src": "9482:117:46"
                              },
                              {
                                "nativeSrc": "9613:72:46",
                                "nodeType": "YulAssignment",
                                "src": "9613:72:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "9657:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9657:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "9668:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "9668:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9653:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "9653:3:46"
                                      },
                                      "nativeSrc": "9653:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9653:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9677:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9677:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes_memory_ptr",
                                    "nativeSrc": "9623:29:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9623:29:46"
                                  },
                                  "nativeSrc": "9623:62:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9623:62:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "9613:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9613:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr",
                      "nativeSrc": "8725:977:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "8798:9:46",
                          "nodeType": "YulTypedName",
                          "src": "8798:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "8809:7:46",
                          "nodeType": "YulTypedName",
                          "src": "8809:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "8821:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8821:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "8829:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8829:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "8837:6:46",
                          "nodeType": "YulTypedName",
                          "src": "8837:6:46",
                          "type": ""
                        }
                      ],
                      "src": "8725:977:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "9791:391:46",
                        "nodeType": "YulBlock",
                        "src": "9791:391:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "9837:83:46",
                              "nodeType": "YulBlock",
                              "src": "9837:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "9839:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9839:77:46"
                                    },
                                    "nativeSrc": "9839:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9839:79:46"
                                  },
                                  "nativeSrc": "9839:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9839:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "9812:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9812:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "9821:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "9821:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "9808:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9808:3:46"
                                  },
                                  "nativeSrc": "9808:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9808:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "9833:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "9833:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "9804:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "9804:3:46"
                              },
                              "nativeSrc": "9804:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "9804:32:46"
                            },
                            "nativeSrc": "9801:119:46",
                            "nodeType": "YulIf",
                            "src": "9801:119:46"
                          },
                          {
                            "nativeSrc": "9930:117:46",
                            "nodeType": "YulBlock",
                            "src": "9930:117:46",
                            "statements": [
                              {
                                "nativeSrc": "9945:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "9945:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "9959:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "9959:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "9949:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "9949:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "9974:63:46",
                                "nodeType": "YulAssignment",
                                "src": "9974:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10009:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10009:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10020:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10020:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10005:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10005:3:46"
                                      },
                                      "nativeSrc": "10005:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10005:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10029:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10029:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "9984:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9984:20:46"
                                  },
                                  "nativeSrc": "9984:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "9984:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "9974:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "9974:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "10057:118:46",
                            "nodeType": "YulBlock",
                            "src": "10057:118:46",
                            "statements": [
                              {
                                "nativeSrc": "10072:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10072:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10086:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10086:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10076:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10076:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10102:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10102:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10137:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10137:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10148:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10148:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10133:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10133:3:46"
                                      },
                                      "nativeSrc": "10133:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10133:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10157:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10157:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "10112:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10112:20:46"
                                  },
                                  "nativeSrc": "10112:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10112:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "10102:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10102:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_address",
                      "nativeSrc": "9708:474:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "9753:9:46",
                          "nodeType": "YulTypedName",
                          "src": "9753:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "9764:7:46",
                          "nodeType": "YulTypedName",
                          "src": "9764:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "9776:6:46",
                          "nodeType": "YulTypedName",
                          "src": "9776:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "9784:6:46",
                          "nodeType": "YulTypedName",
                          "src": "9784:6:46",
                          "type": ""
                        }
                      ],
                      "src": "9708:474:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "10280:560:46",
                        "nodeType": "YulBlock",
                        "src": "10280:560:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "10326:83:46",
                              "nodeType": "YulBlock",
                              "src": "10326:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "10328:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10328:77:46"
                                    },
                                    "nativeSrc": "10328:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10328:79:46"
                                  },
                                  "nativeSrc": "10328:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10328:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10301:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10301:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "10310:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10310:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "10297:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10297:3:46"
                                  },
                                  "nativeSrc": "10297:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10297:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "10322:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10322:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "10293:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "10293:3:46"
                              },
                              "nativeSrc": "10293:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "10293:32:46"
                            },
                            "nativeSrc": "10290:119:46",
                            "nodeType": "YulIf",
                            "src": "10290:119:46"
                          },
                          {
                            "nativeSrc": "10419:117:46",
                            "nodeType": "YulBlock",
                            "src": "10419:117:46",
                            "statements": [
                              {
                                "nativeSrc": "10434:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10434:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "10448:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "10448:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10438:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10438:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "10463:63:46",
                                "nodeType": "YulAssignment",
                                "src": "10463:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10498:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10498:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10509:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10509:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10494:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10494:3:46"
                                      },
                                      "nativeSrc": "10494:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10494:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10518:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10518:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "10473:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10473:20:46"
                                  },
                                  "nativeSrc": "10473:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10473:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "10463:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10463:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "10546:287:46",
                            "nodeType": "YulBlock",
                            "src": "10546:287:46",
                            "statements": [
                              {
                                "nativeSrc": "10561:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "10561:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10592:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10592:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "10603:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "10603:2:46",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10588:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10588:3:46"
                                      },
                                      "nativeSrc": "10588:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10588:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "10575:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10575:12:46"
                                  },
                                  "nativeSrc": "10575:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10575:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "10565:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "10565:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "10654:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "10654:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "10656:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10656:77:46"
                                        },
                                        "nativeSrc": "10656:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10656:79:46"
                                      },
                                      "nativeSrc": "10656:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "10656:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "10626:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10626:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "10634:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "10634:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "10623:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10623:2:46"
                                  },
                                  "nativeSrc": "10623:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10623:30:46"
                                },
                                "nativeSrc": "10620:117:46",
                                "nodeType": "YulIf",
                                "src": "10620:117:46"
                              },
                              {
                                "nativeSrc": "10751:72:46",
                                "nodeType": "YulAssignment",
                                "src": "10751:72:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "10795:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10795:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "10806:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "10806:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10791:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "10791:3:46"
                                      },
                                      "nativeSrc": "10791:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10791:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "10815:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "10815:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes_memory_ptr",
                                    "nativeSrc": "10761:29:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10761:29:46"
                                  },
                                  "nativeSrc": "10761:62:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "10761:62:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "10751:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "10751:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                      "nativeSrc": "10188:652:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "10242:9:46",
                          "nodeType": "YulTypedName",
                          "src": "10242:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "10253:7:46",
                          "nodeType": "YulTypedName",
                          "src": "10253:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "10265:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10265:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "10273:6:46",
                          "nodeType": "YulTypedName",
                          "src": "10273:6:46",
                          "type": ""
                        }
                      ],
                      "src": "10188:652:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "10891:32:46",
                        "nodeType": "YulBlock",
                        "src": "10891:32:46",
                        "statements": [
                          {
                            "nativeSrc": "10901:16:46",
                            "nodeType": "YulAssignment",
                            "src": "10901:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "10912:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "10912:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "10901:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "10901:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_bytes32",
                      "nativeSrc": "10846:77:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "10873:5:46",
                          "nodeType": "YulTypedName",
                          "src": "10873:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "10883:7:46",
                          "nodeType": "YulTypedName",
                          "src": "10883:7:46",
                          "type": ""
                        }
                      ],
                      "src": "10846:77:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "10994:53:46",
                        "nodeType": "YulBlock",
                        "src": "10994:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "11011:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11011:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "11034:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11034:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bytes32",
                                    "nativeSrc": "11016:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11016:17:46"
                                  },
                                  "nativeSrc": "11016:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11016:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "11004:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "11004:6:46"
                              },
                              "nativeSrc": "11004:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11004:37:46"
                            },
                            "nativeSrc": "11004:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11004:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nativeSrc": "10929:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "10982:5:46",
                          "nodeType": "YulTypedName",
                          "src": "10982:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "10989:3:46",
                          "nodeType": "YulTypedName",
                          "src": "10989:3:46",
                          "type": ""
                        }
                      ],
                      "src": "10929:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11151:124:46",
                        "nodeType": "YulBlock",
                        "src": "11151:124:46",
                        "statements": [
                          {
                            "nativeSrc": "11161:26:46",
                            "nodeType": "YulAssignment",
                            "src": "11161:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "11173:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11173:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11184:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11184:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "11169:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "11169:3:46"
                              },
                              "nativeSrc": "11169:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11169:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "11161:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "11161:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "11241:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11241:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "11254:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11254:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "11265:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "11265:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "11250:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11250:3:46"
                                  },
                                  "nativeSrc": "11250:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11250:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                "nativeSrc": "11197:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "11197:43:46"
                              },
                              "nativeSrc": "11197:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11197:71:46"
                            },
                            "nativeSrc": "11197:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11197:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                      "nativeSrc": "11053:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "11123:9:46",
                          "nodeType": "YulTypedName",
                          "src": "11123:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "11135:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11135:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "11146:4:46",
                          "nodeType": "YulTypedName",
                          "src": "11146:4:46",
                          "type": ""
                        }
                      ],
                      "src": "11053:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11347:263:46",
                        "nodeType": "YulBlock",
                        "src": "11347:263:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "11393:83:46",
                              "nodeType": "YulBlock",
                              "src": "11393:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "11395:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11395:77:46"
                                    },
                                    "nativeSrc": "11395:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11395:79:46"
                                  },
                                  "nativeSrc": "11395:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11395:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11368:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11368:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "11377:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11377:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "11364:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11364:3:46"
                                  },
                                  "nativeSrc": "11364:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11364:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11389:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11389:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "11360:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "11360:3:46"
                              },
                              "nativeSrc": "11360:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11360:32:46"
                            },
                            "nativeSrc": "11357:119:46",
                            "nodeType": "YulIf",
                            "src": "11357:119:46"
                          },
                          {
                            "nativeSrc": "11486:117:46",
                            "nodeType": "YulBlock",
                            "src": "11486:117:46",
                            "statements": [
                              {
                                "nativeSrc": "11501:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "11501:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "11515:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11515:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "11505:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "11505:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "11530:63:46",
                                "nodeType": "YulAssignment",
                                "src": "11530:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "11565:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11565:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "11576:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "11576:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "11561:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "11561:3:46"
                                      },
                                      "nativeSrc": "11561:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11561:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "11585:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11585:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "11540:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11540:20:46"
                                  },
                                  "nativeSrc": "11540:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11540:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "11530:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11530:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_address",
                      "nativeSrc": "11281:329:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "11317:9:46",
                          "nodeType": "YulTypedName",
                          "src": "11317:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "11328:7:46",
                          "nodeType": "YulTypedName",
                          "src": "11328:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "11340:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11340:6:46",
                          "type": ""
                        }
                      ],
                      "src": "11281:329:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11681:53:46",
                        "nodeType": "YulBlock",
                        "src": "11681:53:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "11698:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11698:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "11721:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11721:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nativeSrc": "11703:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11703:17:46"
                                  },
                                  "nativeSrc": "11703:24:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11703:24:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "11691:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "11691:6:46"
                              },
                              "nativeSrc": "11691:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11691:37:46"
                            },
                            "nativeSrc": "11691:37:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11691:37:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nativeSrc": "11616:118:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "11669:5:46",
                          "nodeType": "YulTypedName",
                          "src": "11669:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "11676:3:46",
                          "nodeType": "YulTypedName",
                          "src": "11676:3:46",
                          "type": ""
                        }
                      ],
                      "src": "11616:118:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "11838:124:46",
                        "nodeType": "YulBlock",
                        "src": "11838:124:46",
                        "statements": [
                          {
                            "nativeSrc": "11848:26:46",
                            "nodeType": "YulAssignment",
                            "src": "11848:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "11860:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11860:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "11871:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "11871:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "11856:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "11856:3:46"
                              },
                              "nativeSrc": "11856:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11856:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "11848:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "11848:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "11928:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "11928:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "11941:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "11941:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "11952:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "11952:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "11937:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "11937:3:46"
                                  },
                                  "nativeSrc": "11937:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "11937:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "11884:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "11884:43:46"
                              },
                              "nativeSrc": "11884:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "11884:71:46"
                            },
                            "nativeSrc": "11884:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "11884:71:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                      "nativeSrc": "11740:222:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "11810:9:46",
                          "nodeType": "YulTypedName",
                          "src": "11810:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "11822:6:46",
                          "nodeType": "YulTypedName",
                          "src": "11822:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "11833:4:46",
                          "nodeType": "YulTypedName",
                          "src": "11833:4:46",
                          "type": ""
                        }
                      ],
                      "src": "11740:222:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12008:76:46",
                        "nodeType": "YulBlock",
                        "src": "12008:76:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "12062:16:46",
                              "nodeType": "YulBlock",
                              "src": "12062:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12071:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "12071:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12074:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "12074:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "12064:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12064:6:46"
                                    },
                                    "nativeSrc": "12064:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12064:12:46"
                                  },
                                  "nativeSrc": "12064:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12064:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "12031:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12031:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "12053:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "12053:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_bool",
                                        "nativeSrc": "12038:14:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "12038:14:46"
                                      },
                                      "nativeSrc": "12038:21:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12038:21:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "12028:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12028:2:46"
                                  },
                                  "nativeSrc": "12028:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12028:32:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "12021:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "12021:6:46"
                              },
                              "nativeSrc": "12021:40:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12021:40:46"
                            },
                            "nativeSrc": "12018:60:46",
                            "nodeType": "YulIf",
                            "src": "12018:60:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_bool",
                      "nativeSrc": "11968:116:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "12001:5:46",
                          "nodeType": "YulTypedName",
                          "src": "12001:5:46",
                          "type": ""
                        }
                      ],
                      "src": "11968:116:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12139:84:46",
                        "nodeType": "YulBlock",
                        "src": "12139:84:46",
                        "statements": [
                          {
                            "nativeSrc": "12149:29:46",
                            "nodeType": "YulAssignment",
                            "src": "12149:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "12171:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12171:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "12158:12:46",
                                "nodeType": "YulIdentifier",
                                "src": "12158:12:46"
                              },
                              "nativeSrc": "12158:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12158:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "12149:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "12149:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "12211:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "12211:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_bool",
                                "nativeSrc": "12187:23:46",
                                "nodeType": "YulIdentifier",
                                "src": "12187:23:46"
                              },
                              "nativeSrc": "12187:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12187:30:46"
                            },
                            "nativeSrc": "12187:30:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "12187:30:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_bool",
                      "nativeSrc": "12090:133:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "12117:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12117:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "12125:3:46",
                          "nodeType": "YulTypedName",
                          "src": "12125:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "12133:5:46",
                          "nodeType": "YulTypedName",
                          "src": "12133:5:46",
                          "type": ""
                        }
                      ],
                      "src": "12090:133:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12309:388:46",
                        "nodeType": "YulBlock",
                        "src": "12309:388:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "12355:83:46",
                              "nodeType": "YulBlock",
                              "src": "12355:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "12357:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12357:77:46"
                                    },
                                    "nativeSrc": "12357:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12357:79:46"
                                  },
                                  "nativeSrc": "12357:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12357:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "12330:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12330:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12339:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12339:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "12326:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12326:3:46"
                                  },
                                  "nativeSrc": "12326:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12326:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "12351:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12351:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "12322:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "12322:3:46"
                              },
                              "nativeSrc": "12322:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12322:32:46"
                            },
                            "nativeSrc": "12319:119:46",
                            "nodeType": "YulIf",
                            "src": "12319:119:46"
                          },
                          {
                            "nativeSrc": "12448:117:46",
                            "nodeType": "YulBlock",
                            "src": "12448:117:46",
                            "statements": [
                              {
                                "nativeSrc": "12463:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "12463:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "12477:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12477:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "12467:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "12467:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "12492:63:46",
                                "nodeType": "YulAssignment",
                                "src": "12492:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "12527:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "12527:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "12538:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "12538:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "12523:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "12523:3:46"
                                      },
                                      "nativeSrc": "12523:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12523:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "12547:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12547:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "12502:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12502:20:46"
                                  },
                                  "nativeSrc": "12502:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12502:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "12492:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12492:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "12575:115:46",
                            "nodeType": "YulBlock",
                            "src": "12575:115:46",
                            "statements": [
                              {
                                "nativeSrc": "12590:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "12590:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "12604:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12604:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "12594:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "12594:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "12620:60:46",
                                "nodeType": "YulAssignment",
                                "src": "12620:60:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "12652:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "12652:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "12663:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "12663:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "12648:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "12648:3:46"
                                      },
                                      "nativeSrc": "12648:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12648:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "12672:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12672:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bool",
                                    "nativeSrc": "12630:17:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12630:17:46"
                                  },
                                  "nativeSrc": "12630:50:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12630:50:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "12620:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12620:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_bool",
                      "nativeSrc": "12229:468:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "12271:9:46",
                          "nodeType": "YulTypedName",
                          "src": "12271:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "12282:7:46",
                          "nodeType": "YulTypedName",
                          "src": "12282:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "12294:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12294:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "12302:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12302:6:46",
                          "type": ""
                        }
                      ],
                      "src": "12229:468:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "12812:688:46",
                        "nodeType": "YulBlock",
                        "src": "12812:688:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "12858:83:46",
                              "nodeType": "YulBlock",
                              "src": "12858:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "12860:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12860:77:46"
                                    },
                                    "nativeSrc": "12860:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12860:79:46"
                                  },
                                  "nativeSrc": "12860:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12860:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "12833:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12833:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "12842:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "12842:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "12829:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12829:3:46"
                                  },
                                  "nativeSrc": "12829:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "12829:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "12854:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12854:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "12825:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "12825:3:46"
                              },
                              "nativeSrc": "12825:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "12825:32:46"
                            },
                            "nativeSrc": "12822:119:46",
                            "nodeType": "YulIf",
                            "src": "12822:119:46"
                          },
                          {
                            "nativeSrc": "12951:117:46",
                            "nodeType": "YulBlock",
                            "src": "12951:117:46",
                            "statements": [
                              {
                                "nativeSrc": "12966:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "12966:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "12980:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "12980:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "12970:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "12970:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "12995:63:46",
                                "nodeType": "YulAssignment",
                                "src": "12995:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13030:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13030:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13041:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13041:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13026:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13026:3:46"
                                      },
                                      "nativeSrc": "13026:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13026:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13050:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13050:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "13005:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13005:20:46"
                                  },
                                  "nativeSrc": "13005:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13005:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "12995:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "12995:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "13078:118:46",
                            "nodeType": "YulBlock",
                            "src": "13078:118:46",
                            "statements": [
                              {
                                "nativeSrc": "13093:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13093:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "13107:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13107:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13097:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13097:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "13123:63:46",
                                "nodeType": "YulAssignment",
                                "src": "13123:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13158:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13158:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13169:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13169:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13154:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13154:3:46"
                                      },
                                      "nativeSrc": "13154:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13154:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13178:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13178:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "13133:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13133:20:46"
                                  },
                                  "nativeSrc": "13133:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13133:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "13123:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13123:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "13206:287:46",
                            "nodeType": "YulBlock",
                            "src": "13206:287:46",
                            "statements": [
                              {
                                "nativeSrc": "13221:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13221:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13252:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13252:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "13263:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "13263:2:46",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13248:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13248:3:46"
                                      },
                                      "nativeSrc": "13248:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13248:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "13235:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13235:12:46"
                                  },
                                  "nativeSrc": "13235:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13235:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13225:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13225:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "13314:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "13314:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "13316:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13316:77:46"
                                        },
                                        "nativeSrc": "13316:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "13316:79:46"
                                      },
                                      "nativeSrc": "13316:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "13316:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "13286:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13286:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "13294:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "13294:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "13283:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13283:2:46"
                                  },
                                  "nativeSrc": "13283:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13283:30:46"
                                },
                                "nativeSrc": "13280:117:46",
                                "nodeType": "YulIf",
                                "src": "13280:117:46"
                              },
                              {
                                "nativeSrc": "13411:72:46",
                                "nodeType": "YulAssignment",
                                "src": "13411:72:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13455:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13455:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13466:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13466:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13451:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13451:3:46"
                                      },
                                      "nativeSrc": "13451:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13451:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13475:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13475:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes_memory_ptr",
                                    "nativeSrc": "13421:29:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13421:29:46"
                                  },
                                  "nativeSrc": "13421:62:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13421:62:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "13411:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13411:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
                      "nativeSrc": "12703:797:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "12766:9:46",
                          "nodeType": "YulTypedName",
                          "src": "12766:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "12777:7:46",
                          "nodeType": "YulTypedName",
                          "src": "12777:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "12789:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12789:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "12797:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12797:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "12805:6:46",
                          "nodeType": "YulTypedName",
                          "src": "12805:6:46",
                          "type": ""
                        }
                      ],
                      "src": "12703:797:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "13632:817:46",
                        "nodeType": "YulBlock",
                        "src": "13632:817:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "13679:83:46",
                              "nodeType": "YulBlock",
                              "src": "13679:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "13681:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13681:77:46"
                                    },
                                    "nativeSrc": "13681:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13681:79:46"
                                  },
                                  "nativeSrc": "13681:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13681:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13653:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13653:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "13662:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13662:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "13649:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13649:3:46"
                                  },
                                  "nativeSrc": "13649:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13649:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "13674:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13674:3:46",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "13645:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "13645:3:46"
                              },
                              "nativeSrc": "13645:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "13645:33:46"
                            },
                            "nativeSrc": "13642:120:46",
                            "nodeType": "YulIf",
                            "src": "13642:120:46"
                          },
                          {
                            "nativeSrc": "13772:117:46",
                            "nodeType": "YulBlock",
                            "src": "13772:117:46",
                            "statements": [
                              {
                                "nativeSrc": "13787:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13787:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "13801:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13801:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13791:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13791:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "13816:63:46",
                                "nodeType": "YulAssignment",
                                "src": "13816:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13851:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13851:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13862:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13862:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13847:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13847:3:46"
                                      },
                                      "nativeSrc": "13847:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13847:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13871:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13871:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "13826:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13826:20:46"
                                  },
                                  "nativeSrc": "13826:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13826:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "13816:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13816:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "13899:118:46",
                            "nodeType": "YulBlock",
                            "src": "13899:118:46",
                            "statements": [
                              {
                                "nativeSrc": "13914:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "13914:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "13928:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "13928:2:46",
                                  "type": "",
                                  "value": "32"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "13918:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "13918:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "13944:63:46",
                                "nodeType": "YulAssignment",
                                "src": "13944:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "13979:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13979:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "13990:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "13990:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "13975:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "13975:3:46"
                                      },
                                      "nativeSrc": "13975:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13975:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "13999:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "13999:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_address",
                                    "nativeSrc": "13954:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13954:20:46"
                                  },
                                  "nativeSrc": "13954:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "13954:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "13944:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "13944:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "14027:118:46",
                            "nodeType": "YulBlock",
                            "src": "14027:118:46",
                            "statements": [
                              {
                                "nativeSrc": "14042:16:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "14042:16:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "14056:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14056:2:46",
                                  "type": "",
                                  "value": "64"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "14046:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "14046:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "14072:63:46",
                                "nodeType": "YulAssignment",
                                "src": "14072:63:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "14107:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14107:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "14118:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14118:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "14103:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "14103:3:46"
                                      },
                                      "nativeSrc": "14103:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14103:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "14127:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14127:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nativeSrc": "14082:20:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14082:20:46"
                                  },
                                  "nativeSrc": "14082:53:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14082:53:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "14072:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14072:6:46"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "nativeSrc": "14155:287:46",
                            "nodeType": "YulBlock",
                            "src": "14155:287:46",
                            "statements": [
                              {
                                "nativeSrc": "14170:46:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "14170:46:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "14201:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14201:9:46"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14212:2:46",
                                          "nodeType": "YulLiteral",
                                          "src": "14212:2:46",
                                          "type": "",
                                          "value": "96"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "14197:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "14197:3:46"
                                      },
                                      "nativeSrc": "14197:18:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14197:18:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "calldataload",
                                    "nativeSrc": "14184:12:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14184:12:46"
                                  },
                                  "nativeSrc": "14184:32:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14184:32:46"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "14174:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "14174:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "14263:83:46",
                                  "nodeType": "YulBlock",
                                  "src": "14263:83:46",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                          "nativeSrc": "14265:77:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14265:77:46"
                                        },
                                        "nativeSrc": "14265:79:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14265:79:46"
                                      },
                                      "nativeSrc": "14265:79:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "14265:79:46"
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "14235:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14235:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14243:18:46",
                                      "nodeType": "YulLiteral",
                                      "src": "14243:18:46",
                                      "type": "",
                                      "value": "0xffffffffffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "gt",
                                    "nativeSrc": "14232:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14232:2:46"
                                  },
                                  "nativeSrc": "14232:30:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14232:30:46"
                                },
                                "nativeSrc": "14229:117:46",
                                "nodeType": "YulIf",
                                "src": "14229:117:46"
                              },
                              {
                                "nativeSrc": "14360:72:46",
                                "nodeType": "YulAssignment",
                                "src": "14360:72:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "14404:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14404:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "14415:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "14415:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "14400:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "14400:3:46"
                                      },
                                      "nativeSrc": "14400:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14400:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "14424:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14424:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes_memory_ptr",
                                    "nativeSrc": "14370:29:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14370:29:46"
                                  },
                                  "nativeSrc": "14370:62:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14370:62:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value3",
                                    "nativeSrc": "14360:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14360:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                      "nativeSrc": "13506:943:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "13578:9:46",
                          "nodeType": "YulTypedName",
                          "src": "13578:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "13589:7:46",
                          "nodeType": "YulTypedName",
                          "src": "13589:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "13601:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13601:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "13609:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13609:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "13617:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13617:6:46",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nativeSrc": "13625:6:46",
                          "nodeType": "YulTypedName",
                          "src": "13625:6:46",
                          "type": ""
                        }
                      ],
                      "src": "13506:943:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14483:152:46",
                        "nodeType": "YulBlock",
                        "src": "14483:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "14500:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14500:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14503:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14503:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "14493:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14493:6:46"
                              },
                              "nativeSrc": "14493:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14493:88:46"
                            },
                            "nativeSrc": "14493:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14493:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "14597:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14597:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14600:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14600:4:46",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "14590:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14590:6:46"
                              },
                              "nativeSrc": "14590:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14590:15:46"
                            },
                            "nativeSrc": "14590:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14590:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "14621:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14621:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14624:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14624:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "14614:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14614:6:46"
                              },
                              "nativeSrc": "14614:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14614:15:46"
                            },
                            "nativeSrc": "14614:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "14614:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x22",
                      "nativeSrc": "14455:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "14455:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "14692:269:46",
                        "nodeType": "YulBlock",
                        "src": "14692:269:46",
                        "statements": [
                          {
                            "nativeSrc": "14702:22:46",
                            "nodeType": "YulAssignment",
                            "src": "14702:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nativeSrc": "14716:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14716:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14722:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14722:1:46",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nativeSrc": "14712:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "14712:3:46"
                              },
                              "nativeSrc": "14712:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14712:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "14702:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14702:6:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "14733:38:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "14733:38:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nativeSrc": "14763:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14763:4:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "14769:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "14769:1:46",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "14759:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "14759:3:46"
                              },
                              "nativeSrc": "14759:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14759:12:46"
                            },
                            "variables": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "14737:18:46",
                                "nodeType": "YulTypedName",
                                "src": "14737:18:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "14810:51:46",
                              "nodeType": "YulBlock",
                              "src": "14810:51:46",
                              "statements": [
                                {
                                  "nativeSrc": "14824:27:46",
                                  "nodeType": "YulAssignment",
                                  "src": "14824:27:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "14838:6:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "14838:6:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "14846:4:46",
                                        "nodeType": "YulLiteral",
                                        "src": "14846:4:46",
                                        "type": "",
                                        "value": "0x7f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "14834:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14834:3:46"
                                    },
                                    "nativeSrc": "14834:17:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14834:17:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "14824:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14824:6:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "14790:18:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14790:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "14783:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "14783:6:46"
                              },
                              "nativeSrc": "14783:26:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14783:26:46"
                            },
                            "nativeSrc": "14780:81:46",
                            "nodeType": "YulIf",
                            "src": "14780:81:46"
                          },
                          {
                            "body": {
                              "nativeSrc": "14913:42:46",
                              "nodeType": "YulBlock",
                              "src": "14913:42:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x22",
                                      "nativeSrc": "14927:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14927:16:46"
                                    },
                                    "nativeSrc": "14927:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14927:18:46"
                                  },
                                  "nativeSrc": "14927:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "14927:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "14877:18:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "14877:18:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "14900:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "14900:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "14908:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "14908:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "14897:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "14897:2:46"
                                  },
                                  "nativeSrc": "14897:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "14897:14:46"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nativeSrc": "14874:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "14874:2:46"
                              },
                              "nativeSrc": "14874:38:46",
                              "nodeType": "YulFunctionCall",
                              "src": "14874:38:46"
                            },
                            "nativeSrc": "14871:84:46",
                            "nodeType": "YulIf",
                            "src": "14871:84:46"
                          }
                        ]
                      },
                      "name": "extract_byte_array_length",
                      "nativeSrc": "14641:320:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nativeSrc": "14676:4:46",
                          "nodeType": "YulTypedName",
                          "src": "14676:4:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "14685:6:46",
                          "nodeType": "YulTypedName",
                          "src": "14685:6:46",
                          "type": ""
                        }
                      ],
                      "src": "14641:320:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15121:288:46",
                        "nodeType": "YulBlock",
                        "src": "15121:288:46",
                        "statements": [
                          {
                            "nativeSrc": "15131:26:46",
                            "nodeType": "YulAssignment",
                            "src": "15131:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "15143:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15143:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "15154:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "15154:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "15139:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "15139:3:46"
                              },
                              "nativeSrc": "15139:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15139:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "15131:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "15131:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "15211:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15211:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "15224:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15224:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "15235:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "15235:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "15220:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15220:3:46"
                                  },
                                  "nativeSrc": "15220:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15220:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "15167:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "15167:43:46"
                              },
                              "nativeSrc": "15167:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15167:71:46"
                            },
                            "nativeSrc": "15167:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "15167:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "15292:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15292:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "15305:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15305:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "15316:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "15316:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "15301:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15301:3:46"
                                  },
                                  "nativeSrc": "15301:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15301:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "15248:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "15248:43:46"
                              },
                              "nativeSrc": "15248:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15248:72:46"
                            },
                            "nativeSrc": "15248:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "15248:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "15374:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15374:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "15387:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "15387:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "15398:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "15398:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "15383:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15383:3:46"
                                  },
                                  "nativeSrc": "15383:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15383:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "15330:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "15330:43:46"
                              },
                              "nativeSrc": "15330:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15330:72:46"
                            },
                            "nativeSrc": "15330:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "15330:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
                      "nativeSrc": "14967:442:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "15077:9:46",
                          "nodeType": "YulTypedName",
                          "src": "15077:9:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "15089:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15089:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "15097:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15097:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "15105:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15105:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "15116:4:46",
                          "nodeType": "YulTypedName",
                          "src": "15116:4:46",
                          "type": ""
                        }
                      ],
                      "src": "14967:442:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15457:52:46",
                        "nodeType": "YulBlock",
                        "src": "15457:52:46",
                        "statements": [
                          {
                            "nativeSrc": "15467:35:46",
                            "nodeType": "YulAssignment",
                            "src": "15467:35:46",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "15492:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "15492:2:46",
                                  "type": "",
                                  "value": "96"
                                },
                                {
                                  "name": "value",
                                  "nativeSrc": "15496:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15496:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nativeSrc": "15488:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "15488:3:46"
                              },
                              "nativeSrc": "15488:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15488:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "newValue",
                                "nativeSrc": "15467:8:46",
                                "nodeType": "YulIdentifier",
                                "src": "15467:8:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "shift_left_96",
                      "nativeSrc": "15415:94:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "15438:5:46",
                          "nodeType": "YulTypedName",
                          "src": "15438:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "newValue",
                          "nativeSrc": "15448:8:46",
                          "nodeType": "YulTypedName",
                          "src": "15448:8:46",
                          "type": ""
                        }
                      ],
                      "src": "15415:94:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15562:47:46",
                        "nodeType": "YulBlock",
                        "src": "15562:47:46",
                        "statements": [
                          {
                            "nativeSrc": "15572:31:46",
                            "nodeType": "YulAssignment",
                            "src": "15572:31:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "15597:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15597:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "shift_left_96",
                                "nativeSrc": "15583:13:46",
                                "nodeType": "YulIdentifier",
                                "src": "15583:13:46"
                              },
                              "nativeSrc": "15583:20:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15583:20:46"
                            },
                            "variableNames": [
                              {
                                "name": "aligned",
                                "nativeSrc": "15572:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "15572:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "leftAlign_t_uint160",
                      "nativeSrc": "15515:94:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "15544:5:46",
                          "nodeType": "YulTypedName",
                          "src": "15544:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "aligned",
                          "nativeSrc": "15554:7:46",
                          "nodeType": "YulTypedName",
                          "src": "15554:7:46",
                          "type": ""
                        }
                      ],
                      "src": "15515:94:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15662:53:46",
                        "nodeType": "YulBlock",
                        "src": "15662:53:46",
                        "statements": [
                          {
                            "nativeSrc": "15672:37:46",
                            "nodeType": "YulAssignment",
                            "src": "15672:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "15703:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15703:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "leftAlign_t_uint160",
                                "nativeSrc": "15683:19:46",
                                "nodeType": "YulIdentifier",
                                "src": "15683:19:46"
                              },
                              "nativeSrc": "15683:26:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15683:26:46"
                            },
                            "variableNames": [
                              {
                                "name": "aligned",
                                "nativeSrc": "15672:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "15672:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "leftAlign_t_address",
                      "nativeSrc": "15615:100:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "15644:5:46",
                          "nodeType": "YulTypedName",
                          "src": "15644:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "aligned",
                          "nativeSrc": "15654:7:46",
                          "nodeType": "YulTypedName",
                          "src": "15654:7:46",
                          "type": ""
                        }
                      ],
                      "src": "15615:100:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15804:74:46",
                        "nodeType": "YulBlock",
                        "src": "15804:74:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "15821:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "15821:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "15864:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "15864:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_address",
                                        "nativeSrc": "15846:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "15846:17:46"
                                      },
                                      "nativeSrc": "15846:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15846:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "leftAlign_t_address",
                                    "nativeSrc": "15826:19:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "15826:19:46"
                                  },
                                  "nativeSrc": "15826:45:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "15826:45:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "15814:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "15814:6:46"
                              },
                              "nativeSrc": "15814:58:46",
                              "nodeType": "YulFunctionCall",
                              "src": "15814:58:46"
                            },
                            "nativeSrc": "15814:58:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "15814:58:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nativeSrc": "15721:157:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "15792:5:46",
                          "nodeType": "YulTypedName",
                          "src": "15792:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "15799:3:46",
                          "nodeType": "YulTypedName",
                          "src": "15799:3:46",
                          "type": ""
                        }
                      ],
                      "src": "15721:157:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "15998:34:46",
                        "nodeType": "YulBlock",
                        "src": "15998:34:46",
                        "statements": [
                          {
                            "nativeSrc": "16008:18:46",
                            "nodeType": "YulAssignment",
                            "src": "16008:18:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "16023:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "16023:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "16008:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "16008:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "15884:148:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "15970:3:46",
                          "nodeType": "YulTypedName",
                          "src": "15970:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "15975:6:46",
                          "nodeType": "YulTypedName",
                          "src": "15975:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "15986:11:46",
                          "nodeType": "YulTypedName",
                          "src": "15986:11:46",
                          "type": ""
                        }
                      ],
                      "src": "15884:148:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16148:280:46",
                        "nodeType": "YulBlock",
                        "src": "16148:280:46",
                        "statements": [
                          {
                            "nativeSrc": "16158:53:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "16158:53:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "16205:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16205:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_string_memory_ptr",
                                "nativeSrc": "16172:32:46",
                                "nodeType": "YulIdentifier",
                                "src": "16172:32:46"
                              },
                              "nativeSrc": "16172:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16172:39:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "16162:6:46",
                                "nodeType": "YulTypedName",
                                "src": "16162:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "16220:96:46",
                            "nodeType": "YulAssignment",
                            "src": "16220:96:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16304:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16304:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "16309:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16309:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "16227:76:46",
                                "nodeType": "YulIdentifier",
                                "src": "16227:76:46"
                              },
                              "nativeSrc": "16227:89:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16227:89:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "16220:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16220:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "16364:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "16364:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "16371:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "16371:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "16360:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "16360:3:46"
                                  },
                                  "nativeSrc": "16360:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "16360:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "16378:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16378:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "16383:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16383:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "16325:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "16325:34:46"
                              },
                              "nativeSrc": "16325:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16325:65:46"
                            },
                            "nativeSrc": "16325:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16325:65:46"
                          },
                          {
                            "nativeSrc": "16399:23:46",
                            "nodeType": "YulAssignment",
                            "src": "16399:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16410:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16410:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "16415:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16415:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "16406:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16406:3:46"
                              },
                              "nativeSrc": "16406:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16406:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "16399:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16399:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "16038:390:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "16129:5:46",
                          "nodeType": "YulTypedName",
                          "src": "16129:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "16136:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16136:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "16144:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16144:3:46",
                          "type": ""
                        }
                      ],
                      "src": "16038:390:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "16598:252:46",
                        "nodeType": "YulBlock",
                        "src": "16598:252:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "16671:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16671:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "16680:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16680:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                                "nativeSrc": "16609:61:46",
                                "nodeType": "YulIdentifier",
                                "src": "16609:61:46"
                              },
                              "nativeSrc": "16609:75:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16609:75:46"
                            },
                            "nativeSrc": "16609:75:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "16609:75:46"
                          },
                          {
                            "nativeSrc": "16693:19:46",
                            "nodeType": "YulAssignment",
                            "src": "16693:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "16704:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16704:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "16709:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "16709:2:46",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "16700:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16700:3:46"
                              },
                              "nativeSrc": "16700:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16700:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "16693:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16693:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "16722:102:46",
                            "nodeType": "YulAssignment",
                            "src": "16722:102:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "16811:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16811:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "16820:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "16820:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "16729:81:46",
                                "nodeType": "YulIdentifier",
                                "src": "16729:81:46"
                              },
                              "nativeSrc": "16729:95:46",
                              "nodeType": "YulFunctionCall",
                              "src": "16729:95:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "16722:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16722:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "16834:10:46",
                            "nodeType": "YulAssignment",
                            "src": "16834:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "16841:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "16841:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "16834:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "16834:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "16434:416:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "16569:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16569:3:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "16575:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16575:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "16583:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16583:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "16594:3:46",
                          "nodeType": "YulTypedName",
                          "src": "16594:3:46",
                          "type": ""
                        }
                      ],
                      "src": "16434:416:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17030:359:46",
                        "nodeType": "YulBlock",
                        "src": "17030:359:46",
                        "statements": [
                          {
                            "nativeSrc": "17040:26:46",
                            "nodeType": "YulAssignment",
                            "src": "17040:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "17052:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17052:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "17063:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "17063:2:46",
                                  "type": "",
                                  "value": "96"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "17048:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17048:3:46"
                              },
                              "nativeSrc": "17048:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17048:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17040:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17040:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "17120:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17120:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17133:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17133:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17144:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17144:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17129:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17129:3:46"
                                  },
                                  "nativeSrc": "17129:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17129:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "17076:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "17076:43:46"
                              },
                              "nativeSrc": "17076:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17076:71:46"
                            },
                            "nativeSrc": "17076:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17076:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17168:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17168:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17179:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17179:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17164:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17164:3:46"
                                  },
                                  "nativeSrc": "17164:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17164:18:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "17188:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17188:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17194:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17194:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "17184:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17184:3:46"
                                  },
                                  "nativeSrc": "17184:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17184:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "17157:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "17157:6:46"
                              },
                              "nativeSrc": "17157:48:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17157:48:46"
                            },
                            "nativeSrc": "17157:48:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17157:48:46"
                          },
                          {
                            "nativeSrc": "17214:86:46",
                            "nodeType": "YulAssignment",
                            "src": "17214:86:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "17286:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17286:6:46"
                                },
                                {
                                  "name": "tail",
                                  "nativeSrc": "17295:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17295:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "17222:63:46",
                                "nodeType": "YulIdentifier",
                                "src": "17222:63:46"
                              },
                              "nativeSrc": "17222:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17222:78:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17214:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17214:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "17354:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17354:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17367:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17367:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17378:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17378:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17363:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17363:3:46"
                                  },
                                  "nativeSrc": "17363:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17363:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "17310:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "17310:43:46"
                              },
                              "nativeSrc": "17310:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17310:72:46"
                            },
                            "nativeSrc": "17310:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17310:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
                      "nativeSrc": "16856:533:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "16986:9:46",
                          "nodeType": "YulTypedName",
                          "src": "16986:9:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "16998:6:46",
                          "nodeType": "YulTypedName",
                          "src": "16998:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "17006:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17006:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "17014:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17014:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "17025:4:46",
                          "nodeType": "YulTypedName",
                          "src": "17025:4:46",
                          "type": ""
                        }
                      ],
                      "src": "16856:533:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17521:206:46",
                        "nodeType": "YulBlock",
                        "src": "17521:206:46",
                        "statements": [
                          {
                            "nativeSrc": "17531:26:46",
                            "nodeType": "YulAssignment",
                            "src": "17531:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "17543:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17543:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "17554:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "17554:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "17539:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17539:3:46"
                              },
                              "nativeSrc": "17539:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17539:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "17531:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "17531:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "17611:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17611:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17624:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17624:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17635:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17635:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17620:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17620:3:46"
                                  },
                                  "nativeSrc": "17620:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17620:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "17567:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "17567:43:46"
                              },
                              "nativeSrc": "17567:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17567:71:46"
                            },
                            "nativeSrc": "17567:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17567:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "17692:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17692:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "17705:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "17705:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "17716:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "17716:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "17701:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "17701:3:46"
                                  },
                                  "nativeSrc": "17701:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "17701:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "17648:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "17648:43:46"
                              },
                              "nativeSrc": "17648:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17648:72:46"
                            },
                            "nativeSrc": "17648:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "17648:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                      "nativeSrc": "17395:332:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "17485:9:46",
                          "nodeType": "YulTypedName",
                          "src": "17485:9:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "17497:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17497:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "17505:6:46",
                          "nodeType": "YulTypedName",
                          "src": "17505:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "17516:4:46",
                          "nodeType": "YulTypedName",
                          "src": "17516:4:46",
                          "type": ""
                        }
                      ],
                      "src": "17395:332:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17786:32:46",
                        "nodeType": "YulBlock",
                        "src": "17786:32:46",
                        "statements": [
                          {
                            "nativeSrc": "17796:16:46",
                            "nodeType": "YulAssignment",
                            "src": "17796:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "17807:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "17807:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "17796:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "17796:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_rational_1_by_1",
                      "nativeSrc": "17733:85:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "17768:5:46",
                          "nodeType": "YulTypedName",
                          "src": "17768:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "17778:7:46",
                          "nodeType": "YulTypedName",
                          "src": "17778:7:46",
                          "type": ""
                        }
                      ],
                      "src": "17733:85:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17868:57:46",
                        "nodeType": "YulBlock",
                        "src": "17868:57:46",
                        "statements": [
                          {
                            "nativeSrc": "17878:41:46",
                            "nodeType": "YulAssignment",
                            "src": "17878:41:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "17893:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "17893:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "17900:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "17900:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "17889:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17889:3:46"
                              },
                              "nativeSrc": "17889:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "17889:30:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "17878:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "17878:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint64",
                      "nativeSrc": "17824:101:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "17850:5:46",
                          "nodeType": "YulTypedName",
                          "src": "17850:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "17860:7:46",
                          "nodeType": "YulTypedName",
                          "src": "17860:7:46",
                          "type": ""
                        }
                      ],
                      "src": "17824:101:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "17963:28:46",
                        "nodeType": "YulBlock",
                        "src": "17963:28:46",
                        "statements": [
                          {
                            "nativeSrc": "17973:12:46",
                            "nodeType": "YulAssignment",
                            "src": "17973:12:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "17980:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "17980:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nativeSrc": "17973:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "17973:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "identity",
                      "nativeSrc": "17931:60:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "17949:5:46",
                          "nodeType": "YulTypedName",
                          "src": "17949:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nativeSrc": "17959:3:46",
                          "nodeType": "YulTypedName",
                          "src": "17959:3:46",
                          "type": ""
                        }
                      ],
                      "src": "17931:60:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18064:89:46",
                        "nodeType": "YulBlock",
                        "src": "18064:89:46",
                        "statements": [
                          {
                            "nativeSrc": "18074:73:46",
                            "nodeType": "YulAssignment",
                            "src": "18074:73:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "18139:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "18139:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_rational_1_by_1",
                                        "nativeSrc": "18113:25:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "18113:25:46"
                                      },
                                      "nativeSrc": "18113:32:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "18113:32:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "identity",
                                    "nativeSrc": "18104:8:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18104:8:46"
                                  },
                                  "nativeSrc": "18104:42:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18104:42:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint64",
                                "nativeSrc": "18087:16:46",
                                "nodeType": "YulIdentifier",
                                "src": "18087:16:46"
                              },
                              "nativeSrc": "18087:60:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18087:60:46"
                            },
                            "variableNames": [
                              {
                                "name": "converted",
                                "nativeSrc": "18074:9:46",
                                "nodeType": "YulIdentifier",
                                "src": "18074:9:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "convert_t_rational_1_by_1_to_t_uint64",
                      "nativeSrc": "17997:156:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "18044:5:46",
                          "nodeType": "YulTypedName",
                          "src": "18044:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "converted",
                          "nativeSrc": "18054:9:46",
                          "nodeType": "YulTypedName",
                          "src": "18054:9:46",
                          "type": ""
                        }
                      ],
                      "src": "17997:156:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18231:73:46",
                        "nodeType": "YulBlock",
                        "src": "18231:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "18248:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18248:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "18291:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18291:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "convert_t_rational_1_by_1_to_t_uint64",
                                    "nativeSrc": "18253:37:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18253:37:46"
                                  },
                                  "nativeSrc": "18253:44:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18253:44:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "18241:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "18241:6:46"
                              },
                              "nativeSrc": "18241:57:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18241:57:46"
                            },
                            "nativeSrc": "18241:57:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18241:57:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                      "nativeSrc": "18159:145:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "18219:5:46",
                          "nodeType": "YulTypedName",
                          "src": "18219:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "18226:3:46",
                          "nodeType": "YulTypedName",
                          "src": "18226:3:46",
                          "type": ""
                        }
                      ],
                      "src": "18159:145:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18415:131:46",
                        "nodeType": "YulBlock",
                        "src": "18415:131:46",
                        "statements": [
                          {
                            "nativeSrc": "18425:26:46",
                            "nodeType": "YulAssignment",
                            "src": "18425:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "18437:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18437:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "18448:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18448:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "18433:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "18433:3:46"
                              },
                              "nativeSrc": "18433:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18433:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "18425:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "18425:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "18512:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18512:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "18525:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18525:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "18536:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "18536:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "18521:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18521:3:46"
                                  },
                                  "nativeSrc": "18521:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18521:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                                "nativeSrc": "18461:50:46",
                                "nodeType": "YulIdentifier",
                                "src": "18461:50:46"
                              },
                              "nativeSrc": "18461:78:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18461:78:46"
                            },
                            "nativeSrc": "18461:78:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18461:78:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
                      "nativeSrc": "18310:236:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "18387:9:46",
                          "nodeType": "YulTypedName",
                          "src": "18387:9:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "18399:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18399:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "18410:4:46",
                          "nodeType": "YulTypedName",
                          "src": "18410:4:46",
                          "type": ""
                        }
                      ],
                      "src": "18310:236:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18658:64:46",
                        "nodeType": "YulBlock",
                        "src": "18658:64:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "18680:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "18680:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "18688:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "18688:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "18676:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "18676:3:46"
                                  },
                                  "nativeSrc": "18676:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "18676:14:46"
                                },
                                {
                                  "hexValue": "4e6f74205665726966696572204163636f756e74",
                                  "kind": "string",
                                  "nativeSrc": "18692:22:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18692:22:46",
                                  "type": "",
                                  "value": "Not Verifier Account"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "18669:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "18669:6:46"
                              },
                              "nativeSrc": "18669:46:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18669:46:46"
                            },
                            "nativeSrc": "18669:46:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18669:46:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7",
                      "nativeSrc": "18552:170:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "18650:6:46",
                          "nodeType": "YulTypedName",
                          "src": "18650:6:46",
                          "type": ""
                        }
                      ],
                      "src": "18552:170:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "18874:220:46",
                        "nodeType": "YulBlock",
                        "src": "18874:220:46",
                        "statements": [
                          {
                            "nativeSrc": "18884:74:46",
                            "nodeType": "YulAssignment",
                            "src": "18884:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "18950:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "18950:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "18955:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "18955:2:46",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "18891:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "18891:58:46"
                              },
                              "nativeSrc": "18891:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18891:67:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "18884:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "18884:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "19056:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19056:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7",
                                "nativeSrc": "18967:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "18967:88:46"
                              },
                              "nativeSrc": "18967:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "18967:93:46"
                            },
                            "nativeSrc": "18967:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "18967:93:46"
                          },
                          {
                            "nativeSrc": "19069:19:46",
                            "nodeType": "YulAssignment",
                            "src": "19069:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "19080:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19080:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19085:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19085:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "19076:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "19076:3:46"
                              },
                              "nativeSrc": "19076:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19076:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "19069:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "19069:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "18728:366:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "18862:3:46",
                          "nodeType": "YulTypedName",
                          "src": "18862:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "18870:3:46",
                          "nodeType": "YulTypedName",
                          "src": "18870:3:46",
                          "type": ""
                        }
                      ],
                      "src": "18728:366:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19271:248:46",
                        "nodeType": "YulBlock",
                        "src": "19271:248:46",
                        "statements": [
                          {
                            "nativeSrc": "19281:26:46",
                            "nodeType": "YulAssignment",
                            "src": "19281:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "19293:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19293:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "19304:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "19304:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "19289:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "19289:3:46"
                              },
                              "nativeSrc": "19289:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19289:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "19281:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "19281:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "19328:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19328:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "19339:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "19339:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "19324:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19324:3:46"
                                  },
                                  "nativeSrc": "19324:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19324:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "19347:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19347:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "19353:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "19353:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "19343:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19343:3:46"
                                  },
                                  "nativeSrc": "19343:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19343:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "19317:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19317:6:46"
                              },
                              "nativeSrc": "19317:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19317:47:46"
                            },
                            "nativeSrc": "19317:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19317:47:46"
                          },
                          {
                            "nativeSrc": "19373:139:46",
                            "nodeType": "YulAssignment",
                            "src": "19373:139:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "19507:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19507:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "19381:124:46",
                                "nodeType": "YulIdentifier",
                                "src": "19381:124:46"
                              },
                              "nativeSrc": "19381:131:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19381:131:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "19373:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "19373:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "19100:419:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "19251:9:46",
                          "nodeType": "YulTypedName",
                          "src": "19251:9:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "19266:4:46",
                          "nodeType": "YulTypedName",
                          "src": "19266:4:46",
                          "type": ""
                        }
                      ],
                      "src": "19100:419:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19572:32:46",
                        "nodeType": "YulBlock",
                        "src": "19572:32:46",
                        "statements": [
                          {
                            "nativeSrc": "19582:16:46",
                            "nodeType": "YulAssignment",
                            "src": "19582:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "19593:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "19593:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "aligned",
                                "nativeSrc": "19582:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "19582:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "leftAlign_t_uint256",
                      "nativeSrc": "19525:79:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "19554:5:46",
                          "nodeType": "YulTypedName",
                          "src": "19554:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "aligned",
                          "nativeSrc": "19564:7:46",
                          "nodeType": "YulTypedName",
                          "src": "19564:7:46",
                          "type": ""
                        }
                      ],
                      "src": "19525:79:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19693:74:46",
                        "nodeType": "YulBlock",
                        "src": "19693:74:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "19710:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19710:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "19753:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "19753:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nativeSrc": "19735:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "19735:17:46"
                                      },
                                      "nativeSrc": "19735:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "19735:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "leftAlign_t_uint256",
                                    "nativeSrc": "19715:19:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "19715:19:46"
                                  },
                                  "nativeSrc": "19715:45:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "19715:45:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "19703:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "19703:6:46"
                              },
                              "nativeSrc": "19703:58:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19703:58:46"
                            },
                            "nativeSrc": "19703:58:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19703:58:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nativeSrc": "19610:157:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "19681:5:46",
                          "nodeType": "YulTypedName",
                          "src": "19681:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "19688:3:46",
                          "nodeType": "YulTypedName",
                          "src": "19688:3:46",
                          "type": ""
                        }
                      ],
                      "src": "19610:157:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "19917:253:46",
                        "nodeType": "YulBlock",
                        "src": "19917:253:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "19990:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19990:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "19999:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "19999:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                                "nativeSrc": "19928:61:46",
                                "nodeType": "YulIdentifier",
                                "src": "19928:61:46"
                              },
                              "nativeSrc": "19928:75:46",
                              "nodeType": "YulFunctionCall",
                              "src": "19928:75:46"
                            },
                            "nativeSrc": "19928:75:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "19928:75:46"
                          },
                          {
                            "nativeSrc": "20012:19:46",
                            "nodeType": "YulAssignment",
                            "src": "20012:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20023:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20023:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20028:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20028:2:46",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20019:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20019:3:46"
                              },
                              "nativeSrc": "20019:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20019:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "20012:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20012:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "20103:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20103:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "20112:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20112:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                                "nativeSrc": "20041:61:46",
                                "nodeType": "YulIdentifier",
                                "src": "20041:61:46"
                              },
                              "nativeSrc": "20041:75:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20041:75:46"
                            },
                            "nativeSrc": "20041:75:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20041:75:46"
                          },
                          {
                            "nativeSrc": "20125:19:46",
                            "nodeType": "YulAssignment",
                            "src": "20125:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20136:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20136:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20141:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20141:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20132:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20132:3:46"
                              },
                              "nativeSrc": "20132:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20132:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "20125:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20125:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "20154:10:46",
                            "nodeType": "YulAssignment",
                            "src": "20154:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "20161:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "20161:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "20154:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20154:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "19773:397:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "19888:3:46",
                          "nodeType": "YulTypedName",
                          "src": "19888:3:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "19894:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19894:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "19902:6:46",
                          "nodeType": "YulTypedName",
                          "src": "19902:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "19913:3:46",
                          "nodeType": "YulTypedName",
                          "src": "19913:3:46",
                          "type": ""
                        }
                      ],
                      "src": "19773:397:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20282:61:46",
                        "nodeType": "YulBlock",
                        "src": "20282:61:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "20304:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20304:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "20312:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "20312:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "20300:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "20300:3:46"
                                  },
                                  "nativeSrc": "20300:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "20300:14:46"
                                },
                                {
                                  "hexValue": "4e6f74204167656e74204163636f756e74",
                                  "kind": "string",
                                  "nativeSrc": "20316:19:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20316:19:46",
                                  "type": "",
                                  "value": "Not Agent Account"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "20293:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20293:6:46"
                              },
                              "nativeSrc": "20293:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20293:43:46"
                            },
                            "nativeSrc": "20293:43:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20293:43:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8",
                      "nativeSrc": "20176:167:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "20274:6:46",
                          "nodeType": "YulTypedName",
                          "src": "20274:6:46",
                          "type": ""
                        }
                      ],
                      "src": "20176:167:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20495:220:46",
                        "nodeType": "YulBlock",
                        "src": "20495:220:46",
                        "statements": [
                          {
                            "nativeSrc": "20505:74:46",
                            "nodeType": "YulAssignment",
                            "src": "20505:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20571:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20571:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20576:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20576:2:46",
                                  "type": "",
                                  "value": "17"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "20512:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "20512:58:46"
                              },
                              "nativeSrc": "20512:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20512:67:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "20505:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20505:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20677:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20677:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8",
                                "nativeSrc": "20588:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "20588:88:46"
                              },
                              "nativeSrc": "20588:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20588:93:46"
                            },
                            "nativeSrc": "20588:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20588:93:46"
                          },
                          {
                            "nativeSrc": "20690:19:46",
                            "nodeType": "YulAssignment",
                            "src": "20690:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20701:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20701:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20706:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20706:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20697:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20697:3:46"
                              },
                              "nativeSrc": "20697:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20697:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "20690:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20690:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "20349:366:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "20483:3:46",
                          "nodeType": "YulTypedName",
                          "src": "20483:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "20491:3:46",
                          "nodeType": "YulTypedName",
                          "src": "20491:3:46",
                          "type": ""
                        }
                      ],
                      "src": "20349:366:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "20892:248:46",
                        "nodeType": "YulBlock",
                        "src": "20892:248:46",
                        "statements": [
                          {
                            "nativeSrc": "20902:26:46",
                            "nodeType": "YulAssignment",
                            "src": "20902:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "20914:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "20914:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "20925:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "20925:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "20910:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "20910:3:46"
                              },
                              "nativeSrc": "20910:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20910:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "20902:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "20902:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "20949:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20949:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "20960:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "20960:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "20945:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "20945:3:46"
                                  },
                                  "nativeSrc": "20945:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "20945:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "20968:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20968:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "20974:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "20974:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "20964:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "20964:3:46"
                                  },
                                  "nativeSrc": "20964:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "20964:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "20938:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "20938:6:46"
                              },
                              "nativeSrc": "20938:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "20938:47:46"
                            },
                            "nativeSrc": "20938:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "20938:47:46"
                          },
                          {
                            "nativeSrc": "20994:139:46",
                            "nodeType": "YulAssignment",
                            "src": "20994:139:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "21128:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21128:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "21002:124:46",
                                "nodeType": "YulIdentifier",
                                "src": "21002:124:46"
                              },
                              "nativeSrc": "21002:131:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21002:131:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "20994:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "20994:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "20721:419:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "20872:9:46",
                          "nodeType": "YulTypedName",
                          "src": "20872:9:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "20887:4:46",
                          "nodeType": "YulTypedName",
                          "src": "20887:4:46",
                          "type": ""
                        }
                      ],
                      "src": "20721:419:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21330:251:46",
                        "nodeType": "YulBlock",
                        "src": "21330:251:46",
                        "statements": [
                          {
                            "nativeSrc": "21341:102:46",
                            "nodeType": "YulAssignment",
                            "src": "21341:102:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "21430:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21430:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "21439:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21439:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "21348:81:46",
                                "nodeType": "YulIdentifier",
                                "src": "21348:81:46"
                              },
                              "nativeSrc": "21348:95:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21348:95:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "21341:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21341:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "21453:102:46",
                            "nodeType": "YulAssignment",
                            "src": "21453:102:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "21542:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21542:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "21551:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21551:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "21460:81:46",
                                "nodeType": "YulIdentifier",
                                "src": "21460:81:46"
                              },
                              "nativeSrc": "21460:95:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21460:95:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "21453:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21453:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "21565:10:46",
                            "nodeType": "YulAssignment",
                            "src": "21565:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "21572:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "21572:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "21565:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21565:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "21146:435:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "21301:3:46",
                          "nodeType": "YulTypedName",
                          "src": "21301:3:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "21307:6:46",
                          "nodeType": "YulTypedName",
                          "src": "21307:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "21315:6:46",
                          "nodeType": "YulTypedName",
                          "src": "21315:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "21326:3:46",
                          "nodeType": "YulTypedName",
                          "src": "21326:3:46",
                          "type": ""
                        }
                      ],
                      "src": "21146:435:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21615:152:46",
                        "nodeType": "YulBlock",
                        "src": "21615:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "21632:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21632:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21635:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21635:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "21625:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "21625:6:46"
                              },
                              "nativeSrc": "21625:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21625:88:46"
                            },
                            "nativeSrc": "21625:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21625:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "21729:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21729:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21732:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21732:4:46",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "21722:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "21722:6:46"
                              },
                              "nativeSrc": "21722:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21722:15:46"
                            },
                            "nativeSrc": "21722:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21722:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "21753:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21753:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21756:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21756:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "21746:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "21746:6:46"
                              },
                              "nativeSrc": "21746:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21746:15:46"
                            },
                            "nativeSrc": "21746:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "21746:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x11",
                      "nativeSrc": "21587:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "21587:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "21816:190:46",
                        "nodeType": "YulBlock",
                        "src": "21816:190:46",
                        "statements": [
                          {
                            "nativeSrc": "21826:33:46",
                            "nodeType": "YulAssignment",
                            "src": "21826:33:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "21853:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21853:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nativeSrc": "21835:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "21835:17:46"
                              },
                              "nativeSrc": "21835:24:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21835:24:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "21826:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "21826:5:46"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "21949:22:46",
                              "nodeType": "YulBlock",
                              "src": "21949:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nativeSrc": "21951:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "21951:16:46"
                                    },
                                    "nativeSrc": "21951:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "21951:18:46"
                                  },
                                  "nativeSrc": "21951:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "21951:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "21874:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21874:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21881:66:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21881:66:46",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nativeSrc": "21871:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "21871:2:46"
                              },
                              "nativeSrc": "21871:77:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21871:77:46"
                            },
                            "nativeSrc": "21868:103:46",
                            "nodeType": "YulIf",
                            "src": "21868:103:46"
                          },
                          {
                            "nativeSrc": "21980:20:46",
                            "nodeType": "YulAssignment",
                            "src": "21980:20:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "21991:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "21991:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "21998:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "21998:1:46",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "21987:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21987:3:46"
                              },
                              "nativeSrc": "21987:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "21987:13:46"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nativeSrc": "21980:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "21980:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "increment_t_uint256",
                      "nativeSrc": "21773:233:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "21802:5:46",
                          "nodeType": "YulTypedName",
                          "src": "21802:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nativeSrc": "21812:3:46",
                          "nodeType": "YulTypedName",
                          "src": "21812:3:46",
                          "type": ""
                        }
                      ],
                      "src": "21773:233:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22055:79:46",
                        "nodeType": "YulBlock",
                        "src": "22055:79:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "22112:16:46",
                              "nodeType": "YulBlock",
                              "src": "22112:16:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "22121:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "22121:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "22124:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "22124:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nativeSrc": "22114:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22114:6:46"
                                    },
                                    "nativeSrc": "22114:12:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "22114:12:46"
                                  },
                                  "nativeSrc": "22114:12:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "22114:12:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "22078:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22078:5:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "22103:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "22103:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_bytes32",
                                        "nativeSrc": "22085:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "22085:17:46"
                                      },
                                      "nativeSrc": "22085:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "22085:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "eq",
                                    "nativeSrc": "22075:2:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22075:2:46"
                                  },
                                  "nativeSrc": "22075:35:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22075:35:46"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nativeSrc": "22068:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "22068:6:46"
                              },
                              "nativeSrc": "22068:43:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22068:43:46"
                            },
                            "nativeSrc": "22065:63:46",
                            "nodeType": "YulIf",
                            "src": "22065:63:46"
                          }
                        ]
                      },
                      "name": "validator_revert_t_bytes32",
                      "nativeSrc": "22012:122:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22048:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22048:5:46",
                          "type": ""
                        }
                      ],
                      "src": "22012:122:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22203:80:46",
                        "nodeType": "YulBlock",
                        "src": "22203:80:46",
                        "statements": [
                          {
                            "nativeSrc": "22213:22:46",
                            "nodeType": "YulAssignment",
                            "src": "22213:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "22228:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22228:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "22222:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "22222:5:46"
                              },
                              "nativeSrc": "22222:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22222:13:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "22213:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "22213:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "22271:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22271:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_bytes32",
                                "nativeSrc": "22244:26:46",
                                "nodeType": "YulIdentifier",
                                "src": "22244:26:46"
                              },
                              "nativeSrc": "22244:33:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22244:33:46"
                            },
                            "nativeSrc": "22244:33:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "22244:33:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes32_fromMemory",
                      "nativeSrc": "22140:143:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "22181:6:46",
                          "nodeType": "YulTypedName",
                          "src": "22181:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "22189:3:46",
                          "nodeType": "YulTypedName",
                          "src": "22189:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "22197:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22197:5:46",
                          "type": ""
                        }
                      ],
                      "src": "22140:143:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22366:274:46",
                        "nodeType": "YulBlock",
                        "src": "22366:274:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "22412:83:46",
                              "nodeType": "YulBlock",
                              "src": "22412:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "22414:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22414:77:46"
                                    },
                                    "nativeSrc": "22414:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "22414:79:46"
                                  },
                                  "nativeSrc": "22414:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "22414:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "22387:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22387:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "22396:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22396:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "22383:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22383:3:46"
                                  },
                                  "nativeSrc": "22383:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22383:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "22408:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "22408:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "22379:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "22379:3:46"
                              },
                              "nativeSrc": "22379:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22379:32:46"
                            },
                            "nativeSrc": "22376:119:46",
                            "nodeType": "YulIf",
                            "src": "22376:119:46"
                          },
                          {
                            "nativeSrc": "22505:128:46",
                            "nodeType": "YulBlock",
                            "src": "22505:128:46",
                            "statements": [
                              {
                                "nativeSrc": "22520:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "22520:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "22534:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "22534:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "22524:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "22524:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "22549:74:46",
                                "nodeType": "YulAssignment",
                                "src": "22549:74:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "22595:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "22595:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "22606:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "22606:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "22591:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "22591:3:46"
                                      },
                                      "nativeSrc": "22591:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "22591:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "22615:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "22615:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes32_fromMemory",
                                    "nativeSrc": "22559:31:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22559:31:46"
                                  },
                                  "nativeSrc": "22559:64:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "22559:64:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "22549:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "22549:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bytes32_fromMemory",
                      "nativeSrc": "22289:351:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "22336:9:46",
                          "nodeType": "YulTypedName",
                          "src": "22336:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "22347:7:46",
                          "nodeType": "YulTypedName",
                          "src": "22347:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "22359:6:46",
                          "nodeType": "YulTypedName",
                          "src": "22359:6:46",
                          "type": ""
                        }
                      ],
                      "src": "22289:351:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22704:40:46",
                        "nodeType": "YulBlock",
                        "src": "22704:40:46",
                        "statements": [
                          {
                            "nativeSrc": "22715:22:46",
                            "nodeType": "YulAssignment",
                            "src": "22715:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "22731:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22731:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "22725:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "22725:5:46"
                              },
                              "nativeSrc": "22725:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22725:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nativeSrc": "22715:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "22715:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_length_t_bytes_memory_ptr",
                      "nativeSrc": "22646:98:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22687:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22687:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "length",
                          "nativeSrc": "22697:6:46",
                          "nodeType": "YulTypedName",
                          "src": "22697:6:46",
                          "type": ""
                        }
                      ],
                      "src": "22646:98:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "22845:73:46",
                        "nodeType": "YulBlock",
                        "src": "22845:73:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "22862:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22862:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "22867:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22867:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "22855:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "22855:6:46"
                              },
                              "nativeSrc": "22855:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22855:19:46"
                            },
                            "nativeSrc": "22855:19:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "22855:19:46"
                          },
                          {
                            "nativeSrc": "22883:29:46",
                            "nodeType": "YulAssignment",
                            "src": "22883:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "22902:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "22902:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "22907:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "22907:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "22898:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "22898:3:46"
                              },
                              "nativeSrc": "22898:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "22898:14:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "22883:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "22883:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nativeSrc": "22750:168:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "22817:3:46",
                          "nodeType": "YulTypedName",
                          "src": "22817:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "22822:6:46",
                          "nodeType": "YulTypedName",
                          "src": "22822:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "22833:11:46",
                          "nodeType": "YulTypedName",
                          "src": "22833:11:46",
                          "type": ""
                        }
                      ],
                      "src": "22750:168:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "23014:283:46",
                        "nodeType": "YulBlock",
                        "src": "23014:283:46",
                        "statements": [
                          {
                            "nativeSrc": "23024:52:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "23024:52:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "23070:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23070:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_bytes_memory_ptr",
                                "nativeSrc": "23038:31:46",
                                "nodeType": "YulIdentifier",
                                "src": "23038:31:46"
                              },
                              "nativeSrc": "23038:38:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23038:38:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "23028:6:46",
                                "nodeType": "YulTypedName",
                                "src": "23028:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "23085:77:46",
                            "nodeType": "YulAssignment",
                            "src": "23085:77:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "23150:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23150:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "23155:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23155:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                "nativeSrc": "23092:57:46",
                                "nodeType": "YulIdentifier",
                                "src": "23092:57:46"
                              },
                              "nativeSrc": "23092:70:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23092:70:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "23085:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23085:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "23210:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23210:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23217:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23217:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23206:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23206:3:46"
                                  },
                                  "nativeSrc": "23206:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23206:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "23224:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23224:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "23229:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23229:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "23171:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "23171:34:46"
                              },
                              "nativeSrc": "23171:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23171:65:46"
                            },
                            "nativeSrc": "23171:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23171:65:46"
                          },
                          {
                            "nativeSrc": "23245:46:46",
                            "nodeType": "YulAssignment",
                            "src": "23245:46:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "23256:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23256:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "23283:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23283:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "round_up_to_mul_of_32",
                                    "nativeSrc": "23261:21:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23261:21:46"
                                  },
                                  "nativeSrc": "23261:29:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23261:29:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "23252:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23252:3:46"
                              },
                              "nativeSrc": "23252:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23252:39:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "23245:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23245:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nativeSrc": "22924:373:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "22995:5:46",
                          "nodeType": "YulTypedName",
                          "src": "22995:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "23002:3:46",
                          "nodeType": "YulTypedName",
                          "src": "23002:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "23010:3:46",
                          "nodeType": "YulTypedName",
                          "src": "23010:3:46",
                          "type": ""
                        }
                      ],
                      "src": "22924:373:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "23503:440:46",
                        "nodeType": "YulBlock",
                        "src": "23503:440:46",
                        "statements": [
                          {
                            "nativeSrc": "23513:27:46",
                            "nodeType": "YulAssignment",
                            "src": "23513:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "23525:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23525:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "23536:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "23536:3:46",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "23521:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "23521:3:46"
                              },
                              "nativeSrc": "23521:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23521:19:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "23513:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "23513:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "23594:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23594:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23607:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23607:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23618:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23618:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23603:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23603:3:46"
                                  },
                                  "nativeSrc": "23603:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23603:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "23550:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "23550:43:46"
                              },
                              "nativeSrc": "23550:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23550:71:46"
                            },
                            "nativeSrc": "23550:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23550:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "23675:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23675:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23688:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23688:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23699:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23699:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23684:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23684:3:46"
                                  },
                                  "nativeSrc": "23684:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23684:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "23631:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "23631:43:46"
                              },
                              "nativeSrc": "23631:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23631:72:46"
                            },
                            "nativeSrc": "23631:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23631:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "23757:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23757:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23770:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23770:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23781:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23781:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23766:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23766:3:46"
                                  },
                                  "nativeSrc": "23766:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23766:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "23713:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "23713:43:46"
                              },
                              "nativeSrc": "23713:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23713:72:46"
                            },
                            "nativeSrc": "23713:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23713:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23806:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23806:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "23817:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "23817:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "23802:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23802:3:46"
                                  },
                                  "nativeSrc": "23802:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23802:18:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "23826:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23826:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "23832:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "23832:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "23822:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "23822:3:46"
                                  },
                                  "nativeSrc": "23822:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "23822:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "23795:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "23795:6:46"
                              },
                              "nativeSrc": "23795:48:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23795:48:46"
                            },
                            "nativeSrc": "23795:48:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "23795:48:46"
                          },
                          {
                            "nativeSrc": "23852:84:46",
                            "nodeType": "YulAssignment",
                            "src": "23852:84:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "23922:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23922:6:46"
                                },
                                {
                                  "name": "tail",
                                  "nativeSrc": "23931:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "23931:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                "nativeSrc": "23860:61:46",
                                "nodeType": "YulIdentifier",
                                "src": "23860:61:46"
                              },
                              "nativeSrc": "23860:76:46",
                              "nodeType": "YulFunctionCall",
                              "src": "23860:76:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "23852:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "23852:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                      "nativeSrc": "23303:640:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "23451:9:46",
                          "nodeType": "YulTypedName",
                          "src": "23451:9:46",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nativeSrc": "23463:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23463:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "23471:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23471:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "23479:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23479:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "23487:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23487:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "23498:4:46",
                          "nodeType": "YulTypedName",
                          "src": "23498:4:46",
                          "type": ""
                        }
                      ],
                      "src": "23303:640:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24011:79:46",
                        "nodeType": "YulBlock",
                        "src": "24011:79:46",
                        "statements": [
                          {
                            "nativeSrc": "24021:22:46",
                            "nodeType": "YulAssignment",
                            "src": "24021:22:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "24036:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24036:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "24030:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "24030:5:46"
                              },
                              "nativeSrc": "24030:13:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24030:13:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "24021:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "24021:5:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "24078:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24078:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "validator_revert_t_bytes4",
                                "nativeSrc": "24052:25:46",
                                "nodeType": "YulIdentifier",
                                "src": "24052:25:46"
                              },
                              "nativeSrc": "24052:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24052:32:46"
                            },
                            "nativeSrc": "24052:32:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24052:32:46"
                          }
                        ]
                      },
                      "name": "abi_decode_t_bytes4_fromMemory",
                      "nativeSrc": "23949:141:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "offset",
                          "nativeSrc": "23989:6:46",
                          "nodeType": "YulTypedName",
                          "src": "23989:6:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "23997:3:46",
                          "nodeType": "YulTypedName",
                          "src": "23997:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value",
                          "nativeSrc": "24005:5:46",
                          "nodeType": "YulTypedName",
                          "src": "24005:5:46",
                          "type": ""
                        }
                      ],
                      "src": "23949:141:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24172:273:46",
                        "nodeType": "YulBlock",
                        "src": "24172:273:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "24218:83:46",
                              "nodeType": "YulBlock",
                              "src": "24218:83:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                      "nativeSrc": "24220:77:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24220:77:46"
                                    },
                                    "nativeSrc": "24220:79:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "24220:79:46"
                                  },
                                  "nativeSrc": "24220:79:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "24220:79:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "24193:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24193:7:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24202:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24202:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "24189:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24189:3:46"
                                  },
                                  "nativeSrc": "24189:23:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24189:23:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "24214:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "24214:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nativeSrc": "24185:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24185:3:46"
                              },
                              "nativeSrc": "24185:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24185:32:46"
                            },
                            "nativeSrc": "24182:119:46",
                            "nodeType": "YulIf",
                            "src": "24182:119:46"
                          },
                          {
                            "nativeSrc": "24311:127:46",
                            "nodeType": "YulBlock",
                            "src": "24311:127:46",
                            "statements": [
                              {
                                "nativeSrc": "24326:15:46",
                                "nodeType": "YulVariableDeclaration",
                                "src": "24326:15:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "24340:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "24340:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                "variables": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "24330:6:46",
                                    "nodeType": "YulTypedName",
                                    "src": "24330:6:46",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "24355:73:46",
                                "nodeType": "YulAssignment",
                                "src": "24355:73:46",
                                "value": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nativeSrc": "24400:9:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "24400:9:46"
                                        },
                                        {
                                          "name": "offset",
                                          "nativeSrc": "24411:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "24411:6:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "24396:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "24396:3:46"
                                      },
                                      "nativeSrc": "24396:22:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "24396:22:46"
                                    },
                                    {
                                      "name": "dataEnd",
                                      "nativeSrc": "24420:7:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24420:7:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_bytes4_fromMemory",
                                    "nativeSrc": "24365:30:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24365:30:46"
                                  },
                                  "nativeSrc": "24365:63:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24365:63:46"
                                },
                                "variableNames": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "24355:6:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24355:6:46"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_decode_tuple_t_bytes4_fromMemory",
                      "nativeSrc": "24096:349:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "24142:9:46",
                          "nodeType": "YulTypedName",
                          "src": "24142:9:46",
                          "type": ""
                        },
                        {
                          "name": "dataEnd",
                          "nativeSrc": "24153:7:46",
                          "nodeType": "YulTypedName",
                          "src": "24153:7:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "value0",
                          "nativeSrc": "24165:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24165:6:46",
                          "type": ""
                        }
                      ],
                      "src": "24096:349:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24577:206:46",
                        "nodeType": "YulBlock",
                        "src": "24577:206:46",
                        "statements": [
                          {
                            "nativeSrc": "24587:26:46",
                            "nodeType": "YulAssignment",
                            "src": "24587:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "24599:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24599:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "24610:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "24610:2:46",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "24595:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "24595:3:46"
                              },
                              "nativeSrc": "24595:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24595:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "24587:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "24587:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "24667:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24667:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24680:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24680:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24691:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24691:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24676:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24676:3:46"
                                  },
                                  "nativeSrc": "24676:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24676:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_address_to_t_address_fromStack",
                                "nativeSrc": "24623:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "24623:43:46"
                              },
                              "nativeSrc": "24623:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24623:71:46"
                            },
                            "nativeSrc": "24623:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24623:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "24748:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "24748:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "24761:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24761:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24772:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24772:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24757:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24757:3:46"
                                  },
                                  "nativeSrc": "24757:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24757:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                "nativeSrc": "24704:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "24704:43:46"
                              },
                              "nativeSrc": "24704:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24704:72:46"
                            },
                            "nativeSrc": "24704:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24704:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                      "nativeSrc": "24451:332:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "24541:9:46",
                          "nodeType": "YulTypedName",
                          "src": "24541:9:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "24553:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24553:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "24561:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24561:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "24572:4:46",
                          "nodeType": "YulTypedName",
                          "src": "24572:4:46",
                          "type": ""
                        }
                      ],
                      "src": "24451:332:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "24895:68:46",
                        "nodeType": "YulBlock",
                        "src": "24895:68:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "24917:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "24917:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "24925:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "24925:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "24913:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "24913:3:46"
                                  },
                                  "nativeSrc": "24913:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "24913:14:46"
                                },
                                {
                                  "hexValue": "696e76616c6964207369676e6174757265206c656e677468",
                                  "kind": "string",
                                  "nativeSrc": "24929:26:46",
                                  "nodeType": "YulLiteral",
                                  "src": "24929:26:46",
                                  "type": "",
                                  "value": "invalid signature length"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "24906:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "24906:6:46"
                              },
                              "nativeSrc": "24906:50:46",
                              "nodeType": "YulFunctionCall",
                              "src": "24906:50:46"
                            },
                            "nativeSrc": "24906:50:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "24906:50:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                      "nativeSrc": "24789:174:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "24887:6:46",
                          "nodeType": "YulTypedName",
                          "src": "24887:6:46",
                          "type": ""
                        }
                      ],
                      "src": "24789:174:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25115:220:46",
                        "nodeType": "YulBlock",
                        "src": "25115:220:46",
                        "statements": [
                          {
                            "nativeSrc": "25125:74:46",
                            "nodeType": "YulAssignment",
                            "src": "25125:74:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25191:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25191:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25196:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25196:2:46",
                                  "type": "",
                                  "value": "24"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                "nativeSrc": "25132:58:46",
                                "nodeType": "YulIdentifier",
                                "src": "25132:58:46"
                              },
                              "nativeSrc": "25132:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25132:67:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "25125:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25125:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25297:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25297:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
                                "nativeSrc": "25208:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "25208:88:46"
                              },
                              "nativeSrc": "25208:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25208:93:46"
                            },
                            "nativeSrc": "25208:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "25208:93:46"
                          },
                          {
                            "nativeSrc": "25310:19:46",
                            "nodeType": "YulAssignment",
                            "src": "25310:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "25321:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25321:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25326:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25326:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "25317:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25317:3:46"
                              },
                              "nativeSrc": "25317:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25317:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "25310:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25310:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87_to_t_string_memory_ptr_fromStack",
                      "nativeSrc": "24969:366:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "25103:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25103:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "25111:3:46",
                          "nodeType": "YulTypedName",
                          "src": "25111:3:46",
                          "type": ""
                        }
                      ],
                      "src": "24969:366:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25512:248:46",
                        "nodeType": "YulBlock",
                        "src": "25512:248:46",
                        "statements": [
                          {
                            "nativeSrc": "25522:26:46",
                            "nodeType": "YulAssignment",
                            "src": "25522:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "25534:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25534:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25545:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25545:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "25530:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "25530:3:46"
                              },
                              "nativeSrc": "25530:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25530:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "25522:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "25522:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "25569:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "25569:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "25580:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "25580:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "25565:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "25565:3:46"
                                  },
                                  "nativeSrc": "25565:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "25565:17:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nativeSrc": "25588:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "25588:4:46"
                                    },
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "25594:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "25594:9:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "25584:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "25584:3:46"
                                  },
                                  "nativeSrc": "25584:20:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "25584:20:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "25558:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "25558:6:46"
                              },
                              "nativeSrc": "25558:47:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25558:47:46"
                            },
                            "nativeSrc": "25558:47:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "25558:47:46"
                          },
                          {
                            "nativeSrc": "25614:139:46",
                            "nodeType": "YulAssignment",
                            "src": "25614:139:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "25748:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "25748:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87_to_t_string_memory_ptr_fromStack",
                                "nativeSrc": "25622:124:46",
                                "nodeType": "YulIdentifier",
                                "src": "25622:124:46"
                              },
                              "nativeSrc": "25622:131:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25622:131:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "25614:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "25614:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
                      "nativeSrc": "25341:419:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "25492:9:46",
                          "nodeType": "YulTypedName",
                          "src": "25492:9:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "25507:4:46",
                          "nodeType": "YulTypedName",
                          "src": "25507:4:46",
                          "type": ""
                        }
                      ],
                      "src": "25341:419:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "25872:108:46",
                        "nodeType": "YulBlock",
                        "src": "25872:108:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nativeSrc": "25894:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "25894:6:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "25902:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "25902:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "25890:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "25890:3:46"
                                  },
                                  "nativeSrc": "25890:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "25890:14:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "25906:66:46",
                                  "nodeType": "YulLiteral",
                                  "src": "25906:66:46",
                                  "type": "",
                                  "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "25883:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "25883:6:46"
                              },
                              "nativeSrc": "25883:90:46",
                              "nodeType": "YulFunctionCall",
                              "src": "25883:90:46"
                            },
                            "nativeSrc": "25883:90:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "25883:90:46"
                          }
                        ]
                      },
                      "name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                      "nativeSrc": "25766:214:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "memPtr",
                          "nativeSrc": "25864:6:46",
                          "nodeType": "YulTypedName",
                          "src": "25864:6:46",
                          "type": ""
                        }
                      ],
                      "src": "25766:214:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "26150:238:46",
                        "nodeType": "YulBlock",
                        "src": "26150:238:46",
                        "statements": [
                          {
                            "nativeSrc": "26160:92:46",
                            "nodeType": "YulAssignment",
                            "src": "26160:92:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "26244:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "26244:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "26249:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "26249:2:46",
                                  "type": "",
                                  "value": "28"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "26167:76:46",
                                "nodeType": "YulIdentifier",
                                "src": "26167:76:46"
                              },
                              "nativeSrc": "26167:85:46",
                              "nodeType": "YulFunctionCall",
                              "src": "26167:85:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "26160:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "26160:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "26350:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "26350:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                "nativeSrc": "26261:88:46",
                                "nodeType": "YulIdentifier",
                                "src": "26261:88:46"
                              },
                              "nativeSrc": "26261:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "26261:93:46"
                            },
                            "nativeSrc": "26261:93:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "26261:93:46"
                          },
                          {
                            "nativeSrc": "26363:19:46",
                            "nodeType": "YulAssignment",
                            "src": "26363:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "26374:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "26374:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "26379:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "26379:2:46",
                                  "type": "",
                                  "value": "28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "26370:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "26370:3:46"
                              },
                              "nativeSrc": "26370:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "26370:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "26363:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "26363:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "25986:402:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "26138:3:46",
                          "nodeType": "YulTypedName",
                          "src": "26138:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "26146:3:46",
                          "nodeType": "YulTypedName",
                          "src": "26146:3:46",
                          "type": ""
                        }
                      ],
                      "src": "25986:402:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "26441:32:46",
                        "nodeType": "YulBlock",
                        "src": "26441:32:46",
                        "statements": [
                          {
                            "nativeSrc": "26451:16:46",
                            "nodeType": "YulAssignment",
                            "src": "26451:16:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "26462:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "26462:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "aligned",
                                "nativeSrc": "26451:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "26451:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "leftAlign_t_bytes32",
                      "nativeSrc": "26394:79:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "26423:5:46",
                          "nodeType": "YulTypedName",
                          "src": "26423:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "aligned",
                          "nativeSrc": "26433:7:46",
                          "nodeType": "YulTypedName",
                          "src": "26433:7:46",
                          "type": ""
                        }
                      ],
                      "src": "26394:79:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "26562:74:46",
                        "nodeType": "YulBlock",
                        "src": "26562:74:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "26579:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "26579:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "26622:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "26622:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_bytes32",
                                        "nativeSrc": "26604:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "26604:17:46"
                                      },
                                      "nativeSrc": "26604:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "26604:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "leftAlign_t_bytes32",
                                    "nativeSrc": "26584:19:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "26584:19:46"
                                  },
                                  "nativeSrc": "26584:45:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "26584:45:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "26572:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "26572:6:46"
                              },
                              "nativeSrc": "26572:58:46",
                              "nodeType": "YulFunctionCall",
                              "src": "26572:58:46"
                            },
                            "nativeSrc": "26572:58:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "26572:58:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                      "nativeSrc": "26479:157:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "26550:5:46",
                          "nodeType": "YulTypedName",
                          "src": "26550:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "26557:3:46",
                          "nodeType": "YulTypedName",
                          "src": "26557:3:46",
                          "type": ""
                        }
                      ],
                      "src": "26479:157:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "26859:305:46",
                        "nodeType": "YulBlock",
                        "src": "26859:305:46",
                        "statements": [
                          {
                            "nativeSrc": "26870:155:46",
                            "nodeType": "YulAssignment",
                            "src": "26870:155:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "27021:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27021:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "26877:142:46",
                                "nodeType": "YulIdentifier",
                                "src": "26877:142:46"
                              },
                              "nativeSrc": "26877:148:46",
                              "nodeType": "YulFunctionCall",
                              "src": "26877:148:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "26870:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "26870:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "27097:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27097:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "27106:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27106:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
                                "nativeSrc": "27035:61:46",
                                "nodeType": "YulIdentifier",
                                "src": "27035:61:46"
                              },
                              "nativeSrc": "27035:75:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27035:75:46"
                            },
                            "nativeSrc": "27035:75:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27035:75:46"
                          },
                          {
                            "nativeSrc": "27119:19:46",
                            "nodeType": "YulAssignment",
                            "src": "27119:19:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "27130:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27130:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "27135:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "27135:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "27126:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "27126:3:46"
                              },
                              "nativeSrc": "27126:12:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27126:12:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "27119:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "27119:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "27148:10:46",
                            "nodeType": "YulAssignment",
                            "src": "27148:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "27155:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "27155:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "27148:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "27148:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "26642:522:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "26838:3:46",
                          "nodeType": "YulTypedName",
                          "src": "26838:3:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "26844:6:46",
                          "nodeType": "YulTypedName",
                          "src": "26844:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "26855:3:46",
                          "nodeType": "YulTypedName",
                          "src": "26855:3:46",
                          "type": ""
                        }
                      ],
                      "src": "26642:522:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "27213:43:46",
                        "nodeType": "YulBlock",
                        "src": "27213:43:46",
                        "statements": [
                          {
                            "nativeSrc": "27223:27:46",
                            "nodeType": "YulAssignment",
                            "src": "27223:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "27238:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27238:5:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "27245:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "27245:4:46",
                                  "type": "",
                                  "value": "0xff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "27234:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "27234:3:46"
                              },
                              "nativeSrc": "27234:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27234:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "cleaned",
                                "nativeSrc": "27223:7:46",
                                "nodeType": "YulIdentifier",
                                "src": "27223:7:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "cleanup_t_uint8",
                      "nativeSrc": "27170:86:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "27195:5:46",
                          "nodeType": "YulTypedName",
                          "src": "27195:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "cleaned",
                          "nativeSrc": "27205:7:46",
                          "nodeType": "YulTypedName",
                          "src": "27205:7:46",
                          "type": ""
                        }
                      ],
                      "src": "27170:86:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "27323:51:46",
                        "nodeType": "YulBlock",
                        "src": "27323:51:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "27340:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27340:3:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "27361:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "27361:5:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint8",
                                    "nativeSrc": "27345:15:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "27345:15:46"
                                  },
                                  "nativeSrc": "27345:22:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "27345:22:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "27333:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "27333:6:46"
                              },
                              "nativeSrc": "27333:35:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27333:35:46"
                            },
                            "nativeSrc": "27333:35:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27333:35:46"
                          }
                        ]
                      },
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nativeSrc": "27262:112:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "27311:5:46",
                          "nodeType": "YulTypedName",
                          "src": "27311:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "27318:3:46",
                          "nodeType": "YulTypedName",
                          "src": "27318:3:46",
                          "type": ""
                        }
                      ],
                      "src": "27262:112:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "27558:367:46",
                        "nodeType": "YulBlock",
                        "src": "27558:367:46",
                        "statements": [
                          {
                            "nativeSrc": "27568:27:46",
                            "nodeType": "YulAssignment",
                            "src": "27568:27:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nativeSrc": "27580:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27580:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "27591:3:46",
                                  "nodeType": "YulLiteral",
                                  "src": "27591:3:46",
                                  "type": "",
                                  "value": "128"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "27576:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "27576:3:46"
                              },
                              "nativeSrc": "27576:19:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27576:19:46"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nativeSrc": "27568:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "27568:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "27649:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27649:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "27662:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "27662:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "27673:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "27673:1:46",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "27658:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "27658:3:46"
                                  },
                                  "nativeSrc": "27658:17:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "27658:17:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                "nativeSrc": "27605:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "27605:43:46"
                              },
                              "nativeSrc": "27605:71:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27605:71:46"
                            },
                            "nativeSrc": "27605:71:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27605:71:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "27726:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27726:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "27739:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "27739:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "27750:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "27750:2:46",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "27735:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "27735:3:46"
                                  },
                                  "nativeSrc": "27735:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "27735:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                "nativeSrc": "27686:39:46",
                                "nodeType": "YulIdentifier",
                                "src": "27686:39:46"
                              },
                              "nativeSrc": "27686:68:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27686:68:46"
                            },
                            "nativeSrc": "27686:68:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27686:68:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "27808:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27808:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "27821:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "27821:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "27832:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "27832:2:46",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "27817:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "27817:3:46"
                                  },
                                  "nativeSrc": "27817:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "27817:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                "nativeSrc": "27764:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "27764:43:46"
                              },
                              "nativeSrc": "27764:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27764:72:46"
                            },
                            "nativeSrc": "27764:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27764:72:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nativeSrc": "27890:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "27890:6:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nativeSrc": "27903:9:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "27903:9:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "27914:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "27914:2:46",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "27899:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "27899:3:46"
                                  },
                                  "nativeSrc": "27899:18:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "27899:18:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                "nativeSrc": "27846:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "27846:43:46"
                              },
                              "nativeSrc": "27846:72:46",
                              "nodeType": "YulFunctionCall",
                              "src": "27846:72:46"
                            },
                            "nativeSrc": "27846:72:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "27846:72:46"
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                      "nativeSrc": "27380:545:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "headStart",
                          "nativeSrc": "27506:9:46",
                          "nodeType": "YulTypedName",
                          "src": "27506:9:46",
                          "type": ""
                        },
                        {
                          "name": "value3",
                          "nativeSrc": "27518:6:46",
                          "nodeType": "YulTypedName",
                          "src": "27518:6:46",
                          "type": ""
                        },
                        {
                          "name": "value2",
                          "nativeSrc": "27526:6:46",
                          "nodeType": "YulTypedName",
                          "src": "27526:6:46",
                          "type": ""
                        },
                        {
                          "name": "value1",
                          "nativeSrc": "27534:6:46",
                          "nodeType": "YulTypedName",
                          "src": "27534:6:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "27542:6:46",
                          "nodeType": "YulTypedName",
                          "src": "27542:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "tail",
                          "nativeSrc": "27553:4:46",
                          "nodeType": "YulTypedName",
                          "src": "27553:4:46",
                          "type": ""
                        }
                      ],
                      "src": "27380:545:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "27985:87:46",
                        "nodeType": "YulBlock",
                        "src": "27985:87:46",
                        "statements": [
                          {
                            "nativeSrc": "27995:11:46",
                            "nodeType": "YulAssignment",
                            "src": "27995:11:46",
                            "value": {
                              "name": "ptr",
                              "nativeSrc": "28003:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "28003:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nativeSrc": "27995:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "27995:4:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "28023:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28023:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "ptr",
                                  "nativeSrc": "28026:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28026:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "28016:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "28016:6:46"
                              },
                              "nativeSrc": "28016:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28016:14:46"
                            },
                            "nativeSrc": "28016:14:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "28016:14:46"
                          },
                          {
                            "nativeSrc": "28039:26:46",
                            "nodeType": "YulAssignment",
                            "src": "28039:26:46",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "28057:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28057:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "28060:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28060:4:46",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nativeSrc": "28047:9:46",
                                "nodeType": "YulIdentifier",
                                "src": "28047:9:46"
                              },
                              "nativeSrc": "28047:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28047:18:46"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nativeSrc": "28039:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "28039:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_dataslot_t_string_storage",
                      "nativeSrc": "27931:141:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "ptr",
                          "nativeSrc": "27972:3:46",
                          "nodeType": "YulTypedName",
                          "src": "27972:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "data",
                          "nativeSrc": "27980:4:46",
                          "nodeType": "YulTypedName",
                          "src": "27980:4:46",
                          "type": ""
                        }
                      ],
                      "src": "27931:141:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28122:49:46",
                        "nodeType": "YulBlock",
                        "src": "28122:49:46",
                        "statements": [
                          {
                            "nativeSrc": "28132:33:46",
                            "nodeType": "YulAssignment",
                            "src": "28132:33:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "28150:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "28150:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "28157:2:46",
                                      "nodeType": "YulLiteral",
                                      "src": "28157:2:46",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "28146:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "28146:3:46"
                                  },
                                  "nativeSrc": "28146:14:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "28146:14:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "28162:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28162:2:46",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nativeSrc": "28142:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "28142:3:46"
                              },
                              "nativeSrc": "28142:23:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28142:23:46"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nativeSrc": "28132:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "28132:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "divide_by_32_ceil",
                      "nativeSrc": "28078:93:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "28105:5:46",
                          "nodeType": "YulTypedName",
                          "src": "28105:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nativeSrc": "28115:6:46",
                          "nodeType": "YulTypedName",
                          "src": "28115:6:46",
                          "type": ""
                        }
                      ],
                      "src": "28078:93:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28230:54:46",
                        "nodeType": "YulBlock",
                        "src": "28230:54:46",
                        "statements": [
                          {
                            "nativeSrc": "28240:37:46",
                            "nodeType": "YulAssignment",
                            "src": "28240:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "bits",
                                  "nativeSrc": "28265:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28265:4:46"
                                },
                                {
                                  "name": "value",
                                  "nativeSrc": "28271:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28271:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nativeSrc": "28261:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "28261:3:46"
                              },
                              "nativeSrc": "28261:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28261:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "newValue",
                                "nativeSrc": "28240:8:46",
                                "nodeType": "YulIdentifier",
                                "src": "28240:8:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "shift_left_dynamic",
                      "nativeSrc": "28177:107:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "bits",
                          "nativeSrc": "28205:4:46",
                          "nodeType": "YulTypedName",
                          "src": "28205:4:46",
                          "type": ""
                        },
                        {
                          "name": "value",
                          "nativeSrc": "28211:5:46",
                          "nodeType": "YulTypedName",
                          "src": "28211:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "newValue",
                          "nativeSrc": "28221:8:46",
                          "nodeType": "YulTypedName",
                          "src": "28221:8:46",
                          "type": ""
                        }
                      ],
                      "src": "28177:107:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28366:317:46",
                        "nodeType": "YulBlock",
                        "src": "28366:317:46",
                        "statements": [
                          {
                            "nativeSrc": "28376:35:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "28376:35:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBytes",
                                  "nativeSrc": "28397:10:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28397:10:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "28409:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28409:1:46",
                                  "type": "",
                                  "value": "8"
                                }
                              ],
                              "functionName": {
                                "name": "mul",
                                "nativeSrc": "28393:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "28393:3:46"
                              },
                              "nativeSrc": "28393:18:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28393:18:46"
                            },
                            "variables": [
                              {
                                "name": "shiftBits",
                                "nativeSrc": "28380:9:46",
                                "nodeType": "YulTypedName",
                                "src": "28380:9:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "28420:109:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "28420:109:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBits",
                                  "nativeSrc": "28451:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28451:9:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "28462:66:46",
                                  "nodeType": "YulLiteral",
                                  "src": "28462:66:46",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "shift_left_dynamic",
                                "nativeSrc": "28432:18:46",
                                "nodeType": "YulIdentifier",
                                "src": "28432:18:46"
                              },
                              "nativeSrc": "28432:97:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28432:97:46"
                            },
                            "variables": [
                              {
                                "name": "mask",
                                "nativeSrc": "28424:4:46",
                                "nodeType": "YulTypedName",
                                "src": "28424:4:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "28538:51:46",
                            "nodeType": "YulAssignment",
                            "src": "28538:51:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "shiftBits",
                                  "nativeSrc": "28569:9:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28569:9:46"
                                },
                                {
                                  "name": "toInsert",
                                  "nativeSrc": "28580:8:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28580:8:46"
                                }
                              ],
                              "functionName": {
                                "name": "shift_left_dynamic",
                                "nativeSrc": "28550:18:46",
                                "nodeType": "YulIdentifier",
                                "src": "28550:18:46"
                              },
                              "nativeSrc": "28550:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28550:39:46"
                            },
                            "variableNames": [
                              {
                                "name": "toInsert",
                                "nativeSrc": "28538:8:46",
                                "nodeType": "YulIdentifier",
                                "src": "28538:8:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "28598:30:46",
                            "nodeType": "YulAssignment",
                            "src": "28598:30:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "28611:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28611:5:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "mask",
                                      "nativeSrc": "28622:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "28622:4:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nativeSrc": "28618:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "28618:3:46"
                                  },
                                  "nativeSrc": "28618:9:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "28618:9:46"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "28607:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "28607:3:46"
                              },
                              "nativeSrc": "28607:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28607:21:46"
                            },
                            "variableNames": [
                              {
                                "name": "value",
                                "nativeSrc": "28598:5:46",
                                "nodeType": "YulIdentifier",
                                "src": "28598:5:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "28637:40:46",
                            "nodeType": "YulAssignment",
                            "src": "28637:40:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "28650:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "28650:5:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "toInsert",
                                      "nativeSrc": "28661:8:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "28661:8:46"
                                    },
                                    {
                                      "name": "mask",
                                      "nativeSrc": "28671:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "28671:4:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "28657:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "28657:3:46"
                                  },
                                  "nativeSrc": "28657:19:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "28657:19:46"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nativeSrc": "28647:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "28647:2:46"
                              },
                              "nativeSrc": "28647:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28647:30:46"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nativeSrc": "28637:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "28637:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "update_byte_slice_dynamic32",
                      "nativeSrc": "28290:393:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "28327:5:46",
                          "nodeType": "YulTypedName",
                          "src": "28327:5:46",
                          "type": ""
                        },
                        {
                          "name": "shiftBytes",
                          "nativeSrc": "28334:10:46",
                          "nodeType": "YulTypedName",
                          "src": "28334:10:46",
                          "type": ""
                        },
                        {
                          "name": "toInsert",
                          "nativeSrc": "28346:8:46",
                          "nodeType": "YulTypedName",
                          "src": "28346:8:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nativeSrc": "28359:6:46",
                          "nodeType": "YulTypedName",
                          "src": "28359:6:46",
                          "type": ""
                        }
                      ],
                      "src": "28290:393:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28749:82:46",
                        "nodeType": "YulBlock",
                        "src": "28749:82:46",
                        "statements": [
                          {
                            "nativeSrc": "28759:66:46",
                            "nodeType": "YulAssignment",
                            "src": "28759:66:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "28817:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "28817:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "cleanup_t_uint256",
                                        "nativeSrc": "28799:17:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "28799:17:46"
                                      },
                                      "nativeSrc": "28799:24:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "28799:24:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "identity",
                                    "nativeSrc": "28790:8:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "28790:8:46"
                                  },
                                  "nativeSrc": "28790:34:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "28790:34:46"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nativeSrc": "28772:17:46",
                                "nodeType": "YulIdentifier",
                                "src": "28772:17:46"
                              },
                              "nativeSrc": "28772:53:46",
                              "nodeType": "YulFunctionCall",
                              "src": "28772:53:46"
                            },
                            "variableNames": [
                              {
                                "name": "converted",
                                "nativeSrc": "28759:9:46",
                                "nodeType": "YulIdentifier",
                                "src": "28759:9:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "convert_t_uint256_to_t_uint256",
                      "nativeSrc": "28689:142:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "28729:5:46",
                          "nodeType": "YulTypedName",
                          "src": "28729:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "converted",
                          "nativeSrc": "28739:9:46",
                          "nodeType": "YulTypedName",
                          "src": "28739:9:46",
                          "type": ""
                        }
                      ],
                      "src": "28689:142:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28884:28:46",
                        "nodeType": "YulBlock",
                        "src": "28884:28:46",
                        "statements": [
                          {
                            "nativeSrc": "28894:12:46",
                            "nodeType": "YulAssignment",
                            "src": "28894:12:46",
                            "value": {
                              "name": "value",
                              "nativeSrc": "28901:5:46",
                              "nodeType": "YulIdentifier",
                              "src": "28901:5:46"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nativeSrc": "28894:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "28894:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "prepare_store_t_uint256",
                      "nativeSrc": "28837:75:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "28870:5:46",
                          "nodeType": "YulTypedName",
                          "src": "28870:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nativeSrc": "28880:3:46",
                          "nodeType": "YulTypedName",
                          "src": "28880:3:46",
                          "type": ""
                        }
                      ],
                      "src": "28837:75:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "28994:193:46",
                        "nodeType": "YulBlock",
                        "src": "28994:193:46",
                        "statements": [
                          {
                            "nativeSrc": "29004:63:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "29004:63:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value_0",
                                  "nativeSrc": "29059:7:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29059:7:46"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_uint256_to_t_uint256",
                                "nativeSrc": "29028:30:46",
                                "nodeType": "YulIdentifier",
                                "src": "29028:30:46"
                              },
                              "nativeSrc": "29028:39:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29028:39:46"
                            },
                            "variables": [
                              {
                                "name": "convertedValue_0",
                                "nativeSrc": "29008:16:46",
                                "nodeType": "YulTypedName",
                                "src": "29008:16:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nativeSrc": "29083:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29083:4:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "29123:4:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "29123:4:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sload",
                                        "nativeSrc": "29117:5:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29117:5:46"
                                      },
                                      "nativeSrc": "29117:11:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "29117:11:46"
                                    },
                                    {
                                      "name": "offset",
                                      "nativeSrc": "29130:6:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29130:6:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "convertedValue_0",
                                          "nativeSrc": "29162:16:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "29162:16:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "prepare_store_t_uint256",
                                        "nativeSrc": "29138:23:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29138:23:46"
                                      },
                                      "nativeSrc": "29138:41:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "29138:41:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "update_byte_slice_dynamic32",
                                    "nativeSrc": "29089:27:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "29089:27:46"
                                  },
                                  "nativeSrc": "29089:91:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "29089:91:46"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nativeSrc": "29076:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "29076:6:46"
                              },
                              "nativeSrc": "29076:105:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29076:105:46"
                            },
                            "nativeSrc": "29076:105:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "29076:105:46"
                          }
                        ]
                      },
                      "name": "update_storage_value_t_uint256_to_t_uint256",
                      "nativeSrc": "28918:269:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nativeSrc": "28971:4:46",
                          "nodeType": "YulTypedName",
                          "src": "28971:4:46",
                          "type": ""
                        },
                        {
                          "name": "offset",
                          "nativeSrc": "28977:6:46",
                          "nodeType": "YulTypedName",
                          "src": "28977:6:46",
                          "type": ""
                        },
                        {
                          "name": "value_0",
                          "nativeSrc": "28985:7:46",
                          "nodeType": "YulTypedName",
                          "src": "28985:7:46",
                          "type": ""
                        }
                      ],
                      "src": "28918:269:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "29242:24:46",
                        "nodeType": "YulBlock",
                        "src": "29242:24:46",
                        "statements": [
                          {
                            "nativeSrc": "29252:8:46",
                            "nodeType": "YulAssignment",
                            "src": "29252:8:46",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "29259:1:46",
                              "nodeType": "YulLiteral",
                              "src": "29259:1:46",
                              "type": "",
                              "value": "0"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nativeSrc": "29252:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "29252:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "zero_value_for_split_t_uint256",
                      "nativeSrc": "29193:73:46",
                      "nodeType": "YulFunctionDefinition",
                      "returnVariables": [
                        {
                          "name": "ret",
                          "nativeSrc": "29238:3:46",
                          "nodeType": "YulTypedName",
                          "src": "29238:3:46",
                          "type": ""
                        }
                      ],
                      "src": "29193:73:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "29325:136:46",
                        "nodeType": "YulBlock",
                        "src": "29325:136:46",
                        "statements": [
                          {
                            "nativeSrc": "29335:46:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "29335:46:46",
                            "value": {
                              "arguments": [],
                              "functionName": {
                                "name": "zero_value_for_split_t_uint256",
                                "nativeSrc": "29349:30:46",
                                "nodeType": "YulIdentifier",
                                "src": "29349:30:46"
                              },
                              "nativeSrc": "29349:32:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29349:32:46"
                            },
                            "variables": [
                              {
                                "name": "zero_0",
                                "nativeSrc": "29339:6:46",
                                "nodeType": "YulTypedName",
                                "src": "29339:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nativeSrc": "29434:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29434:4:46"
                                },
                                {
                                  "name": "offset",
                                  "nativeSrc": "29440:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29440:6:46"
                                },
                                {
                                  "name": "zero_0",
                                  "nativeSrc": "29448:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29448:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "update_storage_value_t_uint256_to_t_uint256",
                                "nativeSrc": "29390:43:46",
                                "nodeType": "YulIdentifier",
                                "src": "29390:43:46"
                              },
                              "nativeSrc": "29390:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29390:65:46"
                            },
                            "nativeSrc": "29390:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "29390:65:46"
                          }
                        ]
                      },
                      "name": "storage_set_to_zero_t_uint256",
                      "nativeSrc": "29272:189:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nativeSrc": "29311:4:46",
                          "nodeType": "YulTypedName",
                          "src": "29311:4:46",
                          "type": ""
                        },
                        {
                          "name": "offset",
                          "nativeSrc": "29317:6:46",
                          "nodeType": "YulTypedName",
                          "src": "29317:6:46",
                          "type": ""
                        }
                      ],
                      "src": "29272:189:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "29517:136:46",
                        "nodeType": "YulBlock",
                        "src": "29517:136:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "29584:63:46",
                              "nodeType": "YulBlock",
                              "src": "29584:63:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "29628:5:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29628:5:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "29635:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "29635:1:46",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "storage_set_to_zero_t_uint256",
                                      "nativeSrc": "29598:29:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29598:29:46"
                                    },
                                    "nativeSrc": "29598:39:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "29598:39:46"
                                  },
                                  "nativeSrc": "29598:39:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "29598:39:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "start",
                                  "nativeSrc": "29537:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29537:5:46"
                                },
                                {
                                  "name": "end",
                                  "nativeSrc": "29544:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29544:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nativeSrc": "29534:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "29534:2:46"
                              },
                              "nativeSrc": "29534:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29534:14:46"
                            },
                            "nativeSrc": "29527:120:46",
                            "nodeType": "YulForLoop",
                            "post": {
                              "nativeSrc": "29549:26:46",
                              "nodeType": "YulBlock",
                              "src": "29549:26:46",
                              "statements": [
                                {
                                  "nativeSrc": "29551:22:46",
                                  "nodeType": "YulAssignment",
                                  "src": "29551:22:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "29564:5:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29564:5:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "29571:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "29571:1:46",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "29560:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29560:3:46"
                                    },
                                    "nativeSrc": "29560:13:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "29560:13:46"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "start",
                                      "nativeSrc": "29551:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29551:5:46"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nativeSrc": "29531:2:46",
                              "nodeType": "YulBlock",
                              "src": "29531:2:46",
                              "statements": []
                            },
                            "src": "29527:120:46"
                          }
                        ]
                      },
                      "name": "clear_storage_range_t_bytes1",
                      "nativeSrc": "29467:186:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "start",
                          "nativeSrc": "29505:5:46",
                          "nodeType": "YulTypedName",
                          "src": "29505:5:46",
                          "type": ""
                        },
                        {
                          "name": "end",
                          "nativeSrc": "29512:3:46",
                          "nodeType": "YulTypedName",
                          "src": "29512:3:46",
                          "type": ""
                        }
                      ],
                      "src": "29467:186:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "29738:464:46",
                        "nodeType": "YulBlock",
                        "src": "29738:464:46",
                        "statements": [
                          {
                            "body": {
                              "nativeSrc": "29764:431:46",
                              "nodeType": "YulBlock",
                              "src": "29764:431:46",
                              "statements": [
                                {
                                  "nativeSrc": "29778:54:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "29778:54:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "array",
                                        "nativeSrc": "29826:5:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29826:5:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_dataslot_t_string_storage",
                                      "nativeSrc": "29794:31:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29794:31:46"
                                    },
                                    "nativeSrc": "29794:38:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "29794:38:46"
                                  },
                                  "variables": [
                                    {
                                      "name": "dataArea",
                                      "nativeSrc": "29782:8:46",
                                      "nodeType": "YulTypedName",
                                      "src": "29782:8:46",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "29845:63:46",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "29845:63:46",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataArea",
                                        "nativeSrc": "29868:8:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "29868:8:46"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "startIndex",
                                            "nativeSrc": "29896:10:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "29896:10:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "divide_by_32_ceil",
                                          "nativeSrc": "29878:17:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "29878:17:46"
                                        },
                                        "nativeSrc": "29878:29:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "29878:29:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "29864:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "29864:3:46"
                                    },
                                    "nativeSrc": "29864:44:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "29864:44:46"
                                  },
                                  "variables": [
                                    {
                                      "name": "deleteStart",
                                      "nativeSrc": "29849:11:46",
                                      "nodeType": "YulTypedName",
                                      "src": "29849:11:46",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "30065:27:46",
                                    "nodeType": "YulBlock",
                                    "src": "30065:27:46",
                                    "statements": [
                                      {
                                        "nativeSrc": "30067:23:46",
                                        "nodeType": "YulAssignment",
                                        "src": "30067:23:46",
                                        "value": {
                                          "name": "dataArea",
                                          "nativeSrc": "30082:8:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "30082:8:46"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "deleteStart",
                                            "nativeSrc": "30067:11:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "30067:11:46"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "startIndex",
                                        "nativeSrc": "30049:10:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "30049:10:46"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "30061:2:46",
                                        "nodeType": "YulLiteral",
                                        "src": "30061:2:46",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "30046:2:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "30046:2:46"
                                    },
                                    "nativeSrc": "30046:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "30046:18:46"
                                  },
                                  "nativeSrc": "30043:49:46",
                                  "nodeType": "YulIf",
                                  "src": "30043:49:46"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "30134:11:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "30134:11:46"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataArea",
                                            "nativeSrc": "30151:8:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "30151:8:46"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "len",
                                                "nativeSrc": "30179:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "30179:3:46"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "divide_by_32_ceil",
                                              "nativeSrc": "30161:17:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "30161:17:46"
                                            },
                                            "nativeSrc": "30161:22:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "30161:22:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "30147:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "30147:3:46"
                                        },
                                        "nativeSrc": "30147:37:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "30147:37:46"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "clear_storage_range_t_bytes1",
                                      "nativeSrc": "30105:28:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "30105:28:46"
                                    },
                                    "nativeSrc": "30105:80:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "30105:80:46"
                                  },
                                  "nativeSrc": "30105:80:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "30105:80:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "len",
                                  "nativeSrc": "29755:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "29755:3:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "29760:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "29760:2:46",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "29752:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "29752:2:46"
                              },
                              "nativeSrc": "29752:11:46",
                              "nodeType": "YulFunctionCall",
                              "src": "29752:11:46"
                            },
                            "nativeSrc": "29749:446:46",
                            "nodeType": "YulIf",
                            "src": "29749:446:46"
                          }
                        ]
                      },
                      "name": "clean_up_bytearray_end_slots_t_string_storage",
                      "nativeSrc": "29659:543:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "array",
                          "nativeSrc": "29714:5:46",
                          "nodeType": "YulTypedName",
                          "src": "29714:5:46",
                          "type": ""
                        },
                        {
                          "name": "len",
                          "nativeSrc": "29721:3:46",
                          "nodeType": "YulTypedName",
                          "src": "29721:3:46",
                          "type": ""
                        },
                        {
                          "name": "startIndex",
                          "nativeSrc": "29726:10:46",
                          "nodeType": "YulTypedName",
                          "src": "29726:10:46",
                          "type": ""
                        }
                      ],
                      "src": "29659:543:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "30271:54:46",
                        "nodeType": "YulBlock",
                        "src": "30271:54:46",
                        "statements": [
                          {
                            "nativeSrc": "30281:37:46",
                            "nodeType": "YulAssignment",
                            "src": "30281:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "bits",
                                  "nativeSrc": "30306:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30306:4:46"
                                },
                                {
                                  "name": "value",
                                  "nativeSrc": "30312:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30312:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nativeSrc": "30302:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "30302:3:46"
                              },
                              "nativeSrc": "30302:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30302:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "newValue",
                                "nativeSrc": "30281:8:46",
                                "nodeType": "YulIdentifier",
                                "src": "30281:8:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "shift_right_unsigned_dynamic",
                      "nativeSrc": "30208:117:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "bits",
                          "nativeSrc": "30246:4:46",
                          "nodeType": "YulTypedName",
                          "src": "30246:4:46",
                          "type": ""
                        },
                        {
                          "name": "value",
                          "nativeSrc": "30252:5:46",
                          "nodeType": "YulTypedName",
                          "src": "30252:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "newValue",
                          "nativeSrc": "30262:8:46",
                          "nodeType": "YulTypedName",
                          "src": "30262:8:46",
                          "type": ""
                        }
                      ],
                      "src": "30208:117:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "30382:118:46",
                        "nodeType": "YulBlock",
                        "src": "30382:118:46",
                        "statements": [
                          {
                            "nativeSrc": "30392:68:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "30392:68:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "30441:1:46",
                                          "nodeType": "YulLiteral",
                                          "src": "30441:1:46",
                                          "type": "",
                                          "value": "8"
                                        },
                                        {
                                          "name": "bytes",
                                          "nativeSrc": "30444:5:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "30444:5:46"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "30437:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "30437:3:46"
                                      },
                                      "nativeSrc": "30437:13:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "30437:13:46"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "30456:1:46",
                                          "nodeType": "YulLiteral",
                                          "src": "30456:1:46",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nativeSrc": "30452:3:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "30452:3:46"
                                      },
                                      "nativeSrc": "30452:6:46",
                                      "nodeType": "YulFunctionCall",
                                      "src": "30452:6:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shift_right_unsigned_dynamic",
                                    "nativeSrc": "30408:28:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "30408:28:46"
                                  },
                                  "nativeSrc": "30408:51:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "30408:51:46"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nativeSrc": "30404:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "30404:3:46"
                              },
                              "nativeSrc": "30404:56:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30404:56:46"
                            },
                            "variables": [
                              {
                                "name": "mask",
                                "nativeSrc": "30396:4:46",
                                "nodeType": "YulTypedName",
                                "src": "30396:4:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "30469:25:46",
                            "nodeType": "YulAssignment",
                            "src": "30469:25:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nativeSrc": "30483:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30483:4:46"
                                },
                                {
                                  "name": "mask",
                                  "nativeSrc": "30489:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30489:4:46"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nativeSrc": "30479:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "30479:3:46"
                              },
                              "nativeSrc": "30479:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30479:15:46"
                            },
                            "variableNames": [
                              {
                                "name": "result",
                                "nativeSrc": "30469:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "30469:6:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "mask_bytes_dynamic",
                      "nativeSrc": "30331:169:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nativeSrc": "30359:4:46",
                          "nodeType": "YulTypedName",
                          "src": "30359:4:46",
                          "type": ""
                        },
                        {
                          "name": "bytes",
                          "nativeSrc": "30365:5:46",
                          "nodeType": "YulTypedName",
                          "src": "30365:5:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "result",
                          "nativeSrc": "30375:6:46",
                          "nodeType": "YulTypedName",
                          "src": "30375:6:46",
                          "type": ""
                        }
                      ],
                      "src": "30331:169:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "30586:214:46",
                        "nodeType": "YulBlock",
                        "src": "30586:214:46",
                        "statements": [
                          {
                            "nativeSrc": "30719:37:46",
                            "nodeType": "YulAssignment",
                            "src": "30719:37:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nativeSrc": "30746:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30746:4:46"
                                },
                                {
                                  "name": "len",
                                  "nativeSrc": "30752:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30752:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "mask_bytes_dynamic",
                                "nativeSrc": "30727:18:46",
                                "nodeType": "YulIdentifier",
                                "src": "30727:18:46"
                              },
                              "nativeSrc": "30727:29:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30727:29:46"
                            },
                            "variableNames": [
                              {
                                "name": "data",
                                "nativeSrc": "30719:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "30719:4:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "30765:29:46",
                            "nodeType": "YulAssignment",
                            "src": "30765:29:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "data",
                                  "nativeSrc": "30776:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30776:4:46"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "30786:1:46",
                                      "nodeType": "YulLiteral",
                                      "src": "30786:1:46",
                                      "type": "",
                                      "value": "2"
                                    },
                                    {
                                      "name": "len",
                                      "nativeSrc": "30789:3:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "30789:3:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mul",
                                    "nativeSrc": "30782:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "30782:3:46"
                                  },
                                  "nativeSrc": "30782:11:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "30782:11:46"
                                }
                              ],
                              "functionName": {
                                "name": "or",
                                "nativeSrc": "30773:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "30773:2:46"
                              },
                              "nativeSrc": "30773:21:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30773:21:46"
                            },
                            "variableNames": [
                              {
                                "name": "used",
                                "nativeSrc": "30765:4:46",
                                "nodeType": "YulIdentifier",
                                "src": "30765:4:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "extract_used_part_and_set_length_of_short_byte_array",
                      "nativeSrc": "30505:295:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "data",
                          "nativeSrc": "30567:4:46",
                          "nodeType": "YulTypedName",
                          "src": "30567:4:46",
                          "type": ""
                        },
                        {
                          "name": "len",
                          "nativeSrc": "30573:3:46",
                          "nodeType": "YulTypedName",
                          "src": "30573:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "used",
                          "nativeSrc": "30581:4:46",
                          "nodeType": "YulTypedName",
                          "src": "30581:4:46",
                          "type": ""
                        }
                      ],
                      "src": "30505:295:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "30897:1303:46",
                        "nodeType": "YulBlock",
                        "src": "30897:1303:46",
                        "statements": [
                          {
                            "nativeSrc": "30908:51:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "30908:51:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nativeSrc": "30955:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "30955:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_string_memory_ptr",
                                "nativeSrc": "30922:32:46",
                                "nodeType": "YulIdentifier",
                                "src": "30922:32:46"
                              },
                              "nativeSrc": "30922:37:46",
                              "nodeType": "YulFunctionCall",
                              "src": "30922:37:46"
                            },
                            "variables": [
                              {
                                "name": "newLen",
                                "nativeSrc": "30912:6:46",
                                "nodeType": "YulTypedName",
                                "src": "30912:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nativeSrc": "31044:22:46",
                              "nodeType": "YulBlock",
                              "src": "31044:22:46",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x41",
                                      "nativeSrc": "31046:16:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "31046:16:46"
                                    },
                                    "nativeSrc": "31046:18:46",
                                    "nodeType": "YulFunctionCall",
                                    "src": "31046:18:46"
                                  },
                                  "nativeSrc": "31046:18:46",
                                  "nodeType": "YulExpressionStatement",
                                  "src": "31046:18:46"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "31016:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "31016:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "31024:18:46",
                                  "nodeType": "YulLiteral",
                                  "src": "31024:18:46",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "31013:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "31013:2:46"
                              },
                              "nativeSrc": "31013:30:46",
                              "nodeType": "YulFunctionCall",
                              "src": "31013:30:46"
                            },
                            "nativeSrc": "31010:56:46",
                            "nodeType": "YulIf",
                            "src": "31010:56:46"
                          },
                          {
                            "nativeSrc": "31076:52:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "31076:52:46",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "slot",
                                      "nativeSrc": "31122:4:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "31122:4:46"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nativeSrc": "31116:5:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "31116:5:46"
                                  },
                                  "nativeSrc": "31116:11:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "31116:11:46"
                                }
                              ],
                              "functionName": {
                                "name": "extract_byte_array_length",
                                "nativeSrc": "31090:25:46",
                                "nodeType": "YulIdentifier",
                                "src": "31090:25:46"
                              },
                              "nativeSrc": "31090:38:46",
                              "nodeType": "YulFunctionCall",
                              "src": "31090:38:46"
                            },
                            "variables": [
                              {
                                "name": "oldLen",
                                "nativeSrc": "31080:6:46",
                                "nodeType": "YulTypedName",
                                "src": "31080:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nativeSrc": "31221:4:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "31221:4:46"
                                },
                                {
                                  "name": "oldLen",
                                  "nativeSrc": "31227:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "31227:6:46"
                                },
                                {
                                  "name": "newLen",
                                  "nativeSrc": "31235:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "31235:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "clean_up_bytearray_end_slots_t_string_storage",
                                "nativeSrc": "31175:45:46",
                                "nodeType": "YulIdentifier",
                                "src": "31175:45:46"
                              },
                              "nativeSrc": "31175:67:46",
                              "nodeType": "YulFunctionCall",
                              "src": "31175:67:46"
                            },
                            "nativeSrc": "31175:67:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "31175:67:46"
                          },
                          {
                            "nativeSrc": "31252:18:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "31252:18:46",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "31269:1:46",
                              "nodeType": "YulLiteral",
                              "src": "31269:1:46",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "srcOffset",
                                "nativeSrc": "31256:9:46",
                                "nodeType": "YulTypedName",
                                "src": "31256:9:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "31280:17:46",
                            "nodeType": "YulAssignment",
                            "src": "31280:17:46",
                            "value": {
                              "kind": "number",
                              "nativeSrc": "31293:4:46",
                              "nodeType": "YulLiteral",
                              "src": "31293:4:46",
                              "type": "",
                              "value": "0x20"
                            },
                            "variableNames": [
                              {
                                "name": "srcOffset",
                                "nativeSrc": "31280:9:46",
                                "nodeType": "YulIdentifier",
                                "src": "31280:9:46"
                              }
                            ]
                          },
                          {
                            "cases": [
                              {
                                "body": {
                                  "nativeSrc": "31344:611:46",
                                  "nodeType": "YulBlock",
                                  "src": "31344:611:46",
                                  "statements": [
                                    {
                                      "nativeSrc": "31358:37:46",
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "31358:37:46",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "newLen",
                                            "nativeSrc": "31377:6:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31377:6:46"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "31389:4:46",
                                                "nodeType": "YulLiteral",
                                                "src": "31389:4:46",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "31385:3:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "31385:3:46"
                                            },
                                            "nativeSrc": "31385:9:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "31385:9:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "31373:3:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "31373:3:46"
                                        },
                                        "nativeSrc": "31373:22:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "31373:22:46"
                                      },
                                      "variables": [
                                        {
                                          "name": "loopEnd",
                                          "nativeSrc": "31362:7:46",
                                          "nodeType": "YulTypedName",
                                          "src": "31362:7:46",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "nativeSrc": "31409:51:46",
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "31409:51:46",
                                      "value": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "31455:4:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31455:4:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "array_dataslot_t_string_storage",
                                          "nativeSrc": "31423:31:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "31423:31:46"
                                        },
                                        "nativeSrc": "31423:37:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "31423:37:46"
                                      },
                                      "variables": [
                                        {
                                          "name": "dstPtr",
                                          "nativeSrc": "31413:6:46",
                                          "nodeType": "YulTypedName",
                                          "src": "31413:6:46",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "nativeSrc": "31473:10:46",
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "31473:10:46",
                                      "value": {
                                        "kind": "number",
                                        "nativeSrc": "31482:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "31482:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      "variables": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "31477:1:46",
                                          "nodeType": "YulTypedName",
                                          "src": "31477:1:46",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "body": {
                                        "nativeSrc": "31541:163:46",
                                        "nodeType": "YulBlock",
                                        "src": "31541:163:46",
                                        "statements": [
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "31566:6:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31566:6:46"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "src",
                                                          "nativeSrc": "31584:3:46",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31584:3:46"
                                                        },
                                                        {
                                                          "name": "srcOffset",
                                                          "nativeSrc": "31589:9:46",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31589:9:46"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nativeSrc": "31580:3:46",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31580:3:46"
                                                      },
                                                      "nativeSrc": "31580:19:46",
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31580:19:46"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mload",
                                                    "nativeSrc": "31574:5:46",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31574:5:46"
                                                  },
                                                  "nativeSrc": "31574:26:46",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31574:26:46"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sstore",
                                                "nativeSrc": "31559:6:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31559:6:46"
                                              },
                                              "nativeSrc": "31559:42:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31559:42:46"
                                            },
                                            "nativeSrc": "31559:42:46",
                                            "nodeType": "YulExpressionStatement",
                                            "src": "31559:42:46"
                                          },
                                          {
                                            "nativeSrc": "31618:24:46",
                                            "nodeType": "YulAssignment",
                                            "src": "31618:24:46",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "31632:6:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31632:6:46"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "31640:1:46",
                                                  "nodeType": "YulLiteral",
                                                  "src": "31640:1:46",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "31628:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31628:3:46"
                                              },
                                              "nativeSrc": "31628:14:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31628:14:46"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "31618:6:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31618:6:46"
                                              }
                                            ]
                                          },
                                          {
                                            "nativeSrc": "31659:31:46",
                                            "nodeType": "YulAssignment",
                                            "src": "31659:31:46",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "31676:9:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31676:9:46"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "31687:2:46",
                                                  "nodeType": "YulLiteral",
                                                  "src": "31687:2:46",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "31672:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31672:3:46"
                                              },
                                              "nativeSrc": "31672:18:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31672:18:46"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "srcOffset",
                                                "nativeSrc": "31659:9:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31659:9:46"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "arguments": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "31507:1:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31507:1:46"
                                          },
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "31510:7:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31510:7:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "31504:2:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "31504:2:46"
                                        },
                                        "nativeSrc": "31504:14:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "31504:14:46"
                                      },
                                      "nativeSrc": "31496:208:46",
                                      "nodeType": "YulForLoop",
                                      "post": {
                                        "nativeSrc": "31519:21:46",
                                        "nodeType": "YulBlock",
                                        "src": "31519:21:46",
                                        "statements": [
                                          {
                                            "nativeSrc": "31521:17:46",
                                            "nodeType": "YulAssignment",
                                            "src": "31521:17:46",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "31530:1:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31530:1:46"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "31533:4:46",
                                                  "nodeType": "YulLiteral",
                                                  "src": "31533:4:46",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "31526:3:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31526:3:46"
                                              },
                                              "nativeSrc": "31526:12:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31526:12:46"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "i",
                                                "nativeSrc": "31521:1:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31521:1:46"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "pre": {
                                        "nativeSrc": "31500:3:46",
                                        "nodeType": "YulBlock",
                                        "src": "31500:3:46",
                                        "statements": []
                                      },
                                      "src": "31496:208:46"
                                    },
                                    {
                                      "body": {
                                        "nativeSrc": "31740:156:46",
                                        "nodeType": "YulBlock",
                                        "src": "31740:156:46",
                                        "statements": [
                                          {
                                            "nativeSrc": "31758:43:46",
                                            "nodeType": "YulVariableDeclaration",
                                            "src": "31758:43:46",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "src",
                                                      "nativeSrc": "31785:3:46",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31785:3:46"
                                                    },
                                                    {
                                                      "name": "srcOffset",
                                                      "nativeSrc": "31790:9:46",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31790:9:46"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "31781:3:46",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31781:3:46"
                                                  },
                                                  "nativeSrc": "31781:19:46",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31781:19:46"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nativeSrc": "31775:5:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31775:5:46"
                                              },
                                              "nativeSrc": "31775:26:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31775:26:46"
                                            },
                                            "variables": [
                                              {
                                                "name": "lastValue",
                                                "nativeSrc": "31762:9:46",
                                                "nodeType": "YulTypedName",
                                                "src": "31762:9:46",
                                                "type": ""
                                              }
                                            ]
                                          },
                                          {
                                            "expression": {
                                              "arguments": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "31825:6:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31825:6:46"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "lastValue",
                                                      "nativeSrc": "31852:9:46",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "31852:9:46"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "newLen",
                                                          "nativeSrc": "31867:6:46",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31867:6:46"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nativeSrc": "31875:4:46",
                                                          "nodeType": "YulLiteral",
                                                          "src": "31875:4:46",
                                                          "type": "",
                                                          "value": "0x1f"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nativeSrc": "31863:3:46",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31863:3:46"
                                                      },
                                                      "nativeSrc": "31863:17:46",
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31863:17:46"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mask_bytes_dynamic",
                                                    "nativeSrc": "31833:18:46",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31833:18:46"
                                                  },
                                                  "nativeSrc": "31833:48:46",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31833:48:46"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sstore",
                                                "nativeSrc": "31818:6:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "31818:6:46"
                                              },
                                              "nativeSrc": "31818:64:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "31818:64:46"
                                            },
                                            "nativeSrc": "31818:64:46",
                                            "nodeType": "YulExpressionStatement",
                                            "src": "31818:64:46"
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "arguments": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "31723:7:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31723:7:46"
                                          },
                                          {
                                            "name": "newLen",
                                            "nativeSrc": "31732:6:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31732:6:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "31720:2:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "31720:2:46"
                                        },
                                        "nativeSrc": "31720:19:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "31720:19:46"
                                      },
                                      "nativeSrc": "31717:179:46",
                                      "nodeType": "YulIf",
                                      "src": "31717:179:46"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "31916:4:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "31916:4:46"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "newLen",
                                                    "nativeSrc": "31930:6:46",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31930:6:46"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "31938:1:46",
                                                    "nodeType": "YulLiteral",
                                                    "src": "31938:1:46",
                                                    "type": "",
                                                    "value": "2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mul",
                                                  "nativeSrc": "31926:3:46",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "31926:3:46"
                                                },
                                                "nativeSrc": "31926:14:46",
                                                "nodeType": "YulFunctionCall",
                                                "src": "31926:14:46"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "31942:1:46",
                                                "nodeType": "YulLiteral",
                                                "src": "31942:1:46",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "31922:3:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "31922:3:46"
                                            },
                                            "nativeSrc": "31922:22:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "31922:22:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nativeSrc": "31909:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "31909:6:46"
                                        },
                                        "nativeSrc": "31909:36:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "31909:36:46"
                                      },
                                      "nativeSrc": "31909:36:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "31909:36:46"
                                    }
                                  ]
                                },
                                "nativeSrc": "31337:618:46",
                                "nodeType": "YulCase",
                                "src": "31337:618:46",
                                "value": {
                                  "kind": "number",
                                  "nativeSrc": "31342:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "31342:1:46",
                                  "type": "",
                                  "value": "1"
                                }
                              },
                              {
                                "body": {
                                  "nativeSrc": "31972:222:46",
                                  "nodeType": "YulBlock",
                                  "src": "31972:222:46",
                                  "statements": [
                                    {
                                      "nativeSrc": "31986:14:46",
                                      "nodeType": "YulVariableDeclaration",
                                      "src": "31986:14:46",
                                      "value": {
                                        "kind": "number",
                                        "nativeSrc": "31999:1:46",
                                        "nodeType": "YulLiteral",
                                        "src": "31999:1:46",
                                        "type": "",
                                        "value": "0"
                                      },
                                      "variables": [
                                        {
                                          "name": "value",
                                          "nativeSrc": "31990:5:46",
                                          "nodeType": "YulTypedName",
                                          "src": "31990:5:46",
                                          "type": ""
                                        }
                                      ]
                                    },
                                    {
                                      "body": {
                                        "nativeSrc": "32023:67:46",
                                        "nodeType": "YulBlock",
                                        "src": "32023:67:46",
                                        "statements": [
                                          {
                                            "nativeSrc": "32041:35:46",
                                            "nodeType": "YulAssignment",
                                            "src": "32041:35:46",
                                            "value": {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "src",
                                                      "nativeSrc": "32060:3:46",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32060:3:46"
                                                    },
                                                    {
                                                      "name": "srcOffset",
                                                      "nativeSrc": "32065:9:46",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32065:9:46"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "32056:3:46",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32056:3:46"
                                                  },
                                                  "nativeSrc": "32056:19:46",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "32056:19:46"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nativeSrc": "32050:5:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "32050:5:46"
                                              },
                                              "nativeSrc": "32050:26:46",
                                              "nodeType": "YulFunctionCall",
                                              "src": "32050:26:46"
                                            },
                                            "variableNames": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "32041:5:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "32041:5:46"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "condition": {
                                        "name": "newLen",
                                        "nativeSrc": "32016:6:46",
                                        "nodeType": "YulIdentifier",
                                        "src": "32016:6:46"
                                      },
                                      "nativeSrc": "32013:77:46",
                                      "nodeType": "YulIf",
                                      "src": "32013:77:46"
                                    },
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "32110:4:46",
                                            "nodeType": "YulIdentifier",
                                            "src": "32110:4:46"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "32169:5:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "32169:5:46"
                                              },
                                              {
                                                "name": "newLen",
                                                "nativeSrc": "32176:6:46",
                                                "nodeType": "YulIdentifier",
                                                "src": "32176:6:46"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "extract_used_part_and_set_length_of_short_byte_array",
                                              "nativeSrc": "32116:52:46",
                                              "nodeType": "YulIdentifier",
                                              "src": "32116:52:46"
                                            },
                                            "nativeSrc": "32116:67:46",
                                            "nodeType": "YulFunctionCall",
                                            "src": "32116:67:46"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sstore",
                                          "nativeSrc": "32103:6:46",
                                          "nodeType": "YulIdentifier",
                                          "src": "32103:6:46"
                                        },
                                        "nativeSrc": "32103:81:46",
                                        "nodeType": "YulFunctionCall",
                                        "src": "32103:81:46"
                                      },
                                      "nativeSrc": "32103:81:46",
                                      "nodeType": "YulExpressionStatement",
                                      "src": "32103:81:46"
                                    }
                                  ]
                                },
                                "nativeSrc": "31964:230:46",
                                "nodeType": "YulCase",
                                "src": "31964:230:46",
                                "value": "default"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "31317:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "31317:6:46"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "31325:2:46",
                                  "nodeType": "YulLiteral",
                                  "src": "31325:2:46",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nativeSrc": "31314:2:46",
                                "nodeType": "YulIdentifier",
                                "src": "31314:2:46"
                              },
                              "nativeSrc": "31314:14:46",
                              "nodeType": "YulFunctionCall",
                              "src": "31314:14:46"
                            },
                            "nativeSrc": "31307:887:46",
                            "nodeType": "YulSwitch",
                            "src": "31307:887:46"
                          }
                        ]
                      },
                      "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                      "nativeSrc": "30805:1395:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "slot",
                          "nativeSrc": "30886:4:46",
                          "nodeType": "YulTypedName",
                          "src": "30886:4:46",
                          "type": ""
                        },
                        {
                          "name": "src",
                          "nativeSrc": "30892:3:46",
                          "nodeType": "YulTypedName",
                          "src": "30892:3:46",
                          "type": ""
                        }
                      ],
                      "src": "30805:1395:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "32234:152:46",
                        "nodeType": "YulBlock",
                        "src": "32234:152:46",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "32251:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32251:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "32254:77:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32254:77:46",
                                  "type": "",
                                  "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "32244:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "32244:6:46"
                              },
                              "nativeSrc": "32244:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32244:88:46"
                            },
                            "nativeSrc": "32244:88:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "32244:88:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "32348:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32348:1:46",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "32351:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32351:4:46",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nativeSrc": "32341:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "32341:6:46"
                              },
                              "nativeSrc": "32341:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32341:15:46"
                            },
                            "nativeSrc": "32341:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "32341:15:46"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "32372:1:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32372:1:46",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "32375:4:46",
                                  "nodeType": "YulLiteral",
                                  "src": "32375:4:46",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nativeSrc": "32365:6:46",
                                "nodeType": "YulIdentifier",
                                "src": "32365:6:46"
                              },
                              "nativeSrc": "32365:15:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32365:15:46"
                            },
                            "nativeSrc": "32365:15:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "32365:15:46"
                          }
                        ]
                      },
                      "name": "panic_error_0x12",
                      "nativeSrc": "32206:180:46",
                      "nodeType": "YulFunctionDefinition",
                      "src": "32206:180:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "32505:34:46",
                        "nodeType": "YulBlock",
                        "src": "32505:34:46",
                        "statements": [
                          {
                            "nativeSrc": "32515:18:46",
                            "nodeType": "YulAssignment",
                            "src": "32515:18:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "32530:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "32530:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "updated_pos",
                                "nativeSrc": "32515:11:46",
                                "nodeType": "YulIdentifier",
                                "src": "32515:11:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "32392:147:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "32477:3:46",
                          "nodeType": "YulTypedName",
                          "src": "32477:3:46",
                          "type": ""
                        },
                        {
                          "name": "length",
                          "nativeSrc": "32482:6:46",
                          "nodeType": "YulTypedName",
                          "src": "32482:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "updated_pos",
                          "nativeSrc": "32493:11:46",
                          "nodeType": "YulTypedName",
                          "src": "32493:11:46",
                          "type": ""
                        }
                      ],
                      "src": "32392:147:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "32653:278:46",
                        "nodeType": "YulBlock",
                        "src": "32653:278:46",
                        "statements": [
                          {
                            "nativeSrc": "32663:52:46",
                            "nodeType": "YulVariableDeclaration",
                            "src": "32663:52:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nativeSrc": "32709:5:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32709:5:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_length_t_bytes_memory_ptr",
                                "nativeSrc": "32677:31:46",
                                "nodeType": "YulIdentifier",
                                "src": "32677:31:46"
                              },
                              "nativeSrc": "32677:38:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32677:38:46"
                            },
                            "variables": [
                              {
                                "name": "length",
                                "nativeSrc": "32667:6:46",
                                "nodeType": "YulTypedName",
                                "src": "32667:6:46",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nativeSrc": "32724:95:46",
                            "nodeType": "YulAssignment",
                            "src": "32724:95:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "32807:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32807:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "32812:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32812:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "32731:75:46",
                                "nodeType": "YulIdentifier",
                                "src": "32731:75:46"
                              },
                              "nativeSrc": "32731:88:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32731:88:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "32724:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "32724:3:46"
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nativeSrc": "32867:5:46",
                                      "nodeType": "YulIdentifier",
                                      "src": "32867:5:46"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "32874:4:46",
                                      "nodeType": "YulLiteral",
                                      "src": "32874:4:46",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "32863:3:46",
                                    "nodeType": "YulIdentifier",
                                    "src": "32863:3:46"
                                  },
                                  "nativeSrc": "32863:16:46",
                                  "nodeType": "YulFunctionCall",
                                  "src": "32863:16:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "32881:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32881:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "32886:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32886:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "copy_memory_to_memory_with_cleanup",
                                "nativeSrc": "32828:34:46",
                                "nodeType": "YulIdentifier",
                                "src": "32828:34:46"
                              },
                              "nativeSrc": "32828:65:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32828:65:46"
                            },
                            "nativeSrc": "32828:65:46",
                            "nodeType": "YulExpressionStatement",
                            "src": "32828:65:46"
                          },
                          {
                            "nativeSrc": "32902:23:46",
                            "nodeType": "YulAssignment",
                            "src": "32902:23:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "32913:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32913:3:46"
                                },
                                {
                                  "name": "length",
                                  "nativeSrc": "32918:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "32918:6:46"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "32909:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "32909:3:46"
                              },
                              "nativeSrc": "32909:16:46",
                              "nodeType": "YulFunctionCall",
                              "src": "32909:16:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "32902:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "32902:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nativeSrc": "32545:386:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "value",
                          "nativeSrc": "32634:5:46",
                          "nodeType": "YulTypedName",
                          "src": "32634:5:46",
                          "type": ""
                        },
                        {
                          "name": "pos",
                          "nativeSrc": "32641:3:46",
                          "nodeType": "YulTypedName",
                          "src": "32641:3:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "32649:3:46",
                          "nodeType": "YulTypedName",
                          "src": "32649:3:46",
                          "type": ""
                        }
                      ],
                      "src": "32545:386:46"
                    },
                    {
                      "body": {
                        "nativeSrc": "33071:137:46",
                        "nodeType": "YulBlock",
                        "src": "33071:137:46",
                        "statements": [
                          {
                            "nativeSrc": "33082:100:46",
                            "nodeType": "YulAssignment",
                            "src": "33082:100:46",
                            "value": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "33169:6:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "33169:6:46"
                                },
                                {
                                  "name": "pos",
                                  "nativeSrc": "33178:3:46",
                                  "nodeType": "YulIdentifier",
                                  "src": "33178:3:46"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                "nativeSrc": "33089:79:46",
                                "nodeType": "YulIdentifier",
                                "src": "33089:79:46"
                              },
                              "nativeSrc": "33089:93:46",
                              "nodeType": "YulFunctionCall",
                              "src": "33089:93:46"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nativeSrc": "33082:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "33082:3:46"
                              }
                            ]
                          },
                          {
                            "nativeSrc": "33192:10:46",
                            "nodeType": "YulAssignment",
                            "src": "33192:10:46",
                            "value": {
                              "name": "pos",
                              "nativeSrc": "33199:3:46",
                              "nodeType": "YulIdentifier",
                              "src": "33199:3:46"
                            },
                            "variableNames": [
                              {
                                "name": "end",
                                "nativeSrc": "33192:3:46",
                                "nodeType": "YulIdentifier",
                                "src": "33192:3:46"
                              }
                            ]
                          }
                        ]
                      },
                      "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                      "nativeSrc": "32937:271:46",
                      "nodeType": "YulFunctionDefinition",
                      "parameters": [
                        {
                          "name": "pos",
                          "nativeSrc": "33050:3:46",
                          "nodeType": "YulTypedName",
                          "src": "33050:3:46",
                          "type": ""
                        },
                        {
                          "name": "value0",
                          "nativeSrc": "33056:6:46",
                          "nodeType": "YulTypedName",
                          "src": "33056:6:46",
                          "type": ""
                        }
                      ],
                      "returnVariables": [
                        {
                          "name": "end",
                          "nativeSrc": "33067:3:46",
                          "nodeType": "YulTypedName",
                          "src": "33067:3:46",
                          "type": ""
                        }
                      ],
                      "src": "32937:271:46"
                    }
                  ]
                },
                "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Verifier Account\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad788fdaa29b19f837e2fab6fc65e1a715582fdacd26ddb1498d9f020cccbea7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256__to_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Agent Account\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c1f108e6012ed3a538bcd7e1438e9b1f83f766b2cc24186029e2132f8d9cea8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n\n    }\n\n    function abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 28)\n        store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(pos)\n        end := add(pos, 28)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
                "id": 46,
                "language": "Yul",
                "name": "#utility.yul"
              }
            ],
            "immutableReferences": {
              "468": [
                {
                  "length": 32,
                  "start": 7687
                },
                {
                  "length": 32,
                  "start": 7772
                },
                {
                  "length": 32,
                  "start": 8215
                }
              ]
            },
            "linkReferences": {},
            "object": "6080604052600436106101c25760003560e01c8063715018a6116100f7578063b88d4fde11610095578063e985e9c511610064578063e985e9c51461062d578063f2fde38b1461066a578063f3b9029614610693578063f551eb19146106d0576101c2565b8063b88d4fde14610575578063bcf685ed1461059e578063bedf77a6146105c7578063c87b56dd146105f0576101c2565b806395d89b41116100d157806395d89b41146104cd578063a22cb465146104f8578063a610e36a14610521578063ad3cb1cc1461054a576101c2565b8063715018a61461044e5780637b5cf44f146104655780638da5cb5b146104a2576101c2565b806346657fe91161016457806352d1902d1161013e57806352d1902d146103805780635437988d146103ab5780636352211e146103d457806370a0823114610411576101c2565b806346657fe914610310578063485cc9551461033b5780634f1ef28614610364576101c2565b8063095ea7b3116101a0578063095ea7b31461026c57806323b872dd146102955780632e1e07c7146102be57806342842e0e146102e7576101c2565b806301ffc9a7146101c757806306fdde0314610204578063081812fc1461022f575b600080fd5b3480156101d357600080fd5b506101ee60048036038101906101e99190613346565b6106fb565b6040516101fb919061338e565b60405180910390f35b34801561021057600080fd5b5061021961075c565b6040516102269190613439565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190613491565b6107fd565b60405161026391906134ff565b60405180910390f35b34801561027857600080fd5b50610293600480360381019061028e9190613546565b610819565b005b3480156102a157600080fd5b506102bc60048036038101906102b79190613586565b61082f565b005b3480156102ca57600080fd5b506102e560048036038101906102e091906137af565b610931565b005b3480156102f357600080fd5b5061030e60048036038101906103099190613586565b610b19565b005b34801561031c57600080fd5b50610325610b39565b60405161033291906134ff565b60405180910390f35b34801561034757600080fd5b50610362600480360381019061035d919061383a565b610b62565b005b61037e6004803603810190610379919061387a565b610d14565b005b34801561038c57600080fd5b50610395610d33565b6040516103a291906138ef565b60405180910390f35b3480156103b757600080fd5b506103d260048036038101906103cd919061390a565b610d66565b005b3480156103e057600080fd5b506103fb60048036038101906103f69190613491565b610e37565b60405161040891906134ff565b60405180910390f35b34801561041d57600080fd5b506104386004803603810190610433919061390a565b610e49565b6040516104459190613946565b60405180910390f35b34801561045a57600080fd5b50610463610f12565b005b34801561047157600080fd5b5061048c6004803603810190610487919061390a565b610f26565b6040516104999190613946565b60405180910390f35b3480156104ae57600080fd5b506104b7610f6f565b6040516104c491906134ff565b60405180910390f35b3480156104d957600080fd5b506104e2610fa7565b6040516104ef9190613439565b60405180910390f35b34801561050457600080fd5b5061051f600480360381019061051a919061398d565b611048565b005b34801561052d57600080fd5b50610548600480360381019061054391906139cd565b61105e565b005b34801561055657600080fd5b5061055f61125e565b60405161056c9190613439565b60405180910390f35b34801561058157600080fd5b5061059c60048036038101906105979190613a3c565b611297565b005b3480156105aa57600080fd5b506105c560048036038101906105c0919061390a565b6112b4565b005b3480156105d357600080fd5b506105ee60048036038101906105e9919061390a565b611388565b005b3480156105fc57600080fd5b5061061760048036038101906106129190613491565b61159f565b6040516106249190613439565b60405180910390f35b34801561063957600080fd5b50610654600480360381019061064f919061383a565b6116c3565b604051610661919061338e565b60405180910390f35b34801561067657600080fd5b50610691600480360381019061068c919061390a565b611765565b005b34801561069f57600080fd5b506106ba60048036038101906106b5919061390a565b6117eb565b6040516106c79190613946565b60405180910390f35b3480156106dc57600080fd5b506106e5611803565b6040516106f291906134ff565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061075557506107548261182d565b5b9050919050565b6060600061076861190f565b905080600001805461077990613aee565b80601f01602080910402602001604051908101604052809291908181526020018280546107a590613aee565b80156107f25780601f106107c7576101008083540402835291602001916107f2565b820191906000526020600020905b8154815290600101906020018083116107d557829003601f168201915b505050505091505090565b600061080882611937565b50610812826119bf565b9050919050565b61082b8282610826611a0a565b611a12565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a15760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161089891906134ff565b60405180910390fd5b60006108b583836108b0611a0a565b611a24565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461092b578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161092293929190613b1f565b60405180910390fd5b50505050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156109bc5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156109f3576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a1e8484604051602001610a09929190613bda565b60405160208183030381529060405283611c51565b6000610a2a8585611cea565b905080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f73f8954b6aca1b315e4645b31cd927c4f6e91f7072f93664c4a300de3ed54374828642604051610aba93929190613c02565b60405180910390a28473ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848242604051610b0a929190613c40565b60405180910390a25050505050565b610b3483838360405180602001604052806000815250611297565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610b6c611d28565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610bba5750825b9050600060018367ffffffffffffffff16148015610bef575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610bfd575080155b15610c34576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c845760018560000160086101000a81548160ff0219169083151502179055505b610c8d87611d50565b610c9687611d64565b610c9f86611db0565b610ca7611dfb565b60016002819055508315610d0b5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d029190613cc2565b60405180910390a15b50505050505050565b610d1c611e05565b610d2582611eeb565b610d2f8282611ef6565b5050565b6000610d3d612015565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90613d29565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610e4282611937565b9050919050565b600080610e5461190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ec85760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ebf91906134ff565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610f1a61209c565b610f246000612123565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080610f7a6121fa565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000610fb361190f565b9050806001018054610fc490613aee565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff090613aee565b801561103d5780601f106110125761010080835404028352916020019161103d565b820191906000526020600020905b81548152906001019060200180831161102057829003601f168201915b505050505091505090565b61105a611053611a0a565b8383612222565b5050565b823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156110e95750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611120576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61114b8484604051602001611136929190613d6a565b60405160208183030381529060405283611c51565b6000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146111c4576040517f649cdf9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fc2733c56830b63400657697f24fc9e91d631c3c8a02b7c0d7331f0c7546efb848442604051611250929190613c40565b60405180910390a250505050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6112a284848461082f565b6112ae848484846123a0565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613de2565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b803373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156114135750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561144a576040517f6d187b2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036114c3576040517f2a32605900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600090558273ffffffffffffffffffffffffffffffffffffffff167f769bacf6500d62dc7db4f651a1585f741ed419b5575ae0ae894ff03d3769f1188242604051611592929190613c40565b60405180910390a2505050565b606060006115ab612557565b90506115b683611937565b50600081600001600085815260200190815260200160002080546115d990613aee565b80601f016020809104026020016040519081016040528092919081815260200182805461160590613aee565b80156116525780601f1061162757610100808354040283529160200191611652565b820191906000526020600020905b81548152906001019060200180831161163557829003601f168201915b50505050509050600061166361257f565b90506000815103611679578193505050506116be565b6000825111156116af578082604051602001611696929190613e02565b60405160208183030381529060405293505050506116be565b6116b88561259f565b93505050505b919050565b6000806116ce61190f565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b61176d61209c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117df5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016117d691906134ff565b60405180910390fd5b6117e881612123565b50565b60036020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118f857507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611908575061190782612608565b5b9050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b60008061194383612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119b657826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119ad9190613946565b60405180910390fd5b80915050919050565b6000806119ca61190f565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b611a1f83838360016126bd565b505050565b600080611a2f61190f565b90506000611a3c85612672565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a7e57611a7d818587612891565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b1157611ac06000866000806126bd565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611b965760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611c99838051906020012083612955565b73ffffffffffffffffffffffffffffffffffffffff1614611ce6576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806002549050611cfc8482612a3e565b611d068184612a5c565b60026000815480929190611d1990613e55565b91905055508091505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611d58612ac7565b611d6181612b07565b50565b611d6c612ac7565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611db8612ac7565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611e03612ac7565b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611eb257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611e99612b8d565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611ee9576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ef361209c565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f5e57506040513d601f19601f82011682018060405250810190611f5b9190613ec9565b60015b611f9f57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611f9691906134ff565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461200657806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611ffd91906138ef565b60405180910390fd5b6120108383612be4565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461209a576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6120a4611a0a565b73ffffffffffffffffffffffffffffffffffffffff166120c2610f6f565b73ffffffffffffffffffffffffffffffffffffffff1614612121576120e5611a0a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161211891906134ff565b60405180910390fd5b565b600061212d6121fa565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600061222c61190f565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361229f57826040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161229691906134ff565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051612392919061338e565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115612551578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026123e4611a0a565b8685856040518563ffffffff1660e01b81526004016124069493929190613f4b565b6020604051808303816000875af192505050801561244257506040513d601f19601f8201168201806040525081019061243f9190613fac565b60015b6124c6573d8060008114612472576040519150601f19603f3d011682016040523d82523d6000602084013e612477565b606091505b5060008151036124be57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016124b591906134ff565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461254f57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161254691906134ff565b60405180910390fd5b505b50505050565b60007f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900905090565b606060405180606001604052806022815260200161445960229139905090565b60606125aa82611937565b5060006125b561257f565b905060008151116125d55760405180602001604052806000815250612600565b806125df84612c57565b6040516020016125f0929190613e02565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061267d61190f565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006126c761190f565b905081806127025750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561283657600061271285611937565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561277d57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015612790575061278e81856116c3565b155b156127d257836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016127c991906134ff565b60405180910390fd5b821561283457848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b61289c838383612d25565b61295057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361291157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016129089190613946565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612947929190613fd9565b60405180910390fd5b505050565b6000604182511461299b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129929061404e565b60405180910390fd5b6000836040516020016129ae91906140db565b60405160208183030381529060405280519060200120905060008060006020860151925060408601519150606086015160001a905060018482858560405160008152602001604052604051612a06949392919061411d565b6020604051602081039080840390855afa158015612a28573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b612a58828260405180602001604052806000815250612de6565b5050565b6000612a66612557565b9050818160000160008581526020019081526020016000209081612a8a9190614304565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce783604051612aba9190613946565b60405180910390a1505050565b612acf612e02565b612b05576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612b0f612ac7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612b815760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612b7891906134ff565b60405180910390fd5b612b8a81612123565b50565b6000612bbb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612bed82612e2c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612c4a57612c448282612ef9565b50612c53565b612c52612f7d565b5b5050565b606060006001612c6684612fba565b01905060008167ffffffffffffffff811115612c8557612c846135e3565b5b6040519080825280601f01601f191660200182016040528015612cb75781602001600182028036833780820191505090505b509050600082602001820190505b600115612d1a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581612d0e57612d0d6143d6565b5b04945060008503612cc5575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015612ddd57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612d9e5750612d9d84846116c3565b5b80612ddc57508273ffffffffffffffffffffffffffffffffffffffff16612dc4836119bf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b612df0838361310d565b612dfd60008484846123a0565b505050565b6000612e0c611d28565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03612e8857806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401612e7f91906134ff565b60405180910390fd5b80612eb57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612e22565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051612f239190614441565b600060405180830381855af49150503d8060008114612f5e576040519150601f19603f3d011682016040523d82523d6000602084013e612f63565b606091505b5091509150612f73858383613206565b9250505092915050565b6000341115612fb8576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310613018577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161300e5761300d6143d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310613055576d04ee2d6d415b85acef8100000000838161304b5761304a6143d6565b5b0492506020810190505b662386f26fc10000831061308457662386f26fc10000838161307a576130796143d6565b5b0492506010810190505b6305f5e10083106130ad576305f5e10083816130a3576130a26143d6565b5b0492506008810190505b61271083106130d25761271083816130c8576130c76143d6565b5b0492506004810190505b606483106130f557606483816130eb576130ea6143d6565b5b0492506002810190505b600a8310613104576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361317f5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161317691906134ff565b60405180910390fd5b600061318d83836000611a24565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146132015760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016131f891906134ff565b60405180910390fd5b505050565b60608261321b5761321682613295565b61328d565b60008251148015613243575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561328557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161327c91906134ff565b60405180910390fd5b81905061328e565b5b9392505050565b6000815111156132a85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613323816132ee565b811461332e57600080fd5b50565b6000813590506133408161331a565b92915050565b60006020828403121561335c5761335b6132e4565b5b600061336a84828501613331565b91505092915050565b60008115159050919050565b61338881613373565b82525050565b60006020820190506133a3600083018461337f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156133e35780820151818401526020810190506133c8565b60008484015250505050565b6000601f19601f8301169050919050565b600061340b826133a9565b61341581856133b4565b93506134258185602086016133c5565b61342e816133ef565b840191505092915050565b600060208201905081810360008301526134538184613400565b905092915050565b6000819050919050565b61346e8161345b565b811461347957600080fd5b50565b60008135905061348b81613465565b92915050565b6000602082840312156134a7576134a66132e4565b5b60006134b58482850161347c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134e9826134be565b9050919050565b6134f9816134de565b82525050565b600060208201905061351460008301846134f0565b92915050565b613523816134de565b811461352e57600080fd5b50565b6000813590506135408161351a565b92915050565b6000806040838503121561355d5761355c6132e4565b5b600061356b85828601613531565b925050602061357c8582860161347c565b9150509250929050565b60008060006060848603121561359f5761359e6132e4565b5b60006135ad86828701613531565b93505060206135be86828701613531565b92505060406135cf8682870161347c565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61361b826133ef565b810181811067ffffffffffffffff8211171561363a576136396135e3565b5b80604052505050565b600061364d6132da565b90506136598282613612565b919050565b600067ffffffffffffffff821115613679576136786135e3565b5b613682826133ef565b9050602081019050919050565b82818337600083830152505050565b60006136b16136ac8461365e565b613643565b9050828152602081018484840111156136cd576136cc6135de565b5b6136d884828561368f565b509392505050565b600082601f8301126136f5576136f46135d9565b5b813561370584826020860161369e565b91505092915050565b600067ffffffffffffffff821115613729576137286135e3565b5b613732826133ef565b9050602081019050919050565b600061375261374d8461370e565b613643565b90508281526020810184848401111561376e5761376d6135de565b5b61377984828561368f565b509392505050565b600082601f830112613796576137956135d9565b5b81356137a684826020860161373f565b91505092915050565b6000806000606084860312156137c8576137c76132e4565b5b60006137d686828701613531565b935050602084013567ffffffffffffffff8111156137f7576137f66132e9565b5b613803868287016136e0565b925050604084013567ffffffffffffffff811115613824576138236132e9565b5b61383086828701613781565b9150509250925092565b60008060408385031215613851576138506132e4565b5b600061385f85828601613531565b925050602061387085828601613531565b9150509250929050565b60008060408385031215613891576138906132e4565b5b600061389f85828601613531565b925050602083013567ffffffffffffffff8111156138c0576138bf6132e9565b5b6138cc85828601613781565b9150509250929050565b6000819050919050565b6138e9816138d6565b82525050565b600060208201905061390460008301846138e0565b92915050565b6000602082840312156139205761391f6132e4565b5b600061392e84828501613531565b91505092915050565b6139408161345b565b82525050565b600060208201905061395b6000830184613937565b92915050565b61396a81613373565b811461397557600080fd5b50565b60008135905061398781613961565b92915050565b600080604083850312156139a4576139a36132e4565b5b60006139b285828601613531565b92505060206139c385828601613978565b9150509250929050565b6000806000606084860312156139e6576139e56132e4565b5b60006139f486828701613531565b9350506020613a058682870161347c565b925050604084013567ffffffffffffffff811115613a2657613a256132e9565b5b613a3286828701613781565b9150509250925092565b60008060008060808587031215613a5657613a556132e4565b5b6000613a6487828801613531565b9450506020613a7587828801613531565b9350506040613a868782880161347c565b925050606085013567ffffffffffffffff811115613aa757613aa66132e9565b5b613ab387828801613781565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0657607f821691505b602082108103613b1957613b18613abf565b5b50919050565b6000606082019050613b3460008301866134f0565b613b416020830185613937565b613b4e60408301846134f0565b949350505050565b60008160601b9050919050565b6000613b6e82613b56565b9050919050565b6000613b8082613b63565b9050919050565b613b98613b93826134de565b613b75565b82525050565b600081905092915050565b6000613bb4826133a9565b613bbe8185613b9e565b9350613bce8185602086016133c5565b80840191505092915050565b6000613be68285613b87565b601482019150613bf68284613ba9565b91508190509392505050565b6000606082019050613c176000830186613937565b8181036020830152613c298185613400565b9050613c386040830184613937565b949350505050565b6000604082019050613c556000830185613937565b613c626020830184613937565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000613cac613ca7613ca284613c69565b613c87565b613c73565b9050919050565b613cbc81613c91565b82525050565b6000602082019050613cd76000830184613cb3565b92915050565b7f4e6f74205665726966696572204163636f756e74000000000000000000000000600082015250565b6000613d136014836133b4565b9150613d1e82613cdd565b602082019050919050565b60006020820190508181036000830152613d4281613d06565b9050919050565b6000819050919050565b613d64613d5f8261345b565b613d49565b82525050565b6000613d768285613b87565b601482019150613d868284613d53565b6020820191508190509392505050565b7f4e6f74204167656e74204163636f756e74000000000000000000000000000000600082015250565b6000613dcc6011836133b4565b9150613dd782613d96565b602082019050919050565b60006020820190508181036000830152613dfb81613dbf565b9050919050565b6000613e0e8285613ba9565b9150613e1a8284613ba9565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e608261345b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613e9257613e91613e26565b5b600182019050919050565b613ea6816138d6565b8114613eb157600080fd5b50565b600081519050613ec381613e9d565b92915050565b600060208284031215613edf57613ede6132e4565b5b6000613eed84828501613eb4565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000613f1d82613ef6565b613f278185613f01565b9350613f378185602086016133c5565b613f40816133ef565b840191505092915050565b6000608082019050613f6060008301876134f0565b613f6d60208301866134f0565b613f7a6040830185613937565b8181036060830152613f8c8184613f12565b905095945050505050565b600081519050613fa68161331a565b92915050565b600060208284031215613fc257613fc16132e4565b5b6000613fd084828501613f97565b91505092915050565b6000604082019050613fee60008301856134f0565b613ffb6020830184613937565b9392505050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b60006140386018836133b4565b915061404382614002565b602082019050919050565b600060208201905081810360008301526140678161402b565b9050919050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b60006140a4601c83613b9e565b91506140af8261406e565b601c82019050919050565b6000819050919050565b6140d56140d0826138d6565b6140ba565b82525050565b60006140e682614097565b91506140f282846140c4565b60208201915081905092915050565b600060ff82169050919050565b61411781614101565b82525050565b600060808201905061413260008301876138e0565b61413f602083018661410e565b61414c60408301856138e0565b61415960608301846138e0565b95945050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026141c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614187565b6141ce8683614187565b95508019841693508086168417925050509392505050565b60006142016141fc6141f78461345b565b613c87565b61345b565b9050919050565b6000819050919050565b61421b836141e6565b61422f61422782614208565b848454614194565b825550505050565b600090565b614244614237565b61424f818484614212565b505050565b5b818110156142735761426860008261423c565b600181019050614255565b5050565b601f8211156142b85761428981614162565b61429284614177565b810160208510156142a1578190505b6142b56142ad85614177565b830182614254565b50505b505050565b600082821c905092915050565b60006142db600019846008026142bd565b1980831691505092915050565b60006142f483836142ca565b9150826002028217905092915050565b61430d826133a9565b67ffffffffffffffff811115614326576143256135e3565b5b6143308254613aee565b61433b828285614277565b600060209050601f83116001811461436e576000841561435c578287015190505b61436685826142e8565b8655506143ce565b601f19841661437c86614162565b60005b828110156143a45784890151825560018201915060208501945060208101905061437f565b868310156143c157848901516143bd601f8916826142ca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081905092915050565b600061441b82613ef6565b6144258185614405565b93506144358185602086016133c5565b80840191505092915050565b600061444d8284614410565b91508190509291505056fe68747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732fa2646970667358221220fd43bb4e2839a9c58cbe9b6db670ae4c54ce9b73cb0b1803917761224fb205eb64736f6c63430008180033",
            "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xF3B90296 EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0xF551EB19 EQ PUSH2 0x6D0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xBCF685ED EQ PUSH2 0x59E JUMPI DUP1 PUSH4 0xBEDF77A6 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA610E36A EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x54A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x7B5CF44F EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x46657FE9 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x5437988D EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x411 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x46657FE9 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x364 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x2E1E07C7 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E7 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x3346 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0x82F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x37AF JUMP JUMPDEST PUSH2 0x931 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x383A JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x387A JUMP JUMPDEST PUSH2 0xD14 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x38EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xD66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x463 PUSH2 0xF12 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0xF26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B7 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E2 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x398D JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x548 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x39CD JUMP JUMPDEST PUSH2 0x105E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55F PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x3A3C JUMP JUMPDEST PUSH2 0x1297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C0 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x12B4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x1388 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x617 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x612 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x3439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x654 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x383A JUMP JUMPDEST PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x1765 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x390A JUMP JUMPDEST PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E5 PUSH2 0x1803 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F2 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x755 JUMPI POP PUSH2 0x754 DUP3 PUSH2 0x182D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x768 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x779 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A5 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0x1937 JUMP JUMPDEST POP PUSH2 0x812 DUP3 PUSH2 0x19BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x82B DUP3 DUP3 PUSH2 0x826 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x898 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B5 DUP4 DUP4 PUSH2 0x8B0 PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x92B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9BC JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA09 SWAP3 SWAP2 SWAP1 PUSH2 0x3BDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP6 DUP6 PUSH2 0x1CEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73F8954B6ACA1B315E4645B31CD927C4F6E91F7072F93664C4A300DE3ED54374 DUP3 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xABA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC2733C56830B63400657697F24FC9E91D631C3C8A02B7C0D7331F0C7546EFB84 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xB0A SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB34 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1297 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6C PUSH2 0x1D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBBA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBEF JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xBFD JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC34 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC84 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xC8D DUP8 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0xC96 DUP8 PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0xC9F DUP7 PUSH2 0x1DB0 JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD02 SWAP2 SWAP1 PUSH2 0x3CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD1C PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0xD25 DUP3 PUSH2 0x1EEB JUMP JUMPDEST PUSH2 0xD2F DUP3 DUP3 PUSH2 0x1EF6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3D PUSH2 0x2015 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x3D29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE42 DUP3 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE54 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF1A PUSH2 0x209C JUMP JUMPDEST PUSH2 0xF24 PUSH1 0x0 PUSH2 0x2123 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xF7A PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xFB3 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xFC4 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFF0 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x103D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1012 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x103D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1020 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x105A PUSH2 0x1053 PUSH2 0x1A0A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2222 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10E9 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x114B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1136 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP4 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x649CDF9700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC2733C56830B63400657697F24FC9E91D631C3C8A02B7C0D7331F0C7546EFB84 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1250 SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x12A2 DUP5 DUP5 DUP5 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x12AE DUP5 DUP5 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1413 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH32 0x6D187B2800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x14C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2A32605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x769BACF6500D62DC7DB4F651A1585F741ED419B5575AE0AE894FF03D3769F118 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP3 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x15AB PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP PUSH2 0x15B6 DUP4 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x15D9 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1605 SWAP1 PUSH2 0x3AEE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1652 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1627 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1652 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1635 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1663 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1679 JUMPI DUP2 SWAP4 POP POP POP POP PUSH2 0x16BE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x16AF JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1696 SWAP3 SWAP2 SWAP1 PUSH2 0x3E02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16B8 DUP6 PUSH2 0x259F JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16CE PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x176D PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17E8 DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1908 JUMPI POP PUSH2 0x1907 DUP3 PUSH2 0x2608 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1943 DUP4 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19B6 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19AD SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x19CA PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A1F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x26BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A2F PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A3C DUP6 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A7E JUMPI PUSH2 0x1A7D DUP2 DUP6 DUP8 PUSH2 0x2891 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B11 JUMPI PUSH2 0x1AC0 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B96 JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C99 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH2 0x2955 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SLOAD SWAP1 POP PUSH2 0x1CFC DUP5 DUP3 PUSH2 0x2A3E JUMP JUMPDEST PUSH2 0x1D06 DUP2 DUP5 PUSH2 0x2A5C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D19 SWAP1 PUSH2 0x3E55 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D58 PUSH2 0x2AC7 JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x2B07 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D6C PUSH2 0x2AC7 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1DB8 PUSH2 0x2AC7 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1E03 PUSH2 0x2AC7 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1EB2 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E99 PUSH2 0x2B8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1EE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1EF3 PUSH2 0x209C JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F5E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F5B SWAP2 SWAP1 PUSH2 0x3EC9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F9F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F96 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x2006 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFD SWAP2 SWAP1 PUSH2 0x38EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2010 DUP4 DUP4 PUSH2 0x2BE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x209A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x20A4 PUSH2 0x1A0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C2 PUSH2 0xF6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2121 JUMPI PUSH2 0x20E5 PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2118 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212D PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222C PUSH2 0x190F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x229F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2392 SWAP2 SWAP1 PUSH2 0x338E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2551 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x23E4 PUSH2 0x1A0A JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2406 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F4B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2442 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x243F SWAP2 SWAP1 PUSH2 0x3FAC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x24C6 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2472 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2477 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x24BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B5 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x254F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2546 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x542A41881EE128A365A727B282C86FA859579490B9BB45AAB8503648C8E7900 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4459 PUSH1 0x22 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x25AA DUP3 PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x25B5 PUSH2 0x257F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x25D5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2600 JUMP JUMPDEST DUP1 PUSH2 0x25DF DUP5 PUSH2 0x2C57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25F0 SWAP3 SWAP2 SWAP1 PUSH2 0x3E02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x267D PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C7 PUSH2 0x190F JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x2702 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2836 JUMPI PUSH1 0x0 PUSH2 0x2712 DUP6 PUSH2 0x1937 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x277D JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2790 JUMPI POP PUSH2 0x278E DUP2 DUP6 PUSH2 0x16C3 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x27D2 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x2834 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x289C DUP4 DUP4 DUP4 PUSH2 0x2D25 JUMP JUMPDEST PUSH2 0x2950 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2911 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2947 SWAP3 SWAP2 SWAP1 PUSH2 0x3FD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x41 DUP3 MLOAD EQ PUSH2 0x299B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2992 SWAP1 PUSH2 0x404E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x29AE SWAP2 SWAP1 PUSH2 0x40DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x1 DUP5 DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2A06 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x411D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A28 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A58 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2DE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A66 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2A8A SWAP2 SWAP1 PUSH2 0x4304 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2ABA SWAP2 SWAP1 PUSH2 0x3946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x2ACF PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0x2B05 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2B0F PUSH2 0x2AC7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B81 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B78 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B8A DUP2 PUSH2 0x2123 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2BED DUP3 PUSH2 0x2E2C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2C4A JUMPI PUSH2 0x2C44 DUP3 DUP3 PUSH2 0x2EF9 JUMP JUMPDEST POP PUSH2 0x2C53 JUMP JUMPDEST PUSH2 0x2C52 PUSH2 0x2F7D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2C66 DUP5 PUSH2 0x2FBA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2CB7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2D1A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x2CC5 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x2DDD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2D9E JUMPI POP PUSH2 0x2D9D DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2DDC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DC4 DUP4 PUSH2 0x19BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2DF0 DUP4 DUP4 PUSH2 0x310D JUMP JUMPDEST PUSH2 0x2DFD PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x23A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0C PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2E88 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E7F SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2EB5 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x2E22 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2F23 SWAP2 SWAP1 PUSH2 0x4441 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F5E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F63 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F73 DUP6 DUP4 DUP4 PUSH2 0x3206 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2FB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3018 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x300E JUMPI PUSH2 0x300D PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3055 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x304B JUMPI PUSH2 0x304A PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3084 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x307A JUMPI PUSH2 0x3079 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x30AD JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x30A3 JUMPI PUSH2 0x30A2 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x30D2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x30C8 JUMPI PUSH2 0x30C7 PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x30F5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x30EB JUMPI PUSH2 0x30EA PUSH2 0x43D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3104 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x317F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3176 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x318D DUP4 DUP4 PUSH1 0x0 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3201 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31F8 SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x321B JUMPI PUSH2 0x3216 DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH2 0x328D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x3243 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x3285 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327C SWAP2 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x328E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x32A8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3323 DUP2 PUSH2 0x32EE JUMP JUMPDEST DUP2 EQ PUSH2 0x332E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3340 DUP2 PUSH2 0x331A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x335C JUMPI PUSH2 0x335B PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x336A DUP5 DUP3 DUP6 ADD PUSH2 0x3331 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3388 DUP2 PUSH2 0x3373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x337F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x33C8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x340B DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x3415 DUP2 DUP6 PUSH2 0x33B4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3425 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x342E DUP2 PUSH2 0x33EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3453 DUP2 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346E DUP2 PUSH2 0x345B JUMP JUMPDEST DUP2 EQ PUSH2 0x3479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x348B DUP2 PUSH2 0x3465 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34A7 JUMPI PUSH2 0x34A6 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34B5 DUP5 DUP3 DUP6 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E9 DUP3 PUSH2 0x34BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34F9 DUP2 PUSH2 0x34DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3514 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3523 DUP2 PUSH2 0x34DE JUMP JUMPDEST DUP2 EQ PUSH2 0x352E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3540 DUP2 PUSH2 0x351A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x355D JUMPI PUSH2 0x355C PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x356B DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x357C DUP6 DUP3 DUP7 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x359F JUMPI PUSH2 0x359E PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35AD DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x35BE DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x35CF DUP7 DUP3 DUP8 ADD PUSH2 0x347C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x361B DUP3 PUSH2 0x33EF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x363A JUMPI PUSH2 0x3639 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364D PUSH2 0x32DA JUMP JUMPDEST SWAP1 POP PUSH2 0x3659 DUP3 DUP3 PUSH2 0x3612 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3679 JUMPI PUSH2 0x3678 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3682 DUP3 PUSH2 0x33EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B1 PUSH2 0x36AC DUP5 PUSH2 0x365E JUMP JUMPDEST PUSH2 0x3643 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36CD JUMPI PUSH2 0x36CC PUSH2 0x35DE JUMP JUMPDEST JUMPDEST PUSH2 0x36D8 DUP5 DUP3 DUP6 PUSH2 0x368F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36F5 JUMPI PUSH2 0x36F4 PUSH2 0x35D9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3705 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x369E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3729 JUMPI PUSH2 0x3728 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x3732 DUP3 PUSH2 0x33EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3752 PUSH2 0x374D DUP5 PUSH2 0x370E JUMP JUMPDEST PUSH2 0x3643 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x376E JUMPI PUSH2 0x376D PUSH2 0x35DE JUMP JUMPDEST JUMPDEST PUSH2 0x3779 DUP5 DUP3 DUP6 PUSH2 0x368F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3796 JUMPI PUSH2 0x3795 PUSH2 0x35D9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x37A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x373F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x37C8 JUMPI PUSH2 0x37C7 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37D6 DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F7 JUMPI PUSH2 0x37F6 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3803 DUP7 DUP3 DUP8 ADD PUSH2 0x36E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3824 JUMPI PUSH2 0x3823 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3830 DUP7 DUP3 DUP8 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3851 JUMPI PUSH2 0x3850 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x385F DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3870 DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3891 JUMPI PUSH2 0x3890 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x389F DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38C0 JUMPI PUSH2 0x38BF PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x38CC DUP6 DUP3 DUP7 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E9 DUP2 PUSH2 0x38D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3904 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3920 JUMPI PUSH2 0x391F PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x392E DUP5 DUP3 DUP6 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3940 DUP2 PUSH2 0x345B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x395B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x396A DUP2 PUSH2 0x3373 JUMP JUMPDEST DUP2 EQ PUSH2 0x3975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3987 DUP2 PUSH2 0x3961 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39A4 JUMPI PUSH2 0x39A3 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39B2 DUP6 DUP3 DUP7 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x39C3 DUP6 DUP3 DUP7 ADD PUSH2 0x3978 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39E6 JUMPI PUSH2 0x39E5 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39F4 DUP7 DUP3 DUP8 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3A05 DUP7 DUP3 DUP8 ADD PUSH2 0x347C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A26 JUMPI PUSH2 0x3A25 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3A32 DUP7 DUP3 DUP8 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3A56 JUMPI PUSH2 0x3A55 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A64 DUP8 DUP3 DUP9 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3A75 DUP8 DUP3 DUP9 ADD PUSH2 0x3531 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3A86 DUP8 DUP3 DUP9 ADD PUSH2 0x347C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3AA7 JUMPI PUSH2 0x3AA6 PUSH2 0x32E9 JUMP JUMPDEST JUMPDEST PUSH2 0x3AB3 DUP8 DUP3 DUP9 ADD PUSH2 0x3781 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B06 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B19 JUMPI PUSH2 0x3B18 PUSH2 0x3ABF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3B34 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3B41 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0x3B4E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x34F0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6E DUP3 PUSH2 0x3B56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B80 DUP3 PUSH2 0x3B63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B98 PUSH2 0x3B93 DUP3 PUSH2 0x34DE JUMP JUMPDEST PUSH2 0x3B75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BB4 DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH2 0x3BBE DUP2 DUP6 PUSH2 0x3B9E JUMP JUMPDEST SWAP4 POP PUSH2 0x3BCE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE6 DUP3 DUP6 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3BF6 DUP3 DUP5 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C17 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3937 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3C29 DUP2 DUP6 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C38 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C55 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0x3C62 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CAC PUSH2 0x3CA7 PUSH2 0x3CA2 DUP5 PUSH2 0x3C69 JUMP JUMPDEST PUSH2 0x3C87 JUMP JUMPDEST PUSH2 0x3C73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CBC DUP2 PUSH2 0x3C91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74205665726966696572204163636F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D13 PUSH1 0x14 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D1E DUP3 PUSH2 0x3CDD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D42 DUP2 PUSH2 0x3D06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D64 PUSH2 0x3D5F DUP3 PUSH2 0x345B JUMP JUMPDEST PUSH2 0x3D49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D76 DUP3 DUP6 PUSH2 0x3B87 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x3D86 DUP3 DUP5 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74204167656E74204163636F756E74000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DCC PUSH1 0x11 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3DD7 DUP3 PUSH2 0x3D96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DFB DUP2 PUSH2 0x3DBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E0E DUP3 DUP6 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E1A DUP3 DUP5 PUSH2 0x3BA9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E60 DUP3 PUSH2 0x345B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3E92 JUMPI PUSH2 0x3E91 PUSH2 0x3E26 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA6 DUP2 PUSH2 0x38D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EC3 DUP2 PUSH2 0x3E9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3EDF JUMPI PUSH2 0x3EDE PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EED DUP5 DUP3 DUP6 ADD PUSH2 0x3EB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F1D DUP3 PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x3F27 DUP2 DUP6 PUSH2 0x3F01 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F37 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST PUSH2 0x3F40 DUP2 PUSH2 0x33EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F60 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3F6D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3F7A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3937 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3F8C DUP2 DUP5 PUSH2 0x3F12 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FA6 DUP2 PUSH2 0x331A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FC2 JUMPI PUSH2 0x3FC1 PUSH2 0x32E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3FD0 DUP5 DUP3 DUP6 ADD PUSH2 0x3F97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3FEE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34F0 JUMP JUMPDEST PUSH2 0x3FFB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3937 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4038 PUSH1 0x18 DUP4 PUSH2 0x33B4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4043 DUP3 PUSH2 0x4002 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4067 DUP2 PUSH2 0x402B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A4 PUSH1 0x1C DUP4 PUSH2 0x3B9E JUMP JUMPDEST SWAP2 POP PUSH2 0x40AF DUP3 PUSH2 0x406E JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40D5 PUSH2 0x40D0 DUP3 PUSH2 0x38D6 JUMP JUMPDEST PUSH2 0x40BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E6 DUP3 PUSH2 0x4097 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F2 DUP3 DUP5 PUSH2 0x40C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4117 DUP2 PUSH2 0x4101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4132 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x413F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x410E JUMP JUMPDEST PUSH2 0x414C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x38E0 JUMP JUMPDEST PUSH2 0x4159 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x38E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x41C4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4187 JUMP JUMPDEST PUSH2 0x41CE DUP7 DUP4 PUSH2 0x4187 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4201 PUSH2 0x41FC PUSH2 0x41F7 DUP5 PUSH2 0x345B JUMP JUMPDEST PUSH2 0x3C87 JUMP JUMPDEST PUSH2 0x345B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x421B DUP4 PUSH2 0x41E6 JUMP JUMPDEST PUSH2 0x422F PUSH2 0x4227 DUP3 PUSH2 0x4208 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4194 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4244 PUSH2 0x4237 JUMP JUMPDEST PUSH2 0x424F DUP2 DUP5 DUP5 PUSH2 0x4212 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4273 JUMPI PUSH2 0x4268 PUSH1 0x0 DUP3 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4255 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42B8 JUMPI PUSH2 0x4289 DUP2 PUSH2 0x4162 JUMP JUMPDEST PUSH2 0x4292 DUP5 PUSH2 0x4177 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x42A1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x42B5 PUSH2 0x42AD DUP6 PUSH2 0x4177 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4254 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42DB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x42BD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F4 DUP4 DUP4 PUSH2 0x42CA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x430D DUP3 PUSH2 0x33A9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4326 JUMPI PUSH2 0x4325 PUSH2 0x35E3 JUMP JUMPDEST JUMPDEST PUSH2 0x4330 DUP3 SLOAD PUSH2 0x3AEE JUMP JUMPDEST PUSH2 0x433B DUP3 DUP3 DUP6 PUSH2 0x4277 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x436E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x435C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4366 DUP6 DUP3 PUSH2 0x42E8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x43CE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x437C DUP7 PUSH2 0x4162 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43A4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x437F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x43C1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x43BD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42CA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441B DUP3 PUSH2 0x3EF6 JUMP JUMPDEST PUSH2 0x4425 DUP2 DUP6 PUSH2 0x4405 JUMP JUMPDEST SWAP4 POP PUSH2 0x4435 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x33C5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x444D DUP3 DUP5 PUSH2 0x4410 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID PUSH9 0x747470733A2F2F6761 PUSH21 0x657761792E70696E6174612E636C6F75642F697066 PUSH20 0x2FA2646970667358221220FD43BB4E2839A9C58C 0xBE SWAP12 PUSH14 0xB670AE4C54CE9B73CB0B18039177 PUSH2 0x224F 0xB2 SDIV 0xEB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
            "sourceMap": "494:2477:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:218:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3546:146:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4792:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5495:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1502:379:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6139:132:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;973:81:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1275:221:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:154:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3366:118:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3044:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;2501:95:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:150:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5013:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1887:332:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6337:208:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:136:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2225:270:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2127:670:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5223:210:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;840:46:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;399:75:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1843:218:4;1956:4;943:10;936:18;;1979:35;;;:11;:35;;;;:75;;;;2018:36;2042:11;2018:23;:36::i;:::-;1979:75;1972:82;;1843:218;;;:::o;3546:146:3:-;3591:13;3616:23;3642:19;:17;:19::i;:::-;3616:45;;3678:1;:7;;3671:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3546:146;:::o;4792:154::-;4859:7;4878:22;4892:7;4878:13;:22::i;:::-;;4918:21;4931:7;4918:12;:21::i;:::-;4911:28;;4792:154;;;:::o;4618:113::-;4689:35;4698:2;4702:7;4711:12;:10;:12::i;:::-;4689:8;:35::i;:::-;4618:113;;:::o;5495:578::-;5603:1;5589:16;;:2;:16;;;5585:87;;5658:1;5628:33;;;;;;;;;;;:::i;:::-;;;;;;;;5585:87;5890:21;5914:34;5922:2;5926:7;5935:12;:10;:12::i;:::-;5914:7;:34::i;:::-;5890:58;;5979:4;5962:21;;:13;:21;;;5958:109;;6027:4;6033:7;6042:13;6006:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5958:109;5575:498;5495:578;;;:::o;1502:379:33:-;1595:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;1610:53:33::1;1634:6;1642:8;1617:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1653:9;1610:6;:53::i;:::-;1672:15;1690:22;1695:6;1703:8;1690:4;:22::i;:::-;1672:40;;1743:7;1721:11;:19;1733:6;1721:19;;;;;;;;;;;;;;;:29;;;;1775:6;1762:56;;;1783:7;1792:8;1802:15;1762:56;;;;;;;;:::i;:::-;;;;;;;;1842:6;1830:45;;;1850:7;1859:15;1830:45;;;;;;;:::i;:::-;;;;;;;;1603:278;1502:379:::0;;;;:::o;6139:132:3:-;6225:39;6242:4;6248:2;6252:7;6225:39;;;;;;;;;;;;:16;:39::i;:::-;6139:132;;;:::o;973:81:45:-;1017:7;1040:8;;;;;;;;;;;1033:15;;973:81;:::o;1275:221:33:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1356:22:33::1;1371:6;1356:14;:22::i;:::-;1385;1400:6;1385:14;:22::i;:::-;1414:25;1429:9;1414:14;:25::i;:::-;1446:24;:22;:24::i;:::-;1489:1;1477:9;:13;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1275:221:33;;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:14::1;3800:32:2;;3793:39;;3705:134:::0;:::o;1060:154:45:-;1146:8;;;;;;;;;;1132:22;;:10;:22;;;1124:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:11;1186:8;;:22;;;;;;;;;;;;;;;;;;1060:154;:::o;3366:118:3:-;3429:7;3455:22;3469:7;3455:13;:22::i;:::-;3448:29;;3366:118;;;:::o;3044:265::-;3107:7;3126:23;3152:19;:17;:19::i;:::-;3126:45;;3202:1;3185:19;;:5;:19;;;3181:87;;3254:1;3227:30;;;;;;;;;;;:::i;:::-;;;;;;;;3181:87;3284:1;:11;;:18;3296:5;3284:18;;;;;;;;;;;;;;;;3277:25;;;3044:265;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2501:95:33:-;2550:7;2573:11;:17;2585:4;2573:17;;;;;;;;;;;;;;;;2566:24;;2501:95;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3756:150:3:-;3803:13;3828:23;3854:19;:17;:19::i;:::-;3828:45;;3890:1;:9;;3883:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3756:150;:::o;5013:144::-;5098:52;5117:12;:10;:12::i;:::-;5131:8;5141;5098:18;:52::i;:::-;5013:144;;:::o;1887:332:33:-;1971:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;1986:52:33::1;2010:6;2018:7;1993:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2028:9;1986:6;:52::i;:::-;2072:1;2049:11;:19;2061:6;2049:19;;;;;;;;;;;;;;;;:24;2045:74;;2091:20;;;;;;;;;;;;;;2045:74;2149:7;2127:11;:19;2139:6;2127:19;;;;;;;;;;;;;;;:29;;;;2180:6;2168:45;;;2188:7;2197:15;2168:45;;;;;;;:::i;:::-;;;;;;;;1887:332:::0;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;6337:208:3:-;6450:31;6463:4;6469:2;6473:7;6450:12;:31::i;:::-;6491:47;6514:4;6520:2;6524:7;6533:4;6491:22;:47::i;:::-;6337:208;;;;:::o;480:136:43:-;560:5;;;;;;;;;;;546:19;;:10;:19;;;538:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;602:8;594:5;;:16;;;;;;;;;;;;;;;;;;480:136;:::o;2225:270:33:-;2269:6;314:10:43;304:20;;:6;:20;;;;:43;;;;;342:5;;;;;;;;;;;328:19;;:10;:19;;;;304:43;300:79;;;363:16;;;;;;;;;;;;;;300:79;2311:1:33::1;2288:11;:19;2300:6;2288:19;;;;;;;;;;;;;;;;:24:::0;2284:70:::1;;2330:16;;;;;;;;;;;;;;2284:70;2362:15;2380:11;:19;2392:6;2380:19;;;;;;;;;;;;;;;;2362:37;;2413:11;:19;2425:6;2413:19;;;;;;;;;;;;;;;2406:26;;;2456:6;2444:45;;;2464:7;2473:15;2444:45;;;;;;;:::i;:::-;;;;;;;;2277:218;2225:270:::0;;:::o;2127:670:4:-;2200:13;2225:33;2261:29;:27;:29::i;:::-;2225:65;;2300:22;2314:7;2300:13;:22::i;:::-;;2333:23;2359:1;:12;;:21;2372:7;2359:21;;;;;;;;;;;2333:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2390:18;2411:10;:8;:10::i;:::-;2390:31;;2516:1;2500:4;2494:18;:23;2490:70;;2540:9;2533:16;;;;;;;2490:70;2685:1;2665:9;2659:23;:27;2655:95;;;2723:4;2729:9;2709:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:37;;;;;;;2655:95;2767:23;2782:7;2767:14;:23::i;:::-;2760:30;;;;;2127:670;;;;:::o;5223:210:3:-;5311:4;5327:23;5353:19;:17;:19::i;:::-;5327:45;;5389:1;:20;;:27;5410:5;5389:27;;;;;;;;;;;;;;;:37;5417:8;5389:37;;;;;;;;;;;;;;;;;;;;;;;;;5382:44;;;5223:210;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;840:46:33:-;;;;;;;;;;;;;;;;;:::o;399:75:43:-;440:7;463:5;;;;;;;;;;;456:12;;399:75;:::o;2674:311:3:-;2787:4;2837:25;2822:40;;;:11;:40;;;;:104;;;;2893:33;2878:48;;;:11;:48;;;;2822:104;:156;;;;2942:36;2966:11;2942:23;:36::i;:::-;2822:156;2803:175;;2674:311;;;:::o;1958:156::-;2009:23;2077:21;2067:31;;1958:156;:::o;17836:241::-;17899:7;17918:13;17934:17;17943:7;17934:8;:17::i;:::-;17918:33;;17982:1;17965:19;;:5;:19;;;17961:88;;18030:7;18007:31;;;;;;;;;;;:::i;:::-;;;;;;;;17961:88;18065:5;18058:12;;;17836:241;;;:::o;7347:184::-;7417:7;7436:23;7462:19;:17;:19::i;:::-;7436:45;;7498:1;:17;;:26;7516:7;7498:26;;;;;;;;;;;;;;;;;;;;;7491:33;;;7347:184;;;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;16002:120:3:-;16082:33;16091:2;16095:7;16104:4;16110;16082:8;:33::i;:::-;16002:120;;;:::o;10361:856::-;10447:7;10466:23;10492:19;:17;:19::i;:::-;10466:45;;10521:12;10536:17;10545:7;10536:8;:17::i;:::-;10521:32;;10629:1;10613:18;;:4;:18;;;10609:86;;10647:37;10664:4;10670;10676:7;10647:16;:37::i;:::-;10609:86;10755:1;10739:18;;:4;:18;;;10735:258;;10855:48;10872:1;10876:7;10893:1;10897:5;10855:8;:48::i;:::-;10967:1;10946;:11;;:17;10958:4;10946:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10735:258;11021:1;11007:16;;:2;:16;;;11003:109;;11086:1;11067;:11;;:15;11079:2;11067:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;11003:109;11143:2;11122:1;:9;;:18;11132:7;11122:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11180:7;11176:2;11161:27;;11170:4;11161:27;;;;;;;;;;;;11206:4;11199:11;;;;10361:856;;;;;:::o;773:194:45:-;910:8;;;;;;;;;;868:50;;:38;886:7;876:18;;;;;;896:9;868:7;:38::i;:::-;:50;;;864:98;;936:18;;;;;;;;;;;;;;864:98;773:194;;:::o;2602:235:33:-;2672:7;2688:17;2708:9;;2688:29;;2724:26;2734:4;2740:9;2724;:26::i;:::-;2757:33;2770:9;2781:8;2757:12;:33::i;:::-;2797:9;;:11;;;;;;;;;:::i;:::-;;;;;;2822:9;2815:16;;;2602:235;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;622:105:43:-;6931:20:1;:18;:20::i;:::-;709:12:43::1;701:5;;:20;;;;;;;;;;;;;;;;;;622:105:::0;:::o;1220:114:45:-;6931:20:1;:18;:20::i;:::-;1313:15:45::1;1302:8;::::0;:26:::1;;;;;;;;;;;;;;;;;;1220:114:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;4599:312::-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;768:66:33:-;2334:13:0;:11;:13::i;:::-;768:66:33;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:14;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;17232:369:3:-;17335:23;17361:19;:17;:19::i;:::-;17335:45;;17414:1;17394:22;;:8;:22;;;17390:91;;17461:8;17439:31;;;;;;;;;;;:::i;:::-;;;;;;;;17390:91;17530:8;17490:1;:20;;:27;17511:5;17490:27;;;;;;;;;;;;;;;:37;17518:8;17490:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17575:8;17553:41;;17568:5;17553:41;;;17585:8;17553:41;;;;;;:::i;:::-;;;;;;;;17325:276;17232:369;;;:::o;18616:782::-;18749:1;18732:2;:14;;;:18;18728:664;;;18786:2;18770:36;;;18807:12;:10;:12::i;:::-;18821:4;18827:7;18836:4;18770:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;18766:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19096:1;19079:6;:13;:18;19075:293;;19150:2;19128:25;;;;;;;;;;;:::i;:::-;;;;;;;;19075:293;19320:6;19314:13;19305:6;19301:2;19297:15;19290:38;18766:616;18898:41;;;18888:51;;;:6;:51;;;;18884:130;;18992:2;18970:25;;;;;;;;;;;:::i;:::-;;;;;;;;18884:130;18842:186;18728:664;18616:782;;;;:::o;1434:186:4:-;1495:33;1573:31;1563:41;;1434:186;:::o;2845:123:33:-;2897:13;2919:43;;;;;;;;;;;;;;;;;;;2845:123;:::o;3972:255:3:-;4036:13;4061:22;4075:7;4061:13;:22::i;:::-;;4094:21;4118:10;:8;:10::i;:::-;4094:34;;4169:1;4151:7;4145:21;:25;:75;;;;;;;;;;;;;;;;;4187:7;4196:18;:7;:16;:18::i;:::-;4173:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4145:75;4138:82;;;3972:255;;;:::o;1034:146:7:-;1110:4;1148:25;1133:40;;;:11;:40;;;;1126:47;;1034:146;;;:::o;7059:172:3:-;7125:7;7144:23;7170:19;:17;:19::i;:::-;7144:45;;7206:1;:9;;:18;7216:7;7206:18;;;;;;;;;;;;;;;;;;;;;7199:25;;;7059:172;;;:::o;16304:719::-;16408:23;16434:19;:17;:19::i;:::-;16408:45;;16519:9;:31;;;;16548:1;16532:18;;:4;:18;;;;16519:31;16515:460;;;16566:13;16582:22;16596:7;16582:13;:22::i;:::-;16566:38;;16748:1;16732:18;;:4;:18;;;;:35;;;;;16763:4;16754:13;;:5;:13;;;;16732:35;:69;;;;;16772:29;16789:5;16796:4;16772:16;:29::i;:::-;16771:30;16732:69;16728:142;;;16850:4;16828:27;;;;;;;;;;;:::i;:::-;;;;;;;;16728:142;16888:9;16884:81;;;16942:7;16938:2;16922:28;;16931:5;16922:28;;;;;;;;;;;;16884:81;16552:423;16515:460;17014:2;16985:1;:17;;:26;17003:7;16985:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16398:625;16304:719;;;;:::o;8548:368::-;8660:38;8674:5;8681:7;8690;8660:13;:38::i;:::-;8655:255;;8735:1;8718:19;;:5;:19;;;8714:186;;8787:7;8764:31;;;;;;;;;;;:::i;:::-;;;;;;;;8714:186;8868:7;8877;8841:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8655:255;8548:368;;;:::o;265:502:45:-;346:7;390:2;370:9;:16;:22;362:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;428:14;508:7;455:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;445:72;;;;;;428:89;;524:9;540;556:7;614:4;603:9;599:20;593:27;588:32;;654:4;643:9;639:20;633:27;628:32;;702:4;691:9;687:20;681:27;678:1;673:36;668:41;;735:26;745:6;753:1;756;759;735:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:33;;;;;;265:502;;;;:::o;12217:100:3:-;12284:26;12294:2;12298:7;12284:26;;;;;;;;;;;;:9;:26::i;:::-;12217:100;;:::o;2916:244:4:-;3007:33;3043:29;:27;:29::i;:::-;3007:65;;3106:9;3082:1;:12;;:21;3095:7;3082:21;;;;;;;;;;;:33;;;;;;:::i;:::-;;3130:23;3145:7;3130:23;;;;;;:::i;:::-;;;;;;;;2997:163;2916:244;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1957:138:14:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;637:698:27:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;7842:272:3:-;7945:4;7999:1;7980:21;;:7;:21;;;;:127;;;;;8027:7;8018:16;;:5;:16;;;:52;;;;8038:32;8055:5;8062:7;8038:16;:32::i;:::-;8018:52;:88;;;;8099:7;8074:32;;:21;8087:7;8074:12;:21::i;:::-;:32;;;8018:88;7980:127;7961:146;;7842:272;;;;;:::o;12538:182::-;12632:18;12638:2;12642:7;12632:5;:18::i;:::-;12660:53;12691:1;12695:2;12699:7;12708:4;12660:22;:53::i;:::-;12538:182;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;1684:190:26:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:14:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:24:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:14:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;12214:916:30:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;11539:327:3:-;11620:1;11606:16;;:2;:16;;;11602:87;;11675:1;11645:33;;;;;;;;;;;:::i;:::-;;;;;;;;11602:87;11698:21;11722:32;11730:2;11734:7;11751:1;11722:7;:32::i;:::-;11698:56;;11793:1;11768:27;;:13;:27;;;11764:96;;11846:1;11818:31;;;;;;;;;;;:::i;:::-;;;;;;;;11764:96;11592:274;11539:327;;:::o;4625:582:24:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:46;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:117::-;5624:1;5621;5614:12;5638:117;5747:1;5744;5737:12;5761:180;5809:77;5806:1;5799:88;5906:4;5903:1;5896:15;5930:4;5927:1;5920:15;5947:281;6030:27;6052:4;6030:27;:::i;:::-;6022:6;6018:40;6160:6;6148:10;6145:22;6124:18;6112:10;6109:34;6106:62;6103:88;;;6171:18;;:::i;:::-;6103:88;6211:10;6207:2;6200:22;5990:238;5947:281;;:::o;6234:129::-;6268:6;6295:20;;:::i;:::-;6285:30;;6324:33;6352:4;6344:6;6324:33;:::i;:::-;6234:129;;;:::o;6369:308::-;6431:4;6521:18;6513:6;6510:30;6507:56;;;6543:18;;:::i;:::-;6507:56;6581:29;6603:6;6581:29;:::i;:::-;6573:37;;6665:4;6659;6655:15;6647:23;;6369:308;;;:::o;6683:146::-;6780:6;6775:3;6770;6757:30;6821:1;6812:6;6807:3;6803:16;6796:27;6683:146;;;:::o;6835:425::-;6913:5;6938:66;6954:49;6996:6;6954:49;:::i;:::-;6938:66;:::i;:::-;6929:75;;7027:6;7020:5;7013:21;7065:4;7058:5;7054:16;7103:3;7094:6;7089:3;7085:16;7082:25;7079:112;;;7110:79;;:::i;:::-;7079:112;7200:54;7247:6;7242:3;7237;7200:54;:::i;:::-;6919:341;6835:425;;;;;:::o;7280:340::-;7336:5;7385:3;7378:4;7370:6;7366:17;7362:27;7352:122;;7393:79;;:::i;:::-;7352:122;7510:6;7497:20;7535:79;7610:3;7602:6;7595:4;7587:6;7583:17;7535:79;:::i;:::-;7526:88;;7342:278;7280:340;;;;:::o;7626:307::-;7687:4;7777:18;7769:6;7766:30;7763:56;;;7799:18;;:::i;:::-;7763:56;7837:29;7859:6;7837:29;:::i;:::-;7829:37;;7921:4;7915;7911:15;7903:23;;7626:307;;;:::o;7939:423::-;8016:5;8041:65;8057:48;8098:6;8057:48;:::i;:::-;8041:65;:::i;:::-;8032:74;;8129:6;8122:5;8115:21;8167:4;8160:5;8156:16;8205:3;8196:6;8191:3;8187:16;8184:25;8181:112;;;8212:79;;:::i;:::-;8181:112;8302:54;8349:6;8344:3;8339;8302:54;:::i;:::-;8022:340;7939:423;;;;;:::o;8381:338::-;8436:5;8485:3;8478:4;8470:6;8466:17;8462:27;8452:122;;8493:79;;:::i;:::-;8452:122;8610:6;8597:20;8635:78;8709:3;8701:6;8694:4;8686:6;8682:17;8635:78;:::i;:::-;8626:87;;8442:277;8381:338;;;;:::o;8725:977::-;8821:6;8829;8837;8886:2;8874:9;8865:7;8861:23;8857:32;8854:119;;;8892:79;;:::i;:::-;8854:119;9012:1;9037:53;9082:7;9073:6;9062:9;9058:22;9037:53;:::i;:::-;9027:63;;8983:117;9167:2;9156:9;9152:18;9139:32;9198:18;9190:6;9187:30;9184:117;;;9220:79;;:::i;:::-;9184:117;9325:63;9380:7;9371:6;9360:9;9356:22;9325:63;:::i;:::-;9315:73;;9110:288;9465:2;9454:9;9450:18;9437:32;9496:18;9488:6;9485:30;9482:117;;;9518:79;;:::i;:::-;9482:117;9623:62;9677:7;9668:6;9657:9;9653:22;9623:62;:::i;:::-;9613:72;;9408:287;8725:977;;;;;:::o;9708:474::-;9776:6;9784;9833:2;9821:9;9812:7;9808:23;9804:32;9801:119;;;9839:79;;:::i;:::-;9801:119;9959:1;9984:53;10029:7;10020:6;10009:9;10005:22;9984:53;:::i;:::-;9974:63;;9930:117;10086:2;10112:53;10157:7;10148:6;10137:9;10133:22;10112:53;:::i;:::-;10102:63;;10057:118;9708:474;;;;;:::o;10188:652::-;10265:6;10273;10322:2;10310:9;10301:7;10297:23;10293:32;10290:119;;;10328:79;;:::i;:::-;10290:119;10448:1;10473:53;10518:7;10509:6;10498:9;10494:22;10473:53;:::i;:::-;10463:63;;10419:117;10603:2;10592:9;10588:18;10575:32;10634:18;10626:6;10623:30;10620:117;;;10656:79;;:::i;:::-;10620:117;10761:62;10815:7;10806:6;10795:9;10791:22;10761:62;:::i;:::-;10751:72;;10546:287;10188:652;;;;;:::o;10846:77::-;10883:7;10912:5;10901:16;;10846:77;;;:::o;10929:118::-;11016:24;11034:5;11016:24;:::i;:::-;11011:3;11004:37;10929:118;;:::o;11053:222::-;11146:4;11184:2;11173:9;11169:18;11161:26;;11197:71;11265:1;11254:9;11250:17;11241:6;11197:71;:::i;:::-;11053:222;;;;:::o;11281:329::-;11340:6;11389:2;11377:9;11368:7;11364:23;11360:32;11357:119;;;11395:79;;:::i;:::-;11357:119;11515:1;11540:53;11585:7;11576:6;11565:9;11561:22;11540:53;:::i;:::-;11530:63;;11486:117;11281:329;;;;:::o;11616:118::-;11703:24;11721:5;11703:24;:::i;:::-;11698:3;11691:37;11616:118;;:::o;11740:222::-;11833:4;11871:2;11860:9;11856:18;11848:26;;11884:71;11952:1;11941:9;11937:17;11928:6;11884:71;:::i;:::-;11740:222;;;;:::o;11968:116::-;12038:21;12053:5;12038:21;:::i;:::-;12031:5;12028:32;12018:60;;12074:1;12071;12064:12;12018:60;11968:116;:::o;12090:133::-;12133:5;12171:6;12158:20;12149:29;;12187:30;12211:5;12187:30;:::i;:::-;12090:133;;;;:::o;12229:468::-;12294:6;12302;12351:2;12339:9;12330:7;12326:23;12322:32;12319:119;;;12357:79;;:::i;:::-;12319:119;12477:1;12502:53;12547:7;12538:6;12527:9;12523:22;12502:53;:::i;:::-;12492:63;;12448:117;12604:2;12630:50;12672:7;12663:6;12652:9;12648:22;12630:50;:::i;:::-;12620:60;;12575:115;12229:468;;;;;:::o;12703:797::-;12789:6;12797;12805;12854:2;12842:9;12833:7;12829:23;12825:32;12822:119;;;12860:79;;:::i;:::-;12822:119;12980:1;13005:53;13050:7;13041:6;13030:9;13026:22;13005:53;:::i;:::-;12995:63;;12951:117;13107:2;13133:53;13178:7;13169:6;13158:9;13154:22;13133:53;:::i;:::-;13123:63;;13078:118;13263:2;13252:9;13248:18;13235:32;13294:18;13286:6;13283:30;13280:117;;;13316:79;;:::i;:::-;13280:117;13421:62;13475:7;13466:6;13455:9;13451:22;13421:62;:::i;:::-;13411:72;;13206:287;12703:797;;;;;:::o;13506:943::-;13601:6;13609;13617;13625;13674:3;13662:9;13653:7;13649:23;13645:33;13642:120;;;13681:79;;:::i;:::-;13642:120;13801:1;13826:53;13871:7;13862:6;13851:9;13847:22;13826:53;:::i;:::-;13816:63;;13772:117;13928:2;13954:53;13999:7;13990:6;13979:9;13975:22;13954:53;:::i;:::-;13944:63;;13899:118;14056:2;14082:53;14127:7;14118:6;14107:9;14103:22;14082:53;:::i;:::-;14072:63;;14027:118;14212:2;14201:9;14197:18;14184:32;14243:18;14235:6;14232:30;14229:117;;;14265:79;;:::i;:::-;14229:117;14370:62;14424:7;14415:6;14404:9;14400:22;14370:62;:::i;:::-;14360:72;;14155:287;13506:943;;;;;;;:::o;14455:180::-;14503:77;14500:1;14493:88;14600:4;14597:1;14590:15;14624:4;14621:1;14614:15;14641:320;14685:6;14722:1;14716:4;14712:12;14702:22;;14769:1;14763:4;14759:12;14790:18;14780:81;;14846:4;14838:6;14834:17;14824:27;;14780:81;14908:2;14900:6;14897:14;14877:18;14874:38;14871:84;;14927:18;;:::i;:::-;14871:84;14692:269;14641:320;;;:::o;14967:442::-;15116:4;15154:2;15143:9;15139:18;15131:26;;15167:71;15235:1;15224:9;15220:17;15211:6;15167:71;:::i;:::-;15248:72;15316:2;15305:9;15301:18;15292:6;15248:72;:::i;:::-;15330;15398:2;15387:9;15383:18;15374:6;15330:72;:::i;:::-;14967:442;;;;;;:::o;15415:94::-;15448:8;15496:5;15492:2;15488:14;15467:35;;15415:94;;;:::o;15515:::-;15554:7;15583:20;15597:5;15583:20;:::i;:::-;15572:31;;15515:94;;;:::o;15615:100::-;15654:7;15683:26;15703:5;15683:26;:::i;:::-;15672:37;;15615:100;;;:::o;15721:157::-;15826:45;15846:24;15864:5;15846:24;:::i;:::-;15826:45;:::i;:::-;15821:3;15814:58;15721:157;;:::o;15884:148::-;15986:11;16023:3;16008:18;;15884:148;;;;:::o;16038:390::-;16144:3;16172:39;16205:5;16172:39;:::i;:::-;16227:89;16309:6;16304:3;16227:89;:::i;:::-;16220:96;;16325:65;16383:6;16378:3;16371:4;16364:5;16360:16;16325:65;:::i;:::-;16415:6;16410:3;16406:16;16399:23;;16148:280;16038:390;;;;:::o;16434:416::-;16594:3;16609:75;16680:3;16671:6;16609:75;:::i;:::-;16709:2;16704:3;16700:12;16693:19;;16729:95;16820:3;16811:6;16729:95;:::i;:::-;16722:102;;16841:3;16834:10;;16434:416;;;;;:::o;16856:533::-;17025:4;17063:2;17052:9;17048:18;17040:26;;17076:71;17144:1;17133:9;17129:17;17120:6;17076:71;:::i;:::-;17194:9;17188:4;17184:20;17179:2;17168:9;17164:18;17157:48;17222:78;17295:4;17286:6;17222:78;:::i;:::-;17214:86;;17310:72;17378:2;17367:9;17363:18;17354:6;17310:72;:::i;:::-;16856:533;;;;;;:::o;17395:332::-;17516:4;17554:2;17543:9;17539:18;17531:26;;17567:71;17635:1;17624:9;17620:17;17611:6;17567:71;:::i;:::-;17648:72;17716:2;17705:9;17701:18;17692:6;17648:72;:::i;:::-;17395:332;;;;;:::o;17733:85::-;17778:7;17807:5;17796:16;;17733:85;;;:::o;17824:101::-;17860:7;17900:18;17893:5;17889:30;17878:41;;17824:101;;;:::o;17931:60::-;17959:3;17980:5;17973:12;;17931:60;;;:::o;17997:156::-;18054:9;18087:60;18104:42;18113:32;18139:5;18113:32;:::i;:::-;18104:42;:::i;:::-;18087:60;:::i;:::-;18074:73;;17997:156;;;:::o;18159:145::-;18253:44;18291:5;18253:44;:::i;:::-;18248:3;18241:57;18159:145;;:::o;18310:236::-;18410:4;18448:2;18437:9;18433:18;18425:26;;18461:78;18536:1;18525:9;18521:17;18512:6;18461:78;:::i;:::-;18310:236;;;;:::o;18552:170::-;18692:22;18688:1;18680:6;18676:14;18669:46;18552:170;:::o;18728:366::-;18870:3;18891:67;18955:2;18950:3;18891:67;:::i;:::-;18884:74;;18967:93;19056:3;18967:93;:::i;:::-;19085:2;19080:3;19076:12;19069:19;;18728:366;;;:::o;19100:419::-;19266:4;19304:2;19293:9;19289:18;19281:26;;19353:9;19347:4;19343:20;19339:1;19328:9;19324:17;19317:47;19381:131;19507:4;19381:131;:::i;:::-;19373:139;;19100:419;;;:::o;19525:79::-;19564:7;19593:5;19582:16;;19525:79;;;:::o;19610:157::-;19715:45;19735:24;19753:5;19735:24;:::i;:::-;19715:45;:::i;:::-;19710:3;19703:58;19610:157;;:::o;19773:397::-;19913:3;19928:75;19999:3;19990:6;19928:75;:::i;:::-;20028:2;20023:3;20019:12;20012:19;;20041:75;20112:3;20103:6;20041:75;:::i;:::-;20141:2;20136:3;20132:12;20125:19;;20161:3;20154:10;;19773:397;;;;;:::o;20176:167::-;20316:19;20312:1;20304:6;20300:14;20293:43;20176:167;:::o;20349:366::-;20491:3;20512:67;20576:2;20571:3;20512:67;:::i;:::-;20505:74;;20588:93;20677:3;20588:93;:::i;:::-;20706:2;20701:3;20697:12;20690:19;;20349:366;;;:::o;20721:419::-;20887:4;20925:2;20914:9;20910:18;20902:26;;20974:9;20968:4;20964:20;20960:1;20949:9;20945:17;20938:47;21002:131;21128:4;21002:131;:::i;:::-;20994:139;;20721:419;;;:::o;21146:435::-;21326:3;21348:95;21439:3;21430:6;21348:95;:::i;:::-;21341:102;;21460:95;21551:3;21542:6;21460:95;:::i;:::-;21453:102;;21572:3;21565:10;;21146:435;;;;;:::o;21587:180::-;21635:77;21632:1;21625:88;21732:4;21729:1;21722:15;21756:4;21753:1;21746:15;21773:233;21812:3;21835:24;21853:5;21835:24;:::i;:::-;21826:33;;21881:66;21874:5;21871:77;21868:103;;21951:18;;:::i;:::-;21868:103;21998:1;21991:5;21987:13;21980:20;;21773:233;;;:::o;22012:122::-;22085:24;22103:5;22085:24;:::i;:::-;22078:5;22075:35;22065:63;;22124:1;22121;22114:12;22065:63;22012:122;:::o;22140:143::-;22197:5;22228:6;22222:13;22213:22;;22244:33;22271:5;22244:33;:::i;:::-;22140:143;;;;:::o;22289:351::-;22359:6;22408:2;22396:9;22387:7;22383:23;22379:32;22376:119;;;22414:79;;:::i;:::-;22376:119;22534:1;22559:64;22615:7;22606:6;22595:9;22591:22;22559:64;:::i;:::-;22549:74;;22505:128;22289:351;;;;:::o;22646:98::-;22697:6;22731:5;22725:12;22715:22;;22646:98;;;:::o;22750:168::-;22833:11;22867:6;22862:3;22855:19;22907:4;22902:3;22898:14;22883:29;;22750:168;;;;:::o;22924:373::-;23010:3;23038:38;23070:5;23038:38;:::i;:::-;23092:70;23155:6;23150:3;23092:70;:::i;:::-;23085:77;;23171:65;23229:6;23224:3;23217:4;23210:5;23206:16;23171:65;:::i;:::-;23261:29;23283:6;23261:29;:::i;:::-;23256:3;23252:39;23245:46;;23014:283;22924:373;;;;:::o;23303:640::-;23498:4;23536:3;23525:9;23521:19;23513:27;;23550:71;23618:1;23607:9;23603:17;23594:6;23550:71;:::i;:::-;23631:72;23699:2;23688:9;23684:18;23675:6;23631:72;:::i;:::-;23713;23781:2;23770:9;23766:18;23757:6;23713:72;:::i;:::-;23832:9;23826:4;23822:20;23817:2;23806:9;23802:18;23795:48;23860:76;23931:4;23922:6;23860:76;:::i;:::-;23852:84;;23303:640;;;;;;;:::o;23949:141::-;24005:5;24036:6;24030:13;24021:22;;24052:32;24078:5;24052:32;:::i;:::-;23949:141;;;;:::o;24096:349::-;24165:6;24214:2;24202:9;24193:7;24189:23;24185:32;24182:119;;;24220:79;;:::i;:::-;24182:119;24340:1;24365:63;24420:7;24411:6;24400:9;24396:22;24365:63;:::i;:::-;24355:73;;24311:127;24096:349;;;;:::o;24451:332::-;24572:4;24610:2;24599:9;24595:18;24587:26;;24623:71;24691:1;24680:9;24676:17;24667:6;24623:71;:::i;:::-;24704:72;24772:2;24761:9;24757:18;24748:6;24704:72;:::i;:::-;24451:332;;;;;:::o;24789:174::-;24929:26;24925:1;24917:6;24913:14;24906:50;24789:174;:::o;24969:366::-;25111:3;25132:67;25196:2;25191:3;25132:67;:::i;:::-;25125:74;;25208:93;25297:3;25208:93;:::i;:::-;25326:2;25321:3;25317:12;25310:19;;24969:366;;;:::o;25341:419::-;25507:4;25545:2;25534:9;25530:18;25522:26;;25594:9;25588:4;25584:20;25580:1;25569:9;25565:17;25558:47;25622:131;25748:4;25622:131;:::i;:::-;25614:139;;25341:419;;;:::o;25766:214::-;25906:66;25902:1;25894:6;25890:14;25883:90;25766:214;:::o;25986:402::-;26146:3;26167:85;26249:2;26244:3;26167:85;:::i;:::-;26160:92;;26261:93;26350:3;26261:93;:::i;:::-;26379:2;26374:3;26370:12;26363:19;;25986:402;;;:::o;26394:79::-;26433:7;26462:5;26451:16;;26394:79;;;:::o;26479:157::-;26584:45;26604:24;26622:5;26604:24;:::i;:::-;26584:45;:::i;:::-;26579:3;26572:58;26479:157;;:::o;26642:522::-;26855:3;26877:148;27021:3;26877:148;:::i;:::-;26870:155;;27035:75;27106:3;27097:6;27035:75;:::i;:::-;27135:2;27130:3;27126:12;27119:19;;27155:3;27148:10;;26642:522;;;;:::o;27170:86::-;27205:7;27245:4;27238:5;27234:16;27223:27;;27170:86;;;:::o;27262:112::-;27345:22;27361:5;27345:22;:::i;:::-;27340:3;27333:35;27262:112;;:::o;27380:545::-;27553:4;27591:3;27580:9;27576:19;27568:27;;27605:71;27673:1;27662:9;27658:17;27649:6;27605:71;:::i;:::-;27686:68;27750:2;27739:9;27735:18;27726:6;27686:68;:::i;:::-;27764:72;27832:2;27821:9;27817:18;27808:6;27764:72;:::i;:::-;27846;27914:2;27903:9;27899:18;27890:6;27846:72;:::i;:::-;27380:545;;;;;;;:::o;27931:141::-;27980:4;28003:3;27995:11;;28026:3;28023:1;28016:14;28060:4;28057:1;28047:18;28039:26;;27931:141;;;:::o;28078:93::-;28115:6;28162:2;28157;28150:5;28146:14;28142:23;28132:33;;28078:93;;;:::o;28177:107::-;28221:8;28271:5;28265:4;28261:16;28240:37;;28177:107;;;;:::o;28290:393::-;28359:6;28409:1;28397:10;28393:18;28432:97;28462:66;28451:9;28432:97;:::i;:::-;28550:39;28580:8;28569:9;28550:39;:::i;:::-;28538:51;;28622:4;28618:9;28611:5;28607:21;28598:30;;28671:4;28661:8;28657:19;28650:5;28647:30;28637:40;;28366:317;;28290:393;;;;;:::o;28689:142::-;28739:9;28772:53;28790:34;28799:24;28817:5;28799:24;:::i;:::-;28790:34;:::i;:::-;28772:53;:::i;:::-;28759:66;;28689:142;;;:::o;28837:75::-;28880:3;28901:5;28894:12;;28837:75;;;:::o;28918:269::-;29028:39;29059:7;29028:39;:::i;:::-;29089:91;29138:41;29162:16;29138:41;:::i;:::-;29130:6;29123:4;29117:11;29089:91;:::i;:::-;29083:4;29076:105;28994:193;28918:269;;;:::o;29193:73::-;29238:3;29193:73;:::o;29272:189::-;29349:32;;:::i;:::-;29390:65;29448:6;29440;29434:4;29390:65;:::i;:::-;29325:136;29272:189;;:::o;29467:186::-;29527:120;29544:3;29537:5;29534:14;29527:120;;;29598:39;29635:1;29628:5;29598:39;:::i;:::-;29571:1;29564:5;29560:13;29551:22;;29527:120;;;29467:186;;:::o;29659:543::-;29760:2;29755:3;29752:11;29749:446;;;29794:38;29826:5;29794:38;:::i;:::-;29878:29;29896:10;29878:29;:::i;:::-;29868:8;29864:44;30061:2;30049:10;30046:18;30043:49;;;30082:8;30067:23;;30043:49;30105:80;30161:22;30179:3;30161:22;:::i;:::-;30151:8;30147:37;30134:11;30105:80;:::i;:::-;29764:431;;29749:446;29659:543;;;:::o;30208:117::-;30262:8;30312:5;30306:4;30302:16;30281:37;;30208:117;;;;:::o;30331:169::-;30375:6;30408:51;30456:1;30452:6;30444:5;30441:1;30437:13;30408:51;:::i;:::-;30404:56;30489:4;30483;30479:15;30469:25;;30382:118;30331:169;;;;:::o;30505:295::-;30581:4;30727:29;30752:3;30746:4;30727:29;:::i;:::-;30719:37;;30789:3;30786:1;30782:11;30776:4;30773:21;30765:29;;30505:295;;;;:::o;30805:1395::-;30922:37;30955:3;30922:37;:::i;:::-;31024:18;31016:6;31013:30;31010:56;;;31046:18;;:::i;:::-;31010:56;31090:38;31122:4;31116:11;31090:38;:::i;:::-;31175:67;31235:6;31227;31221:4;31175:67;:::i;:::-;31269:1;31293:4;31280:17;;31325:2;31317:6;31314:14;31342:1;31337:618;;;;31999:1;32016:6;32013:77;;;32065:9;32060:3;32056:19;32050:26;32041:35;;32013:77;32116:67;32176:6;32169:5;32116:67;:::i;:::-;32110:4;32103:81;31972:222;31307:887;;31337:618;31389:4;31385:9;31377:6;31373:22;31423:37;31455:4;31423:37;:::i;:::-;31482:1;31496:208;31510:7;31507:1;31504:14;31496:208;;;31589:9;31584:3;31580:19;31574:26;31566:6;31559:42;31640:1;31632:6;31628:14;31618:24;;31687:2;31676:9;31672:18;31659:31;;31533:4;31530:1;31526:12;31521:17;;31496:208;;;31732:6;31723:7;31720:19;31717:179;;;31790:9;31785:3;31781:19;31775:26;31833:48;31875:4;31867:6;31863:17;31852:9;31833:48;:::i;:::-;31825:6;31818:64;31740:156;31717:179;31942:1;31938;31930:6;31926:14;31922:22;31916:4;31909:36;31344:611;;;31307:887;;30897:1303;;;30805:1395;;:::o;32206:180::-;32254:77;32251:1;32244:88;32351:4;32348:1;32341:15;32375:4;32372:1;32365:15;32392:147;32493:11;32530:3;32515:18;;32392:147;;;;:::o;32545:386::-;32649:3;32677:38;32709:5;32677:38;:::i;:::-;32731:88;32812:6;32807:3;32731:88;:::i;:::-;32724:95;;32828:65;32886:6;32881:3;32874:4;32867:5;32863:16;32828:65;:::i;:::-;32918:6;32913:3;32909:16;32902:23;;32653:278;32545:386;;;;:::o;32937:271::-;33067:3;33089:93;33178:3;33169:6;33089:93;:::i;:::-;33082:100;;33199:3;33192:10;;32937:271;;;;:::o"
          },
          "gasEstimates": {
            "creation": {
              "codeDepositCost": "3516800",
              "executionCost": "infinite",
              "totalCost": "infinite"
            },
            "external": {
              "UPGRADE_INTERFACE_VERSION()": "infinite",
              "approve(address,uint256)": "infinite",
              "balanceOf(address)": "infinite",
              "create(address,string,bytes)": "infinite",
              "getAgent()": "2632",
              "getApproved(uint256)": "infinite",
              "getVerifier()": "2568",
              "group(address)": "2909",
              "initialize(address,address)": "infinite",
              "isApprovedForAll(address,address)": "infinite",
              "join(address,uint256,bytes)": "infinite",
              "leave(address)": "infinite",
              "name()": "infinite",
              "owner()": "2666",
              "ownerOf(uint256)": "infinite",
              "proxiableUUID()": "infinite",
              "renounceOwnership()": "infinite",
              "safeTransferFrom(address,address,uint256)": "infinite",
              "safeTransferFrom(address,address,uint256,bytes)": "infinite",
              "setAgent(address)": "26959",
              "setApprovalForAll(address,bool)": "infinite",
              "setVerifier(address)": "26956",
              "supportsInterface(bytes4)": "915",
              "symbol()": "infinite",
              "tokenURI(uint256)": "infinite",
              "transferFrom(address,address,uint256)": "infinite",
              "transferOwnership(address)": "infinite",
              "upgradeToAndCall(address,bytes)": "infinite",
              "userToGroup(address)": "2902"
            },
            "internal": {
              "_authorizeUpgrade(address)": "infinite",
              "_baseURI()": "infinite",
              "mint(address,string memory)": "infinite"
            }
          },
          "methodIdentifiers": {
            "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "create(address,string,bytes)": "2e1e07c7",
            "getAgent()": "f551eb19",
            "getApproved(uint256)": "081812fc",
            "getVerifier()": "46657fe9",
            "group(address)": "7b5cf44f",
            "initialize(address,address)": "485cc955",
            "isApprovedForAll(address,address)": "e985e9c5",
            "join(address,uint256,bytes)": "a610e36a",
            "leave(address)": "bedf77a6",
            "name()": "06fdde03",
            "owner()": "8da5cb5b",
            "ownerOf(uint256)": "6352211e",
            "proxiableUUID()": "52d1902d",
            "renounceOwnership()": "715018a6",
            "safeTransferFrom(address,address,uint256)": "42842e0e",
            "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
            "setAgent(address)": "bcf685ed",
            "setApprovalForAll(address,bool)": "a22cb465",
            "setVerifier(address)": "5437988d",
            "supportsInterface(bytes4)": "01ffc9a7",
            "symbol()": "95d89b41",
            "tokenURI(uint256)": "c87b56dd",
            "transferFrom(address,address,uint256)": "23b872dd",
            "transferOwnership(address)": "f2fde38b",
            "upgradeToAndCall(address,bytes)": "4f1ef286",
            "userToGroup(address)": "f3b90296"
          }
        },
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyInGroup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserNotInGroup\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"group\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"group\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GroupJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"group\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"GroupLeaved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"group\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAgent\",\"type\":\"address\"}],\"name\":\"setAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToGroup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DoitRingFriend.sol\":\"DoitRingFriend\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {ERC165Upgradeable} from \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport {IERC721Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\\n    struct ERC721Storage {\\n        // Token name\\n        string _name;\\n\\n        // Token symbol\\n        string _symbol;\\n\\n        mapping(uint256 tokenId => address) _owners;\\n\\n        mapping(address owner => uint256) _balances;\\n\\n        mapping(uint256 tokenId => address) _tokenApprovals;\\n\\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\\n\\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\\n        assembly {\\n            $.slot := ERC721StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC721_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return $._balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        unchecked {\\n            $._balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                $._balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                $._balances[to] += 1;\\n            }\\n        }\\n\\n        $._owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        $._tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        $._operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x48efca78ce4e1a9f74d3ca8539bb53d04b116e507c10cd9e0df6105b8a6ae420\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721Upgradeable} from \\\"../ERC721Upgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"@openzeppelin/contracts/interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorageUpgradeable is Initializable, IERC4906, ERC721Upgradeable {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage\\n    struct ERC721URIStorageStorage {\\n        // Optional mapping for token URIs\\n        mapping(uint256 tokenId => string) _tokenURIs;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721URIStorage\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721URIStorageStorageLocation = 0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900;\\n\\n    function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {\\n        assembly {\\n            $.slot := ERC721URIStorageStorageLocation\\n        }\\n    }\\n\\n    function __ERC721URIStorage_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC721URIStorage_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = $._tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        $._tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x7e68925d3373bd2baa7ac36839c464b2e77b67764201c4e0196d62699ee220b8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\",\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\"},\"contracts/DoitRingFriend.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\\\";\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\n\\r\\ncontract DoitRingFriend is VerifiableUpgradeable, ProxyForwardUpgradeable, ERC721URIStorageUpgradeable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  uint256 private _tokenIds;\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  mapping(address => uint256) public userToGroup;\\r\\n\\r\\n  event GroupCreated(\\r\\n    address indexed creator,\\r\\n    uint256 group,\\r\\n    string tokenURI,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupJoined(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupLeaved(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  error UserAlreadyInGroup();\\r\\n  error UserNotInGroup();\\r\\n\\r\\n  function initialize(address _owner, address _verifier) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __Verifie_init(_verifier);\\r\\n    __UUPSUpgradeable_init();\\r\\n    _tokenIds = 1;\\r\\n  }\\r\\n\\r\\n  function create(address signer, string memory tokenURI, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, tokenURI), signature);\\r\\n\\r\\n    uint256 groupId = mint(signer, tokenURI);\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupCreated(signer, groupId, tokenURI, block.timestamp);\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function join(address signer, uint256 groupId, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, groupId), signature);\\r\\n    if (userToGroup[signer] != 0) {\\r\\n      revert UserAlreadyInGroup();\\r\\n    }\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function leave(address signer) public proxy(signer) {\\r\\n    if (userToGroup[signer] == 0) {\\r\\n      revert UserNotInGroup();\\r\\n    }\\r\\n\\r\\n    uint256 groupId = userToGroup[signer];\\r\\n    delete userToGroup[signer];\\r\\n    emit GroupLeaved(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function group(address user) public view returns(uint256) {\\r\\n    return userToGroup[user];\\r\\n  }\\r\\n\\r\\n  function mint(address user, string memory tokenURI) internal returns (uint256) {\\r\\n    uint256 newItemId = _tokenIds;\\r\\n    _safeMint(user, newItemId);\\r\\n    _setTokenURI(newItemId, tokenURI);\\r\\n    _tokenIds++;\\r\\n    return newItemId;\\r\\n  }\\r\\n  \\r\\n  function _baseURI() internal pure override returns (string memory) {\\r\\n    return \\\"https://gateway.pinata.cloud/ipfs/\\\";\\r\\n  }\\r\\n}\",\"keccak256\":\"0x091e0ca4a9b24eacb00f7ae7c441d2cf3af3ed5eadfdaa9620d89a0783faa6ae\",\"license\":\"MIT\"},\"contracts/utils/ProxyForwardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract ProxyForwardUpgradeable is Initializable {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n\\r\\n  function __Proxyed_init(address initialAgent) internal onlyInitializing {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x66a1d950b88b9506ad6c17883de680adf90c259369c99e7b0860f85a6d00e703\",\"license\":\"MIT\"},\"contracts/utils/VerifiableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract VerifiableUpgradeable is Initializable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n\\r\\n  function __Verifie_init(address initialVerifier) internal onlyInitializing {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x95b6a582524c3ea922cf904d24a6bba25cd2fb8ed9ecf76157a7b7af86277e85\",\"license\":\"MIT\"}},\"version\":1}",
        "storageLayout": {
          "storage": [
            {
              "astId": 9236,
              "contract": "contracts/DoitRingFriend.sol:DoitRingFriend",
              "label": "verifier",
              "offset": 0,
              "slot": "0",
              "type": "t_address"
            },
            {
              "astId": 9060,
              "contract": "contracts/DoitRingFriend.sol:DoitRingFriend",
              "label": "agent",
              "offset": 0,
              "slot": "1",
              "type": "t_address"
            },
            {
              "astId": 7250,
              "contract": "contracts/DoitRingFriend.sol:DoitRingFriend",
              "label": "_tokenIds",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256"
            },
            {
              "astId": 7271,
              "contract": "contracts/DoitRingFriend.sol:DoitRingFriend",
              "label": "userToGroup",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)"
            }
          ],
          "types": {
            "t_address": {
              "encoding": "inplace",
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "encoding": "mapping",
              "key": "t_address",
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32",
              "value": "t_uint256"
            },
            "t_uint256": {
              "encoding": "inplace",
              "label": "uint256",
              "numberOfBytes": "32"
            }
          }
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        },
        "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {ERC165Upgradeable} from \\\"../../utils/introspection/ERC165Upgradeable.sol\\\";\\nimport {IERC721Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\\n    struct ERC721Storage {\\n        // Token name\\n        string _name;\\n\\n        // Token symbol\\n        string _symbol;\\n\\n        mapping(uint256 tokenId => address) _owners;\\n\\n        mapping(address owner => uint256) _balances;\\n\\n        mapping(uint256 tokenId => address) _tokenApprovals;\\n\\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\\n\\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\\n        assembly {\\n            $.slot := ERC721StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC721_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return $._balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        return $._tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        unchecked {\\n            $._balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                $._balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                $._balances[to] += 1;\\n            }\\n        }\\n\\n        $._owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        $._tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        ERC721Storage storage $ = _getERC721Storage();\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        $._operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721Upgradeable} from \\\"../ERC721Upgradeable.sol\\\";\\nimport {Strings} from \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"@openzeppelin/contracts/interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorageUpgradeable is Initializable, IERC4906, ERC721Upgradeable {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721URIStorage\\n    struct ERC721URIStorageStorage {\\n        // Optional mapping for token URIs\\n        mapping(uint256 tokenId => string) _tokenURIs;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC721URIStorage\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC721URIStorageStorageLocation = 0x0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900;\\n\\n    function _getERC721URIStorageStorage() private pure returns (ERC721URIStorageStorage storage $) {\\n        assembly {\\n            $.slot := ERC721URIStorageStorageLocation\\n        }\\n    }\\n\\n    function __ERC721URIStorage_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC721URIStorage_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721Upgradeable, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = $._tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        ERC721URIStorageStorage storage $ = _getERC721URIStorageStorage();\\n        $._tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\\n    function __ERC165_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC165_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC4906.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../token/ERC721/IERC721.sol\\\";\\n\"\n    },\n    \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/ERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"./IERC721.sol\\\";\\nimport {IERC721Receiver} from \\\"./IERC721Receiver.sol\\\";\\nimport {IERC721Metadata} from \\\"./extensions/IERC721Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {Strings} from \\\"../../utils/Strings.sol\\\";\\nimport {IERC165, ERC165} from \\\"../../utils/introspection/ERC165.sol\\\";\\nimport {IERC721Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    mapping(uint256 tokenId => address) private _owners;\\n\\n    mapping(address owner => uint256) private _balances;\\n\\n    mapping(uint256 tokenId => address) private _tokenApprovals;\\n\\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual returns (uint256) {\\n        if (owner == address(0)) {\\n            revert ERC721InvalidOwner(address(0));\\n        }\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\\n        return _requireOwned(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual {\\n        _approve(to, tokenId, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\\n        _requireOwned(tokenId);\\n\\n        return _getApproved(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        // Setting an \\\"auth\\\" arguments enables the `_isAuthorized` check which verifies that the token exists\\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\\n        address previousOwner = _update(to, tokenId, _msgSender());\\n        if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\\n        transferFrom(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     *\\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\\n     */\\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\\n     * particular (ignoring whether it is owned by `owner`).\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        return\\n            spender != address(0) &&\\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\\n     * the `spender` for the specific `tokenId`.\\n     *\\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\\n     * assumption.\\n     */\\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\\n        if (!_isAuthorized(owner, spender, tokenId)) {\\n            if (owner == address(0)) {\\n                revert ERC721NonexistentToken(tokenId);\\n            } else {\\n                revert ERC721InsufficientApproval(spender, tokenId);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\\n     *\\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\\n     * remain consistent with one another.\\n     */\\n    function _increaseBalance(address account, uint128 value) internal virtual {\\n        unchecked {\\n            _balances[account] += value;\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\\n     */\\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\\n        address from = _ownerOf(tokenId);\\n\\n        // Perform (optional) operator check\\n        if (auth != address(0)) {\\n            _checkAuthorized(from, auth, tokenId);\\n        }\\n\\n        // Execute the update\\n        if (from != address(0)) {\\n            // Clear approval. No need to re-authorize or emit the Approval event\\n            _approve(address(0), tokenId, address(0), false);\\n\\n            unchecked {\\n                _balances[from] -= 1;\\n            }\\n        }\\n\\n        if (to != address(0)) {\\n            unchecked {\\n                _balances[to] += 1;\\n            }\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        return from;\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner != address(0)) {\\n            revert ERC721InvalidSender(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        _checkOnERC721Received(address(0), to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal {\\n        address previousOwner = _update(address(0), tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal {\\n        if (to == address(0)) {\\n            revert ERC721InvalidReceiver(address(0));\\n        }\\n        address previousOwner = _update(to, tokenId, address(0));\\n        if (previousOwner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        } else if (previousOwner != from) {\\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\\n        }\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - `to` cannot be the zero address.\\n     * - `from` cannot be the zero address.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\\n        _safeTransfer(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        _checkOnERC721Received(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth) internal {\\n        _approve(to, tokenId, auth, true);\\n    }\\n\\n    /**\\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\\n     * emitted in the context of transfers.\\n     */\\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\\n        // Avoid reading the owner unless necessary\\n        if (emitEvent || auth != address(0)) {\\n            address owner = _requireOwned(tokenId);\\n\\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\\n                revert ERC721InvalidApprover(auth);\\n            }\\n\\n            if (emitEvent) {\\n                emit Approval(owner, to, tokenId);\\n            }\\n        }\\n\\n        _tokenApprovals[tokenId] = to;\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Requirements:\\n     * - operator can't be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        if (operator == address(0)) {\\n            revert ERC721InvalidOperator(operator);\\n        }\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\\n     * Returns the owner.\\n     *\\n     * Overrides to ownership logic should be done to {_ownerOf}.\\n     */\\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        if (owner == address(0)) {\\n            revert ERC721NonexistentToken(tokenId);\\n        }\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     */\\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\\n        if (to.code.length > 0) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                if (retval != IERC721Receiver.onERC721Received.selector) {\\n                    revert ERC721InvalidReceiver(to);\\n                }\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert ERC721InvalidReceiver(to);\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC721} from \\\"../ERC721.sol\\\";\\nimport {Strings} from \\\"../../../utils/Strings.sol\\\";\\nimport {IERC4906} from \\\"../../../interfaces/IERC4906.sol\\\";\\nimport {IERC165} from \\\"../../../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\\n    // defines events and does not include any external function.\\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 tokenId => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireOwned(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string.concat(base, _tokenURI);\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        _tokenURIs[tokenId] = _tokenURI;\\n        emit MetadataUpdate(tokenId);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC721} from \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Address.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/Math.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Muldiv operation overflow.\\n     */\\n    error MathOverflowedMulDiv();\\n\\n    enum Rounding {\\n        Floor, // Toward negative infinity\\n        Ceil, // Toward positive infinity\\n        Trunc, // Toward zero\\n        Expand // Away from zero\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds towards infinity instead\\n     * of rounding towards zero.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (b == 0) {\\n            // Guarantee the same behavior as in a regular Solidity division.\\n            return a / b;\\n        }\\n\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\\n     * denominator == 0.\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\\n     * Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            if (denominator <= prod1) {\\n                revert MathOverflowedMulDiv();\\n            }\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\\n\\n            uint256 twos = denominator & (0 - denominator);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\\n            // works in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\\n     * towards zero.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\\n     */\\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\\n        return uint8(rounding) % 2 == 1;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/SignedMath.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/StorageSlot.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Strings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Math} from \\\"./math/Math.sol\\\";\\nimport {SignedMath} from \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant HEX_DIGITS = \\\"0123456789abcdef\\\";\\n    uint8 private constant ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev The `value` string doesn't fit in the specified `length`.\\n     */\\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toStringSigned(int256 value) internal pure returns (string memory) {\\n        return string.concat(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value)));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        uint256 localValue = value;\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\\n            localValue >>= 4;\\n        }\\n        if (localValue != 0) {\\n            revert StringsInsufficientHexLength(value, length);\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\\n     * representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\"\n    },\n    \"contracts/DoitRingDevice.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\n\\r\\ncontract DoitRingDevice is ProxyForwardUpgradeable, VerifiableUpgradeable, BidirectionalTransfer, UUPSUpgradeable, OwnableUpgradeable {\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  struct DeviceMapping {\\r\\n    uint256 timestamp;\\r\\n    int256 height;\\r\\n    string sncode;\\r\\n  }\\r\\n\\r\\n  struct TokenMapping {\\r\\n    address token;\\r\\n    uint256 tokenId;\\r\\n  }\\r\\n\\r\\n  struct Reward {\\r\\n    address token;\\r\\n    uint256 amount;\\r\\n  }\\r\\n\\r\\n  mapping(address => string) private AddressMapDevice;\\r\\n  mapping(string => TokenMapping) private DeviceMapToken;\\r\\n  mapping(address => mapping(uint256 => DeviceMapping)) private TokenMapDevice;\\r\\n\\r\\n  mapping(string => bool) private ClaimIDsMapClaimed;\\r\\n\\r\\n  error DeviceRegistered();\\r\\n  error DeviceUnregistered();\\r\\n  error DeviceEmpty();\\r\\n  error ClaimInvalidClaimed();\\r\\n  error ERC721IncorrectOwner();\\r\\n\\r\\n  event Claimed(\\r\\n    address indexed token,\\r\\n    uint256 indexed tokenId,\\r\\n    string uid,\\r\\n    string sncode,\\r\\n    address to,\\r\\n    Reward[] rewards,\\r\\n    string memo,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  event Registered(\\r\\n    address indexed token,\\r\\n    uint256 indexed tokenId,\\r\\n    address indexed sender,\\r\\n    string sncode,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  event Binded(\\r\\n    address indexed owner,\\r\\n    string sncode,\\r\\n    int256 blockHeight,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n\\r\\n  function initialize(address _owner, address _verifier) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __Verifie_init(_verifier);\\r\\n    __UUPSUpgradeable_init();\\r\\n  }\\r\\n\\r\\n  function register(address sender, address token, uint256 tokenId, string memory sncode) public proxy(sender) {\\r\\n    if (IERC721(token).ownerOf(tokenId) != sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n    if (bytes(sncode).length == 0)\\r\\n      revert DeviceEmpty();\\r\\n    if (DeviceMapToken[sncode].token != address(0))\\r\\n      revert DeviceRegistered();\\r\\n\\r\\n    TokenMapDevice[token][tokenId] = DeviceMapping(block.timestamp, int(block.number), sncode);\\r\\n    DeviceMapToken[sncode] = TokenMapping(token, tokenId);\\r\\n    \\r\\n    emit Registered(\\r\\n      token,\\r\\n      tokenId,\\r\\n      sender,\\r\\n      sncode, \\r\\n      int(block.number), \\r\\n      block.timestamp\\r\\n    );\\r\\n\\r\\n    AddressMapDevice[sender] = sncode;\\r\\n\\r\\n    emit Binded(sender, sncode, int(block.number), block.timestamp);\\r\\n  }\\r\\n\\r\\n  function rebind(address sender, string memory sncode) public proxy(sender) {\\r\\n    if (bytes(sncode).length == 0)\\r\\n      revert DeviceEmpty();\\r\\n    if (DeviceMapToken[sncode].token == address(0))\\r\\n      revert DeviceUnregistered();\\r\\n    if (IERC721(DeviceMapToken[sncode].token)\\r\\n       .ownerOf(DeviceMapToken[sncode].tokenId) != msg.sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n\\r\\n    AddressMapDevice[msg.sender] = sncode;\\r\\n\\r\\n    emit Binded(msg.sender, sncode, int(block.number), block.timestamp);\\r\\n  }\\r\\n\\r\\n  function claim(\\r\\n    address sender,\\r\\n    string memory uid,\\r\\n    string memory sncode,\\r\\n    Reward[] memory rewards,\\r\\n    bytes memory signature, \\r\\n    string memory memo\\r\\n  ) public proxy(sender) {\\r\\n    TokenMapping memory tmapping = DeviceMapToken[sncode];\\r\\n    if (tmapping.token == address(0))\\r\\n      revert DeviceUnregistered();\\r\\n    if (IERC721(tmapping.token).ownerOf(tmapping.tokenId) != sender)\\r\\n      revert ERC721IncorrectOwner();\\r\\n    if (ClaimIDsMapClaimed[uid])\\r\\n      revert ClaimInvalidClaimed();\\r\\n\\r\\n    bytes32 rewardsHash = keccak256(abi.encode(rewards));\\r\\n    verify(abi.encodePacked(uid, sender, sncode, rewardsHash), signature);\\r\\n\\r\\n    ClaimIDsMapClaimed[uid] = true;\\r\\n\\r\\n    for (uint256 i = 0; i < rewards.length; i++) {\\r\\n      if (rewards[i].amount > 0)\\r\\n        transfer(\\r\\n          address(this),\\r\\n          sender,\\r\\n          rewards[i].token, \\r\\n          rewards[i].amount\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    emit Claimed(\\r\\n      tmapping.token,\\r\\n      tmapping.tokenId, \\r\\n      uid,\\r\\n      sncode,\\r\\n      sender, \\r\\n      rewards,\\r\\n      memo,\\r\\n      int(block.number),\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function getTokenInAddress(address user) public view returns (TokenMapping memory) {\\r\\n    return DeviceMapToken[AddressMapDevice[user]];\\r\\n  }\\r\\n\\r\\n  function getTokenInDevice(string memory sncode) public view returns (TokenMapping memory) {\\r\\n    return DeviceMapToken[sncode];\\r\\n  }\\r\\n\\r\\n  function getDeviceInToken(address token, uint256 tokenId) public view returns (DeviceMapping memory) {\\r\\n    return TokenMapDevice[token][tokenId];\\r\\n  }\\r\\n\\r\\n  function getDeviceInAddress(address user)  public view returns (string memory) {\\r\\n    return AddressMapDevice[user];\\r\\n  }\\r\\n  \\r\\n  function existsBinded(address token, uint256 tokenId) public view returns (bool) {\\r\\n    return bytes(getDeviceInToken(token, tokenId).sncode).length != 0;\\r\\n  }\\r\\n\\r\\n  function withdraw(address token, uint256 amount) public onlyOwner() {\\r\\n    transfer(address(this), msg.sender, token, amount);\\r\\n  }\\r\\n\\r\\n  function __migrate_Claimed(\\r\\n    address token, uint256 tokenId, string memory uid, string memory sncode,\\r\\n    address to, Reward[] memory rewards, string memory memo,\\r\\n    int256 blockHeight, uint256 timestamp\\r\\n  ) public onlyOwner {\\r\\n    ClaimIDsMapClaimed [uid] = true;\\r\\n    emit Claimed(\\r\\n      token,\\r\\n      tokenId,\\r\\n      uid,\\r\\n      sncode,\\r\\n      to,\\r\\n      rewards,\\r\\n      memo,\\r\\n      blockHeight,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_Registered(\\r\\n    address token, uint256 tokenId, address sender,\\r\\n    string memory sncode, int256 blockHeight, uint256 timestamp\\r\\n  ) public onlyOwner {\\r\\n    TokenMapDevice[token][tokenId] = DeviceMapping(timestamp, blockHeight, sncode);\\r\\n    DeviceMapToken[sncode] = TokenMapping(token, tokenId);\\r\\n    AddressMapDevice[sender] = sncode;\\r\\n    emit Registered(\\r\\n      token,\\r\\n      tokenId,\\r\\n      sender,\\r\\n      sncode,\\r\\n      blockHeight,\\r\\n      timestamp\\r\\n    );\\r\\n    emit Binded(sender, sncode, blockHeight, timestamp);\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/DoitRingFriend.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\\\";\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\n\\r\\ncontract DoitRingFriend is VerifiableUpgradeable, ProxyForwardUpgradeable, ERC721URIStorageUpgradeable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  uint256 private _tokenIds;\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  mapping(address => uint256) public userToGroup;\\r\\n\\r\\n  event GroupCreated(\\r\\n    address indexed creator,\\r\\n    uint256 group,\\r\\n    string tokenURI,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupJoined(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n  event GroupLeaved(\\r\\n    address indexed user,\\r\\n    uint256 group,\\r\\n    uint256 timestamp\\r\\n  );\\r\\n\\r\\n  error UserAlreadyInGroup();\\r\\n  error UserNotInGroup();\\r\\n\\r\\n  function initialize(address _owner, address _verifier) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __Verifie_init(_verifier);\\r\\n    __UUPSUpgradeable_init();\\r\\n    _tokenIds = 1;\\r\\n  }\\r\\n\\r\\n  function create(address signer, string memory tokenURI, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, tokenURI), signature);\\r\\n\\r\\n    uint256 groupId = mint(signer, tokenURI);\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupCreated(signer, groupId, tokenURI, block.timestamp);\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function join(address signer, uint256 groupId, bytes memory signature) public proxy(signer) {\\r\\n    verify(abi.encodePacked(signer, groupId), signature);\\r\\n    if (userToGroup[signer] != 0) {\\r\\n      revert UserAlreadyInGroup();\\r\\n    }\\r\\n\\r\\n    userToGroup[signer] = groupId;\\r\\n    emit GroupJoined(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function leave(address signer) public proxy(signer) {\\r\\n    if (userToGroup[signer] == 0) {\\r\\n      revert UserNotInGroup();\\r\\n    }\\r\\n\\r\\n    uint256 groupId = userToGroup[signer];\\r\\n    delete userToGroup[signer];\\r\\n    emit GroupLeaved(signer, groupId, block.timestamp);\\r\\n  }\\r\\n\\r\\n  function group(address user) public view returns(uint256) {\\r\\n    return userToGroup[user];\\r\\n  }\\r\\n\\r\\n  function mint(address user, string memory tokenURI) internal returns (uint256) {\\r\\n    uint256 newItemId = _tokenIds;\\r\\n    _safeMint(user, newItemId);\\r\\n    _setTokenURI(newItemId, tokenURI);\\r\\n    _tokenIds++;\\r\\n    return newItemId;\\r\\n  }\\r\\n  \\r\\n  function _baseURI() internal pure override returns (string memory) {\\r\\n    return \\\"https://gateway.pinata.cloud/ipfs/\\\";\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/DoitRingStaked.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\n\\r\\nimport \\\"./utils/VerifiableUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\n\\r\\ncontract DoitRingStaked is VerifiableUpgradeable, ProxyForwardUpgradeable, BidirectionalTransfer, UUPSUpgradeable, OwnableUpgradeable {\\r\\n\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n  uint256 locking;\\r\\n  mapping(address => Stake[]) public Stakes;\\r\\n  mapping(address => mapping(uint128 => uint256)) public Cancells;\\r\\n\\r\\n  error StakeEmpty();\\r\\n  error StakeAmountEmpty();\\r\\n  error StakeCancelEmpty();\\r\\n  error StakeCancelUnexpired();\\r\\n  \\r\\n  event StakeCreated(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeCancelled(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeClaimed(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  struct Stake {\\r\\n    uint index;\\r\\n    address staker;\\r\\n    address token;\\r\\n    uint amount;\\r\\n    uint timestamp;\\r\\n  }\\r\\n\\r\\n  function initialize(address _owner) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __UUPSUpgradeable_init();\\r\\n    locking = 30 * 86400;\\r\\n  }\\r\\n\\r\\n  function create(address sender, address token, uint amount) public proxy(sender) {\\r\\n    if (amount == 0)\\r\\n      revert StakeAmountEmpty();\\r\\n\\r\\n    uint index = Stakes[sender].length;\\r\\n\\r\\n    Stake memory stake = Stake(index, sender, token, amount, block.timestamp);\\r\\n    Stakes[sender].push(stake);\\r\\n\\r\\n    transfer(sender, address(this), token, amount);\\r\\n\\r\\n    emit StakeCreated(\\r\\n      sender,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function cancel(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n\\r\\n    Cancells[sender][index] = block.timestamp + locking;\\r\\n\\r\\n    emit StakeCancelled(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount,\\r\\n      block.timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function claim(address sender, uint128 index) public proxy(sender) {\\r\\n    if (Stakes[sender][index].amount == 0)\\r\\n      revert StakeEmpty();\\r\\n    if (Cancells[sender][index] == 0)\\r\\n      revert StakeCancelEmpty();\\r\\n    if (Cancells[sender][index] > block.timestamp)\\r\\n      revert StakeCancelUnexpired();\\r\\n\\r\\n    transfer(\\r\\n      address(this),\\r\\n      sender,\\r\\n      Stakes[sender][index].token,\\r\\n      Stakes[sender][index].amount\\r\\n    );\\r\\n\\r\\n   emit StakeClaimed(\\r\\n      sender,\\r\\n      index,\\r\\n      Stakes[sender][index].token, \\r\\n      Stakes[sender][index].amount, \\r\\n      block.timestamp\\r\\n    );\\r\\n\\r\\n    delete Stakes[sender][index];\\r\\n    delete Cancells[sender][index];\\r\\n  }\\r\\n\\r\\n  function stakes(address owner) public view returns(Stake[] memory) {\\r\\n    return Stakes[owner];\\r\\n  }\\r\\n\\r\\n  function status(address owner, uint128 index) public view returns(uint16) {\\r\\n    if (Cancells[owner][index] != 0) {\\r\\n      if (Cancells[owner][index] > block.timestamp)\\r\\n        return 3;\\r\\n      else\\r\\n        return 2;\\r\\n    }\\r\\n    if (Stakes[owner][index].amount != 0)\\r\\n      return 1;\\r\\n    else\\r\\n      return 0;\\r\\n  }\\r\\n\\r\\n  function length(address owner) public view returns(uint256) {\\r\\n   return Stakes[owner].length;\\r\\n  }\\r\\n\\r\\n  function expiration(address owner, uint128 index) public view returns(uint256) {\\r\\n    return Cancells[owner][index];\\r\\n  }\\r\\n\\r\\n  function exists(address owner, uint128 index) public view returns(bool) {\\r\\n    return Stakes[owner][index].amount != 0;\\r\\n  }\\r\\n\\r\\n  function setLocking(uint256 duration) public onlyOwner() {\\r\\n    locking = duration;\\r\\n  }\\r\\n\\r\\n  function __migrate_stakes(address owner, Stake[] memory stakes_) public onlyOwner() {\\r\\n    delete Stakes[owner];\\r\\n    for (uint256 index = 0; index < stakes_.length; index++) {\\r\\n      Stakes[owner].push(stakes_[index]);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  function __migrate_StakeCreated(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCreated(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeCancelled(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeCancelled(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function __migrate_StakeClaimed(address owner, uint256 index, address token, uint amount, uint timestamp) public onlyOwner() {\\r\\n    emit StakeClaimed(\\r\\n      owner,\\r\\n      index,\\r\\n      token,\\r\\n      amount,\\r\\n      timestamp\\r\\n    );\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/erc20/Health.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../utils/ProxyForward.sol\\\";\\r\\n\\r\\ncontract ERC20WithAgent is ERC20, ProxyForward, Ownable {\\r\\n    constructor(\\r\\n        address owner,\\r\\n        string memory name,\\r\\n        string memory symbol\\r\\n    ) ERC20(name, symbol) Ownable(owner) ProxyForward(owner) {\\r\\n        _mint(owner, 40000000 * 10 ** 18);\\r\\n    }\\r\\n\\r\\n    function mint(address account, uint256 amount) public onlyOwner {\\r\\n        _mint(account, amount);\\r\\n    }\\r\\n\\r\\n    function proxy_approve(\\r\\n        address signer,\\r\\n        address spender,\\r\\n        uint256 value\\r\\n    ) public proxy(signer) {\\r\\n        _approve(signer, spender, value);\\r\\n    }\\r\\n}\\r\\n\"\n    },\n    \"contracts/erc20/USDT.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract USDT is ERC20, Ownable {\\r\\n  constructor(address _owner) ERC20(\\\"USDT\\\", \\\"USDT\\\") Ownable(msg.sender) {\\r\\n    _mint(_owner, 40000000 * 10 ** 18);\\r\\n  }\\r\\n\\r\\n  function mint(address account,  uint256 amount) public onlyOwner {\\r\\n    _mint(account, amount);\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/erc721/DoitRingNFT.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../utils/ProxyForward.sol\\\";\\r\\n\\r\\ncontract DoitRingNFT is ERC721, ProxyForward, Ownable {\\r\\n  constructor(address _owner) ERC721(\\\"DoitRingNFT\\\", \\\"DoitRingNFT\\\") Ownable(_owner) ProxyForward(_owner) {\\r\\n    _tokenIdCounter = 1;\\r\\n    totalSupply = 1;\\r\\n  }\\r\\n\\r\\n  uint256 private _tokenIdCounter;\\r\\n  uint128 public totalSupply;\\r\\n\\r\\n  function mint(address signer) public proxy(signer) {\\r\\n    uint256 tokenId = _tokenIdCounter;\\r\\n    _safeMint(signer, tokenId);\\r\\n    _tokenIdCounter += 1;\\r\\n    totalSupply += 1;\\r\\n  }\\r\\n\\r\\n  function __migrate_mint(address signer, uint256 tokenId) public onlyOwner {\\r\\n    _safeMint(signer, tokenId);\\r\\n    _tokenIdCounter += 1;\\r\\n    totalSupply += 1;\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/interfaces/IStake.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\ninterface IStake {\\r\\n\\r\\n  event StakeCreated(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeCancelled(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  event StakeClaimed(\\r\\n    address indexed staker,\\r\\n    uint indexed index,\\r\\n    address token,\\r\\n    uint amount,\\r\\n    uint timestamp\\r\\n  );\\r\\n\\r\\n  struct Stake {\\r\\n    uint index;\\r\\n    address staker;\\r\\n    address token;\\r\\n    uint amount;\\r\\n    uint timestamp;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/Savings.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/ProxyForwardUpgradeable.sol\\\";\\r\\nimport \\\"./utils/BidirectionalTransfer.sol\\\";\\r\\n\\r\\ncontract Savings is Initializable, BidirectionalTransfer, ProxyForwardUpgradeable, UUPSUpgradeable, OwnableUpgradeable, ReentrancyGuardUpgradeable  {\\r\\n  /// @custom:oz-upgrades-unsafe-allow constructor\\r\\n  constructor() { _disableInitializers(); }\\r\\n  function _authorizeUpgrade(address) internal override onlyOwner {}\\r\\n\\r\\n\\r\\n  event Deposited(\\r\\n    address indexed sender,\\r\\n    address indexed receiver,\\r\\n    address token,\\r\\n    uint256 amount,\\r\\n    string memo\\r\\n  );\\r\\n\\r\\n  event Withdrawn(\\r\\n    address indexed receiver,\\r\\n    address token,\\r\\n    uint256 amount\\r\\n  );\\r\\n\\r\\n  mapping(address => mapping(address => uint256)) Treasury; \\r\\n\\r\\n  function initialize(address _owner) public initializer {\\r\\n    __Ownable_init(_owner);\\r\\n    __Proxyed_init(_owner);\\r\\n    __UUPSUpgradeable_init();\\r\\n  }\\r\\n\\r\\n  function balanceOf(address owner, address token) public view returns(uint256) {\\r\\n    return Treasury[owner][token];\\r\\n  }\\r\\n\\r\\n  function deposit(address owner, address token, uint256 amount, string memory memo) external payable {\\r\\n    Treasury[owner][token] += amount;\\r\\n    transfer(msg.sender, address(this), token, amount);\\r\\n    emit Deposited(msg.sender, owner, token, amount, memo);\\r\\n  }\\r\\n\\r\\n  function withdraw(address owner, address token) external payable proxy(owner) {\\r\\n    transfer(address(this), owner, token, Treasury[owner][token]);\\r\\n    emit Withdrawn(owner, token, Treasury[owner][token]);\\r\\n    delete Treasury[owner][token];\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/Storage.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\ncontract Storage is Initializable {\\r\\n  mapping(string => mapping(string => string)) private data;\\r\\n\\r\\n  event StorageUpdated (\\r\\n    address indexed sender,\\r\\n    string indexed storeIndexed,\\r\\n    string indexed keyIndexed,\\r\\n    string store,\\r\\n    string key,\\r\\n    string value\\r\\n  );\\r\\n\\r\\n  function initialize() public initializer {}\\r\\n\\r\\n  function setStorage(string memory store, string[][] memory pairs) public {\\r\\n    for (uint256 i = 0; i < pairs.length; i++)\\r\\n      setItem(store, pairs[i][0], pairs[i][1]);\\r\\n  }\\r\\n\\r\\n  function getStorage(\\r\\n    string memory store, string[] memory keys\\r\\n  ) public view returns (string[] memory, string[] memory) {\\r\\n    uint256 length = size(store, keys);\\r\\n\\r\\n    string[] memory _keys = new string[](length);\\r\\n    string[] memory values = new string[](length);\\r\\n\\r\\n    for (uint256 i = 0; i < keys.length; i++) {\\r\\n      if (bytes(data[store][keys[i]]).length == 0)\\r\\n        continue;\\r\\n      values[i] = data[store][keys[i]];\\r\\n      _keys[i] = keys[i];\\r\\n    }\\r\\n    \\r\\n    return (_keys, values);\\r\\n  }\\r\\n\\r\\n  function setItem(\\r\\n    string memory store,\\r\\n    string memory key,\\r\\n    string memory value\\r\\n  ) public {\\r\\n    data[store][key] = value;\\r\\n    emit StorageUpdated(\\r\\n      msg.sender,\\r\\n      store,\\r\\n      key,\\r\\n      store,\\r\\n      key,\\r\\n      value\\r\\n    );\\r\\n  }\\r\\n\\r\\n  function getItem(\\r\\n    string memory store,\\r\\n    string memory key\\r\\n  ) public view returns (string memory) {\\r\\n    if (bytes(data[store][key]).length == 0)\\r\\n     return '';\\r\\n    return data[store][key];\\r\\n  }\\r\\n\\r\\n  function size(string memory store, string[] memory keys) public view returns (uint256) {\\r\\n    uint256 value = 0;\\r\\n    for (uint256 i = 0; i < keys.length; i++) {\\r\\n      if (bytes(data[store][keys[i]]).length == 0)\\r\\n        continue;\\r\\n      value++;\\r\\n    }\\r\\n    return value;\\r\\n  }\\r\\n\\r\\n  function has(string memory store, string memory key) public view returns (bool) {\\r\\n    return bytes(data[store][key]).length != 0;\\r\\n  }\\r\\n}\\r\\n\"\n    },\n    \"contracts/utils/BidirectionalTransfer.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\ncontract BidirectionalTransfer {\\r\\n  error TransferFailed();\\r\\n  error TransferUnauthorized();\\r\\n\\r\\n  receive() external payable {}\\r\\n\\r\\n  function erc20Transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    bytes memory data;\\r\\n    if (from == address(this)) {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transfer(address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, to, amount);\\r\\n    } else {\\r\\n      bytes4 method = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"));\\r\\n      data = abi.encodeWithSelector(method, from, to, amount);\\r\\n    }\\r\\n    (bool sent,) = token.call(data);\\r\\n    if (!sent)\\r\\n     revert TransferFailed();\\r\\n  }\\r\\n  \\r\\n  function etherTransfer(address from, address to, uint256 amount) internal {\\r\\n    if (from == address(this)) {\\r\\n      (bool sent, ) = to.call{ value: amount }(\\\"\\\");\\r\\n      if (!sent)\\r\\n        revert TransferFailed();\\r\\n    } else {\\r\\n      if (from != msg.sender)\\r\\n        revert TransferUnauthorized();\\r\\n      if (msg.value != amount)\\r\\n        revert TransferFailed();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function transfer(address from, address to, address token, uint256 amount) internal {\\r\\n    if (token != address(0))\\r\\n      erc20Transfer(from, to, token, amount);\\r\\n    else\\r\\n      etherTransfer(from, to, amount);\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/ProxyForward.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n\\r\\nabstract contract ProxyForward {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  constructor(address initialAgent) {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/ProxyForwardUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract ProxyForwardUpgradeable is Initializable {\\r\\n  address internal agent;\\r\\n\\r\\n  error InvalidAccount();\\r\\n\\r\\n  modifier proxy(address signer) {\\r\\n    if (signer != msg.sender && msg.sender != agent)\\r\\n      revert InvalidAccount();\\r\\n    _;\\r\\n  }\\r\\n\\r\\n  function getAgent() public view returns (address) {\\r\\n    return agent;\\r\\n  }\\r\\n\\r\\n  function setAgent(address newAgent) public virtual {\\r\\n    require(msg.sender == agent, \\\"Not Agent Account\\\");\\r\\n    agent = newAgent;\\r\\n  }\\r\\n\\r\\n  function __Proxyed_init(address initialAgent) internal onlyInitializing {\\r\\n    agent = initialAgent;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/Verifiable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nabstract contract Verifiable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  constructor(address initialVerifier) {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n}\"\n    },\n    \"contracts/utils/VerifiableUpgradeable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\nabstract contract VerifiableUpgradeable is Initializable {\\r\\n  address internal verifier;\\r\\n\\r\\n  error InvalidSignature();\\r\\n\\r\\n  function recover(bytes32 message, bytes memory signature) internal pure returns (address) {\\r\\n    require(signature.length == 65, \\\"invalid signature length\\\");\\r\\n    bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", message));\\r\\n    bytes32 r;\\r\\n    bytes32 s;\\r\\n    uint8 v;\\r\\n    assembly {\\r\\n      r := mload(add(signature, 0x20))\\r\\n      s := mload(add(signature, 0x40))\\r\\n      v := byte(0, mload(add(signature, 0x60)))\\r\\n    }\\r\\n    \\r\\n    return ecrecover(digest, v, r, s);\\r\\n  }\\r\\n\\r\\n  function verify(bytes memory message, bytes memory signature) internal view virtual {\\r\\n    if (recover(keccak256(message), signature) != verifier) {\\r\\n      revert InvalidSignature();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function getVerifier() public view returns (address) {\\r\\n    return verifier;\\r\\n  }\\r\\n\\r\\n  function setVerifier(address newVerifier) public virtual {\\r\\n    require(msg.sender == verifier, \\\"Not Verifier Account\\\");\\r\\n    verifier = newVerifier;\\r\\n  }\\r\\n\\r\\n  function __Verifie_init(address initialVerifier) internal onlyInitializing {\\r\\n    verifier = initialVerifier;\\r\\n  }\\r\\n}\"\n    }\n  },\n  \"settings\": {\n    \"evmVersion\": \"paris\",\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"storageLayout\",\n          \"devdoc\",\n          \"userdoc\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
        "solcInputHash": "7e579c2a968d07aea0f2802d42f7a480"
      }
    }
  ]
}
